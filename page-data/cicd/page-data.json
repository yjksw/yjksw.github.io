{"componentChunkName":"component---src-templates-blog-template-js","path":"/cicd/","result":{"data":{"cur":{"id":"f02c63aa-3997-5d83-92ac-51b2edd0b27e","html":"<h2 id=\"cicd-의-필요성\" style=\"position:relative;\"><a href=\"#cicd-%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"cicd 의 필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI/CD 의 필요성</h2>\n<p>개발 후 운영을 하기까지 다음 그림의 프로세스가 반복해서 진행된다. <br></p>\n<p>즉, 개발 프로세스(Dev)의 일종으로 개발을 하여 빌드를 하고 운영 프로세스(Ops)의 일종으로 릴리즈, 배포, 모니터링이 반복된다. 점점 이것을 짧은 쥐기로 반복하는 <strong>DevOps</strong>가 등장하면서 CI/CD가 중요해졌다. <br></p>\n<p align=\"center\"><img width=\"85%\" src=\"https://user-images.githubusercontent.com/63405904/134931614-8317ab00-fa6f-4a28-9e6c-ad77beaa3429.png\"></p>\n<h2 id=\"ci---continuous-integration\" style=\"position:relative;\"><a href=\"#ci---continuous-integration\" aria-label=\"ci   continuous integration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI - Continuous Integration</h2>\n<ul>\n<li>\n<p><strong>정의:</strong> 지속적으로 퀄리티 컨트롤을 적용하는 프로세스를 실행하는 것</p>\n<p>어플리케이션 코드에 변경이 생기더라도 정기적인 빌드와 테스트를 통과하여 하나의 레포지토리에 관리가 되는 것</p>\n</li>\n<li>\n<p><strong>예시:</strong></p>\n<ul>\n<li>SCM(Source Code Management): 깃헙 레포 하나로 소스코드를 머지하고 충도를 처리하는 과정</li>\n<li>테스트 코드를 통해서 유효성을 검증하는 과정</li>\n</ul>\n</li>\n<li>\n<p><strong>장점</strong>:</p>\n<ul>\n<li>소스코드를 Ready-to-run 상태로 유지할 수 있다. 이 부분은 혼자 개발할 경우 장점을 느끼기 어렵지만 주로 여러명이서 협업하여 개발을 하기 때문에 중간에 합류한 그 누구도 빌드가 가능한 소스코드를 공유받을 수 있다.</li>\n<li>빌드가 가능한 소스코드를 받으면 합류한 사람과의 소통비용이 감소해 생산성이 올라간다.</li>\n<li>미루었다가 병합하는 과정을 거치는 것보다 짧은 주기로 바로바로 빌드 가능한 상태로 업데이트하는 것이  시간 효율적이며 소스코드의 퀄리티도 유지된다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"cd---continuous-delivery--continuous-deployment\" style=\"position:relative;\"><a href=\"#cd---continuous-delivery--continuous-deployment\" aria-label=\"cd   continuous delivery  continuous deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CD - Continuous Delivery &#x26; Continuous Deployment</h2>\n<ul>\n<li>Continuous Delivery - CI 과정 후 유효성 검증이 끝난 코드를 레포지토리에 올리는 것을 자동화 (즉, 프로덕션 레벨로 배포할 수 있는 소스코드를 자동으로 올리는 것)</li>\n<li>Continous Deployment - 위 소스코드를 프로덕션 레벨로 릴리즈 하는 것. 쉽게 말해서 수정한 어플리케이션이 몇분 이내로 재배포되어 자동 실행될 수 있도록 하는 것.</li>\n<li>\n<p><strong>장점</strong>:</p>\n<ul>\n<li>개발 → 배포 과정이 간단하여 사용자 피드백을 빠르게 받을 수 있다. 즉, 장애 대응을 빠르게 할 수 있다.</li>\n<li>여러 서버를 사용하는 경우 자동화 되어 있지 않으면 개별 서버에서 각각 실행을 해야하기 때문에 배포에 소요되는 시간이 굉장히 길다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"cicd-툴\" style=\"position:relative;\"><a href=\"#cicd-%ED%88%B4\" aria-label=\"cicd 툴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI/CD 툴</h2>\n<ul>\n<li>Jenkins - 직접 설치해서 서버 운용해야하고 자바 분야에서 자주 사용된다.</li>\n<li>Circle CI</li>\n<li>Travis CI</li>\n</ul>\n<h3 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h3>\n<ul>\n<li><a href=\"https://minz.dev/18\">https://minz.dev/18</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#cicd-%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\">CI/CD 의 필요성</a></li>\n<li><a href=\"#ci---continuous-integration\">CI - Continuous Integration</a></li>\n<li><a href=\"#cd---continuous-delivery--continuous-deployment\">CD - Continuous Delivery &#x26; Continuous Deployment</a></li>\n<li>\n<p><a href=\"#cicd-%ED%88%B4\">CI/CD 툴</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"CI/CD 의 필요성 개발 후 운영을 하기까지 다음 그림의 프로세스가 반복해서 진행된다.  즉, 개발 프로세스(Dev)의 일종으로 개발을 하여 빌드를 하고 운영 프로세스(Ops)의 일종으로 릴리즈, 배포, 모니터링이 반복된다. 점점 이것을 짧은 쥐기로 반복하는 DevOps가 등장하면서 CI/CD가 중요해졌다.  CI - Continuous Integration 정의: 지속적으로 퀄리티 컨트롤을 적용하는 프로세스를 실행하는 것 어플리케이션 코드에 변경이 생기더라도 정기적인 빌드와 테스트를 통과하여 하나의 레포지토리에 관리가 되는 것 예시: SCM(Source Code Management): 깃헙 레포 하나로 소스코드를 머지하고 충도를 처리하는 과정 테스트 코드를 통해서 유효성을 검증하는 과정 장점: 소스코드를 Ready-to-run 상태로 유지할 수 있다. 이 부분은 혼자 개발할 경우 장점을 느끼기 어렵지만 주로 여러명이서 협업하여 개발을 하기 때문에 중간에 합류한 그 누구도 빌드가…","frontmatter":{"date":"May 17, 2021","title":"CI/CD란 무엇일까","categories":"웹 운영","author":"코다","emoji":"🖥"},"fields":{"slug":"/cicd/"}},"next":{"id":"9232cd7a-a50f-523e-bfe2-44f2f530d067","html":"<h2 id=\"트랜잭션을-사용하는-이유\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"트랜잭션을 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트랜잭션을 사용하는 이유</h2>\n<p>트랜잭션을 사용하면 각각의 단위로 나누어져있는 작업의 단위를 하나로 합칠 수 있다. 즉, 일련의 연산들을 하나의 독립된 작업 단위로 보고 <strong>하나</strong>로 취급하기 위해서 사용하는 것이다. <br></p>\n<p>언제 일련의 연산들을 하나로 봐야 할 때가 생길까? <br></p>\n<p>예를 들어서 돈을 송금하는 시스템이 있다고 가정해보자. 계좌A에서 계좌B로 돈을 송금해야 할 때, 계좌A에 충분한 잔액이 있는 것을 확인하고 돈을 송금하기 위해서 돈을 차감했다. 그리고 계좌B에 입금을 하려고 하는 순간 예외가 발생하면서 입금을 하지 못했다. 그런데 계좌A에서는 여전히 돈이 차감된 상태이다. 중간에 송금하려고 했던 돈이 사라지게 된 것이다. <br></p>\n<p>이때, 위의 과정을 <code class=\"language-text\">@Transactional</code>로 관리를 하게 된다면 위의 여러 작업들을 하나의 단위로 보고 중간에 예외가 발생한다면 위에서 실행중이던 작업을 한꺼번에 롤백해준다. </p>\n<h2 id=\"트랜잭션-기본-방법\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EA%B8%B0%EB%B3%B8-%EB%B0%A9%EB%B2%95\" aria-label=\"트랜잭션 기본 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트랜잭션 기본 방법</h2>\n<p>2개 이상의 쿼리를 하나의 커넥션으로 묶어 DB에 전송하고, 에러가 발생할 경우 자동으로 모든 과정을 rollback 한다. 따라서 트랜잭션은 하나 이상의 쿼리를 처리할 때 동일한 connection 객체를 공유하도록 한다. <br></p>\n<p>트랜잭션은 코드기반의 트랜잭션(Programmactic Transaction)과 선언적 트랜잭션(Declarative Transaction)을 지원한다. Spring에서는 어노테이션을 활용한 선언적 트랜잭션을 주로 사용한다. </p>\n<h2 id=\"트랜잭션의-성질\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%98-%EC%84%B1%EC%A7%88\" aria-label=\"트랜잭션의 성질 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트랜잭션의 성질</h2>\n<p>워낙 많은 곳에서 트랜잭션의 성질에 대해서 말하지만 기록을 위해서 그대로 한번 옮겨보았다. </p>\n<ul>\n<li>원자성(Atomicity) : 한 트랜잭션 내에서 실행한 작업들을 하나로 간주</li>\n<li>일관성(Consistency) : 일관성 있는 데이터베이스 상태를 유지</li>\n<li>격리성(isolation) : 동시에 실행되는 트랜잭션들이 서로 영향을 미치지 않도록 격리. 따라서 트랜잭션의 동시 접근 데이터에 대한 제어가 필요함</li>\n<li>지속성(Durability) : 트랜잭션 성공시 결과가 항상 저장</li>\n</ul>\n<h2 id=\"다수의-트랜잭션-실행-시-발생-가능한-문제상황\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%88%98%EC%9D%98-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%8B%A4%ED%96%89-%EC%8B%9C-%EB%B0%9C%EC%83%9D-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%AC%B8%EC%A0%9C%EC%83%81%ED%99%A9\" aria-label=\"다수의 트랜잭션 실행 시 발생 가능한 문제상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다수의 트랜잭션 실행 시 발생 가능한 문제상황</h2>\n<p><strong>Dirty Read</strong></p>\n<ul>\n<li>A가 변경 후 커밋하지 않은 상태에서 B가 조회를 한다.</li>\n<li>A가 중간에 문제가 생겨서 롤백되었으면 B는 잘못된 값을 조회한 상황이 된다.</li>\n</ul>\n<p><strong>Non-Repeatable Read</strong> </p>\n<ul>\n<li>A가 반복적으로 쿼리를 사용하는 사이에 B가 값을 변경하고 커밋을 해서, A의 쿼리 중간에 결과가 달라지는 상황이 된다.</li>\n<li>한 트랜잭션 안에서 같은 쿼리를 두번 실행했을 때, 데이터 불일치 문제 발생.</li>\n</ul>\n<p><strong>Phantom Read</strong> </p>\n<ul>\n<li>A가 특정 범위를 조회하는 쿼리를 두번 이상 실행할 때, B가 중간에 값을 추가해서 이후 실행된 A의 쿼리에 이전에 없던 유령 데이터가 생기는 문제가 발상한다.</li>\n</ul>\n<h2 id=\"문제상황을-해결하기-위한-격리수준\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%83%81%ED%99%A9%EC%9D%84-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EA%B2%A9%EB%A6%AC%EC%88%98%EC%A4%80\" aria-label=\"문제상황을 해결하기 위한 격리수준 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제상황을 해결하기 위한 격리수준</h2>\n<p><strong>사용방법</strong></p>\n<p><code class=\"language-text\">@Transactional(isolation = Isolation.DEFAULT)</code></p>\n<p><strong>DEFAULT</strong></p>\n<ul>\n<li>기본 격리 수준이며 DB의 격리수준을 따른다.</li>\n<li>MySql → Repeatable-read, Oracle → Read committed</li>\n</ul>\n<p><strong>READ_UNCOMMITED(level 0)</strong> </p>\n<ul>\n<li>커밋되지 않은 데이터에 대한 읽기를 허용</li>\n<li>Dirty Read 발생 가능</li>\n<li>데이터 잠금을 위한 간접 비용이 적고 교착 상태에 빠질 위험이 없어 성능이 빠름</li>\n</ul>\n<p><strong>READ_COMMITTED(level 1)</strong> </p>\n<ul>\n<li>커밋 확정된 데이터에 대해서만 읽기를 허용</li>\n<li>Dirty Read 방지</li>\n</ul>\n<p><strong>REPEATABLE_READ(level 2)</strong> </p>\n<ul>\n<li>트랜잭션이 완료될 때까지 <code class=\"language-text\">SELECT</code> 하는 데이터에 대해서 shared-lock이 걸리므로 해당 데이터는 수정이 불가하다.</li>\n<li>트랜잭션이 종료되기 전가지 한번 조회한 값은 계속 같은 값으로 조회되도록 한다.</li>\n<li><code class=\"language-text\">Non-Repeatable Read</code> 문제를 방지한다. (같은 값을 반복적으로 조회할 때 중간에 다른 값이 조회되는 문제)</li>\n</ul>\n<p><strong>SERIALIZABLE(level 3)</strong></p>\n<ul>\n<li>트랜잭션이 완료될 때까지 <code class=\"language-text\">SELECT</code> 하는 데이터에 대해서 shared-lock이 걸리므로 해당 데이터는 수정과 입력이 불가하다.</li>\n</ul>\n<p>하지만 격리수준이 올라갈 수록 성능 저하의 우려가 있다는 것을 명심하자. </p>\n<h2 id=\"transaction-안에-transaction--전파속성\" style=\"position:relative;\"><a href=\"#transaction-%EC%95%88%EC%97%90-transaction--%EC%A0%84%ED%8C%8C%EC%86%8D%EC%84%B1\" aria-label=\"transaction 안에 transaction  전파속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transaction 안에 Transaction : 전파속성</h2>\n<p>하나의 트랜잭션 안에서 또 다른 트랜잭션이 발생하면 어떻게 처리가 될지 전파속성에 따라서 다르게 관리할 수 있다. 여러가지 전파속성이 있지만,  그중 몇가지만 다루어보자. </p>\n<p><strong>사용방법</strong></p>\n<p><code class=\"language-text\">@Transactional(propagation=Propagation.REQUIRED)</code></p>\n<p><strong>PROPAGATION_MANDATORY</strong></p>\n<p>부모의 트랜잭션 내에서 실행되고 없으면 예외가 발생한다. </p>\n<p><strong>PROPAGATION_NESTED</strong> </p>\n<p>기존에 트랜잭션이 있는 경우, 포함하여서 실행한다. </p>\n<p><strong>PROPAGATION_NEVER</strong> </p>\n<p>트랜잭션이 있는 상황에서 다른 트랜잭션이 실행된다면 예외를 발생한다. </p>\n<p><strong>PROPAGATION_REQUIRED (기본설정)</strong> </p>\n<p>트랜잭션이 있으면 그 상황에서 실행하고, 없으면 새로운 트랜잭션을 실행한다. 즉, 부모의 트랜잭션에서 실행하거나, 없으면 새로운 트랜잭션을 생성하는 것이다. </p>\n<p><strong>PROPAGATION<em>REQUIRED</em>NEW</strong></p>\n<p>자신만의 고유한 트랜잭션을 실행한다. </p>\n<ul>\n<li>전파속성 관련 참고링크: <a href=\"https://happyer16.tistory.com/entry/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%A0%84%ED%8C%8C-%EC%86%8D%EC%84%B1-propagation-%EB%A1%A4%EB%B0%B1-%EC%98%88%EC%99%B8\">https://happyer16.tistory.com/entry/트랜잭션-전파-속성-propagation-롤백-예외</a></li>\n</ul>\n<h2 id=\"transaction-추가-옵션\" style=\"position:relative;\"><a href=\"#transaction-%EC%B6%94%EA%B0%80-%EC%98%B5%EC%85%98\" aria-label=\"transaction 추가 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transaction 추가 옵션</h2>\n<p><code class=\"language-text\">@Transactional(readOnly = true)</code></p>\n<ul>\n<li>트랜잭션 작업 내에서 쓰기 작업이 일어나면 예외를 발생시킨다.</li>\n</ul>\n<p><code class=\"language-text\">@Transactional(rollbackFor = Exception.class)</code>, <code class=\"language-text\">@Transactional(rollbackForClassName={\"NullPointerException\"})</code></p>\n<ul>\n<li>기본적으로는 런타임 예외에 대해서 롤백을 하는데, 그 대상을 바꿀 수 있다.</li>\n</ul>\n<p><code class=\"language-text\">@Transactional(timeout = 10)</code></p>\n<ul>\n<li>지정한 시간 내에 작업을 완료하도록 설정할 수 있다.</li>\n</ul>\n<p><code class=\"language-text\">@EnableTransactionManagement</code></p>\n<ul>\n<li>빈 인스턴스에 트랜잭션을 적용하도록 한다.</li>\n</ul>\n<br>\n<h2 id=\"트랜잭션-동작-원리\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"트랜잭션 동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트랜잭션 동작 원리</h2>\n<p>일반적으로 JPA를 사용할 때 스프링과 같은 IoC 컨테이너를 사용하지 않을 경우 transaction management 기능을 직접 구현해줘야 한다. 트랜잭션의 흐름은 다음과 같다. </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">UserTransaction</span> utx <span class=\"token operator\">=</span> entityManager<span class=\"token punctuation\">.</span><span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\tutx<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">businessLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tutx<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tutx<span class=\"token punctuation\">.</span><span class=\"token function\">rollback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"스프링에서-code-classlanguage-texttransactionalcode\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81%EC%97%90%EC%84%9C-code-classlanguage-texttransactionalcode\" aria-label=\"스프링에서 code classlanguage texttransactionalcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링에서 <code class=\"language-text\">@Transactional</code></h2>\n<p>스프링에서 트랜잭션을 알아서 관리해주지만 troubleshooting을 위해서 내부 동작 원리를 알아야 할 필요가 있다. <br></p>\n<p>이해하기 위해서 필요한 개념 2가지</p>\n<ul>\n<li>the persistence context</li>\n<li>the database transaction</li>\n</ul>\n<p>두번째 개념인 database transaction은 우리가 사용하는 메서드 레벨의 <code class=\"language-text\">@Transactional</code> 로 그 생명주기와 범위가 설명된다. 이 database  transaction은 persistence context의 범위 안에서 일어난다. <br></p>\n<p>JPA에서 persistence context는 <code class=\"language-text\">EntityManager</code>를 말한다. Persistence context는 한정된 자바 객체들의 상태를 확인하고, 변경 사항들이 DB에 반영이 되도록 관리한다. 따라서 database transaction과 비슷하다고 생각할 수 있지만, 둘은 다른 개념이다. 주로 하나의 Entity Manager가 여러 database transactions 에 대해 사용된다. <br></p>\n<p>우선 트랜잭션 동작원리에 대해서 알기 이전에 <code class=\"language-text\">@PersistenceContext</code> 의 동작 방식에 대해서 아는 것이 중요하다.  해당 어노테이션은 컨테이너의 시작 시점에서 단 한번 entity manager를 주입하는 것처럼 보인다. 실은 <code class=\"language-text\">EntityManager</code> 는 인터페이스이고 스프링 빈으로 주입되는 것은 실제 entity manager가 아닌, <em>context aware proxy</em> 이며, runtime 중 실제 entity manager에서 책임을 위임한다.  </p>\n<p><strong>트랜잭션 관리를 위해 필요한 3가지 components</strong></p>\n<ul>\n<li>\n<p>EntityManager Proxy</p>\n<ul>\n<li>비지니스 로직에서 EntityManager 관련 메소드를 호출했을 때 entity manager를 직접적으로 호출하지 않는다. 비지니스 로직은 proxy에 의존하고 해당 proxy가 스레드에서 현재 entity manager를 추출한다.</li>\n</ul>\n</li>\n<li>\n<p>Transactional Aspect</p>\n<ul>\n<li><code class=\"language-text\">TransactionInterceptor</code> 로 구현이 되며, 비지니스 메소드 이전과 이후에 (before &#x26; after) 호출된다.</li>\n<li>Before moment: 실행될 비지니스 메서드가 기존에 실행되고 있는 database transaction의 범위 내에서 실행되어야 하는 것인지, 새로운 transaction을 시작해야 하는지 판단</li>\n<li>After moment: 해당 transaction이 커밋, 롤백, 실행중지 되어야 하는지 등등을 판단</li>\n<li>여기서 ‘before moment’ 에 해당하는 책임은 Transactional Aspect 에서 실제로 담당하지 않고, 판단하는 책임을 Transaction Manager에 위임한다.</li>\n</ul>\n</li>\n<li>\n<p>Transaction Manager</p>\n<ul>\n<li>\n<p>다음 두가지에 대해서 판단 및 처리한다.</p>\n<ol>\n<li>새로운 Entity Manager가 생성되어야 하는지</li>\n<li>새로운 database transaction이 시작되어야 하는지 </li>\n</ol>\n<p>이 두가지는 Transactional Aspect의 ‘before moment’ 로직이 호출되었을 때 판단되어야 한다. </p>\n</li>\n<li>\n<p>판단은 다음에 기반한다.</p>\n<ol>\n<li>다른 transaction의 실행 중 여부</li>\n<li>해당 transaction 메서드의 propagation 속성 (예를 들어 <code class=\"language-text\">REQUIRES_NEW</code> 일 경우 항상 새로운 transaction을 시작한다)</li>\n</ol>\n</li>\n<li>\n<p>만일 새로운 transaction을 생성하도록 했다면 다음이 실행된다</p>\n<ol>\n<li>새로운 entity manager 생성</li>\n<li>생성된 entity manager를 현재 쓰레드에 바인딩</li>\n<li>DB connection pool에서 커넥션 가져오기</li>\n<li>해당 커넥션을 현재 쓰레드에 바인딩 </li>\n</ol>\n</li>\n<li>Entity manager와 connection 모두 현재 스레드(즉, 모두 스레드 단위로 실행 및 관리)에 바인딩 되어 있고, transaction이 끝났을 때 Transaction Manager가 제거한다. <strong>따라서 현재 entity manager나 connection이 필요한 경우 현재 스레드에서 추출하여 사용하고, 이 부분을 EntityManager proxy가 담당한다.</strong></li>\n</ul>\n</li>\n</ul>\n<p><em>Spring configuration에서 위 @Transactional 매커니즘이 동작하도록 설정해준다.</em> </p>\n <br>\n <br>\n<p><strong>[참고링크]</strong></p>\n<ul>\n<li><a href=\"https://dzone.com/articles/how-does-spring-transactional\">https://dzone.com/articles/how-does-spring-transactional</a></li>\n<li><a href=\"https://hleee.medium.com/%EA%B2%A9%EB%A6%AC-%EC%88%98%EC%A4%80-3287d4bcc64d\">https://hleee.medium.com/격리-수준-3287d4bcc64d</a></li>\n<li><a href=\"https://mangkyu.tistory.com/30\">https://mangkyu.tistory.com/30</a></li>\n</ul>\n<p><strong>MORE</strong></p>\n<ul>\n<li>하나의 Entity Manger(persistence context) 에 여러 database transactions가 연관되어 있는 경우는 무엇일까?</li>\n</ul>","frontmatter":{"date":"May 10, 2021","title":"@Transactional","categories":"스프링부트 웹 데이터베이스","author":"코다","emoji":"🚊"},"fields":{"slug":"/transaction-advance/"}},"prev":{"id":"36216a08-7f3b-5fae-a020-c6ecb5db3d3e","html":"<h2 id=\"자바--스프링-mvc-프로젝트-배포과정-별도-인스턴스-활용\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94--%EC%8A%A4%ED%94%84%EB%A7%81-mvc-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B0%B0%ED%8F%AC%EA%B3%BC%EC%A0%95-%EB%B3%84%EB%8F%84-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%ED%99%9C%EC%9A%A9\" aria-label=\"자바  스프링 mvc 프로젝트 배포과정 별도 인스턴스 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 + 스프링 MVC 프로젝트 배포과정 (별도 인스턴스 활용)</h2>\n<ul>\n<li>이번에 몇몇 크루들과 미션을 진행하면서 웹을 처음으로 호스팅 해보았다. 웹을 배포 할 때 더욱 편리하다는 DevOps의 꽃 ci/cd를 학습해보기 위해서 6명이 모여서 한번 적용해보았다. 적용하면서 밟은 단계들을 기록해둔다. </li>\n<li>아래와 같이 그대로 적용하다가 본 프로젝트에 맞게 어느정도 커스텀하여 다르게 설정한 것도 있다. 특히 버전같은 것들은 좀 outdated 된 정보일 수 있다. </li>\n<li>추후에 진행할 팀 프로젝트에 큰 도움이 될 것 같다. </li>\n</ul>\n<h3 id=\"docker-설치\" style=\"position:relative;\"><a href=\"#docker-%EC%84%A4%EC%B9%98\" aria-label=\"docker 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">sudo apt<span class=\"token operator\">-</span>get update <span class=\"token operator\">&amp;&amp;</span> \\\nsudo apt<span class=\"token operator\">-</span>get install <span class=\"token operator\">-</span>y apt<span class=\"token operator\">-</span>transport<span class=\"token operator\">-</span>https ca<span class=\"token operator\">-</span>certificates curl software<span class=\"token operator\">-</span>properties<span class=\"token operator\">-</span>common <span class=\"token operator\">&amp;&amp;</span> \\\ncurl <span class=\"token operator\">-</span>fsSL https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu<span class=\"token operator\">/</span>gpg <span class=\"token operator\">|</span> sudo apt<span class=\"token operator\">-</span>key add <span class=\"token operator\">-</span> <span class=\"token operator\">&amp;&amp;</span> \\\nsudo apt<span class=\"token operator\">-</span>key fingerprint <span class=\"token number\">0</span>EBFCD88 <span class=\"token operator\">&amp;&amp;</span> \\\nsudo add<span class=\"token operator\">-</span>apt<span class=\"token operator\">-</span>repository <span class=\"token string\">\"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"</span> <span class=\"token operator\">&amp;&amp;</span> \\\nsudo apt<span class=\"token operator\">-</span>get update <span class=\"token operator\">&amp;&amp;</span> \\\nsudo apt<span class=\"token operator\">-</span>get install <span class=\"token operator\">-</span>y docker<span class=\"token operator\">-</span>ce <span class=\"token operator\">&amp;&amp;</span> \\\nsudo usermod <span class=\"token operator\">-</span>aG docker ubuntu <span class=\"token operator\">&amp;&amp;</span> \\\nsudo curl <span class=\"token operator\">-</span><span class=\"token class-name\">L</span> <span class=\"token string\">\"https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)\"</span> <span class=\"token operator\">-</span>o <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">&amp;&amp;</span> \\\nsudo chmod <span class=\"token operator\">+</span>x <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">&amp;&amp;</span> \\\nsudo ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose</code></pre></div>\n<h3 id=\"ec2에서-jenkins-key-받기-및-적용\" style=\"position:relative;\"><a href=\"#ec2%EC%97%90%EC%84%9C-jenkins-key-%EB%B0%9B%EA%B8%B0-%EB%B0%8F-%EC%A0%81%EC%9A%A9\" aria-label=\"ec2에서 jenkins key 받기 및 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EC2에서 Jenkins key 받기 및 적용</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">$ sudo wget <span class=\"token operator\">-</span>q <span class=\"token operator\">-</span><span class=\"token class-name\">O</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pkg<span class=\"token punctuation\">.</span>jenkins<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>debian<span class=\"token operator\">/</span>jenkins<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pkg<span class=\"token punctuation\">.</span>jenkins<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>debian<span class=\"token operator\">/</span>jenkins<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> sudo apt<span class=\"token operator\">-</span>key add <span class=\"token operator\">-</span>\n\n$ sudo sh <span class=\"token operator\">-</span>c <span class=\"token string\">'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'</span>\n\n$ sudo apt update\n\n$ sudo apt install jenkins\n\n<span class=\"token comment\">//실행중 확인</span>\n$ systemctl status jenkins</code></pre></div>\n<h3 id=\"jenkins-포트-번호-변경\" style=\"position:relative;\"><a href=\"#jenkins-%ED%8F%AC%ED%8A%B8-%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD\" aria-label=\"jenkins 포트 번호 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins 포트 번호 변경</h3>\n<p>젠킨스는 내부적으로 톰캣 서버를 이용하므로 기본포트 8080을 이용한다. 대부분의 스프링 프로젝트도 8080 톰캣 포트를 이용하기 때문에 젠킨스의 포트번호를 변경해야한다. </p>\n<ul>\n<li>\n<p>Jenkins 홈 디렉토리</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">$ cd <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>jenkins</code></pre></div>\n</li>\n<li>\n<p>Jenkins 기본 설정파일 &#x26; 로그 파일</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//기본 설정 파일 </span>\n<span class=\"token comment\">//여기서 포트번호 변경</span>\n$ cd <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token operator\">/</span>jenkins\n\n<span class=\"token comment\">//로그파일</span>\n$ cd <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>jenkins<span class=\"token operator\">/</span>jenkins<span class=\"token punctuation\">.</span>log</code></pre></div>\n</li>\n<li>\n<p>포트 변경 후 재시작</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">$ sudo systemctl restart jenkins</code></pre></div>\n</li>\n</ul>\n<h3 id=\"jenkins-접속-및-설정\" style=\"position:relative;\"><a href=\"#jenkins-%EC%A0%91%EC%86%8D-%EB%B0%8F-%EC%84%A4%EC%A0%95\" aria-label=\"jenkins 접속 및 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins 접속 및 설정</h3>\n<ul>\n<li>\n<p>Jenkins 접속</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">서버IP<span class=\"token operator\">:</span>변경포트번호</code></pre></div>\n</li>\n<li>\n<p>암호 가져오기</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">$ sudo docker exec jenkins cat <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>jenkins_home<span class=\"token operator\">/</span>secrets<span class=\"token operator\">/</span>initialAdminPassword</code></pre></div>\n<ul>\n<li>해당 암호를 접속한 Jenkins에 입력</li>\n</ul>\n</li>\n<li>Install suggested plugins 로 추천 플러그인 설치</li>\n<li>어드민 계정 생성</li>\n<li>\n<p>플러그인 설치</p>\n<ul>\n<li><code class=\"language-text\">Deploy to Container</code> - 배포 후 빌드 파일 container에 배치</li>\n<li><code class=\"language-text\">Public Over SSH</code> - ssh로 빌드파일 전송</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"jenkins-key-생성\" style=\"position:relative;\"><a href=\"#jenkins-key-%EC%83%9D%EC%84%B1\" aria-label=\"jenkins key 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins Key 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//유저 변경 &amp; 홈 디렉토리로 이동 </span>\n$ sudo su jenkins <span class=\"token operator\">&amp;&amp;</span> cd \n\n<span class=\"token comment\">//키 생성</span>\n$ ssh<span class=\"token operator\">-</span>keygen <span class=\"token operator\">-</span>t rsa </code></pre></div>\n<p>→ 배포용 어플리케이션(톰캣?)의 키도 생성해야함 </p>\n<h3 id=\"ssh-key-교환\" style=\"position:relative;\"><a href=\"#ssh-key-%EA%B5%90%ED%99%98\" aria-label=\"ssh key 교환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSH KEY 교환</h3>\n<ul>\n<li>\n<p>Jenkins 인스턴스에서 유저 변경후 public ssh key 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">su</span> jenkins\n$ <span class=\"token builtin class-name\">cd</span>\n$ .ssh/id_rsa.pub</code></pre></div>\n</li>\n<li>\n<p>Jenkins의 public ssh key 를 tomcat (배포서버) 에 저장</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">//배포 서버에 키 복사\n$ <span class=\"token function\">vi</span> .ssh/authorized_keys</code></pre></div>\n</li>\n</ul>\n<h3 id=\"jenkins-시스템-설정\" style=\"position:relative;\"><a href=\"#jenkins-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EC%A0%95\" aria-label=\"jenkins 시스템 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins 시스템 설정</h3>\n<ul>\n<li>Publish over SSH → Path to key : jekins private ssh key 경로 기입</li>\n<li>SSH Servers → Application Server 주소, user name, remote directory 경로 기입</li>\n</ul>\n<h3 id=\"global-tool-설정\" style=\"position:relative;\"><a href=\"#global-tool-%EC%84%A4%EC%A0%95\" aria-label=\"global tool 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Global Tool 설정</h3>\n<ul>\n<li>JDK 경로 기입</li>\n</ul>\n<h3 id=\"jenkins-프로젝트-생성-→-github-연동\" style=\"position:relative;\"><a href=\"#jenkins-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1-%E2%86%92-github-%EC%97%B0%EB%8F%99\" aria-label=\"jenkins 프로젝트 생성 → github 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins 프로젝트 생성 → Github 연동</h3>\n<ul>\n<li>Jenkins 에 Github 프로젝트 추가하고 Credentials 추가</li>\n<li>Jenkins에서 배포 버튼을 누르면 빌드, 배포가 이루어짐</li>\n</ul>\n<h2 id=\"docker--jenkins-배포-과정\" style=\"position:relative;\"><a href=\"#docker--jenkins-%EB%B0%B0%ED%8F%AC-%EA%B3%BC%EC%A0%95\" aria-label=\"docker  jenkins 배포 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker + Jenkins 배포 과정</h2>\n<h3 id=\"docker-에서-jenkins-이미지-받기-및-컨테이너-실행\" style=\"position:relative;\"><a href=\"#docker-%EC%97%90%EC%84%9C-jenkins-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B0%9B%EA%B8%B0-%EB%B0%8F-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%8B%A4%ED%96%89\" aria-label=\"docker 에서 jenkins 이미지 받기 및 컨테이너 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker 에서 Jenkins 이미지 받기 및 컨테이너 실행</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">//이미지 받기\n$ <span class=\"token function\">sudo</span> docker pull jenkins/jenkins:버전\n\n//이미지 확인\n$ <span class=\"token function\">sudo</span> docker images\n\n//컨테이너 실행\n$ <span class=\"token function\">sudo</span> docker run -d -p <span class=\"token number\">8181</span>:8080 -v /jenkins:/var/jenkins_home --name jm_jenkins -u root jenkins/jenkins:버전</code></pre></div>\n<ul>\n<li>-d : 도커 백그라운드 모드</li>\n<li>-p : 호스트와 컨테이너의 포트 연결 (포워딩)</li>\n<li>-v : 호스트와 컨테이너 디렉토리 연결 (마운트)</li>\n<li>—name : 컨테이너 이름 설정</li>\n<li>-u : 사용자 지정</li>\n</ul>\n<h3 id=\"ip와-포트로-jenkins-브라우저-접속-및-admin-생성\" style=\"position:relative;\"><a href=\"#ip%EC%99%80-%ED%8F%AC%ED%8A%B8%EB%A1%9C-jenkins-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%A0%91%EC%86%8D-%EB%B0%8F-admin-%EC%83%9D%EC%84%B1\" aria-label=\"ip와 포트로 jenkins 브라우저 접속 및 admin 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP와 포트로 Jenkins 브라우저 접속 및 admin 생성</h3>\n<ul>\n<li>\n<p>비밀번호 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> docker logs jenkins</code></pre></div>\n</li>\n</ul>\n<h3 id=\"플러그인-설치\" style=\"position:relative;\"><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%84%A4%EC%B9%98\" aria-label=\"플러그인 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>플러그인 설치</h3>\n<ul>\n<li>위와 동일</li>\n</ul>\n<h3 id=\"github-연결\" style=\"position:relative;\"><a href=\"#github-%EC%97%B0%EA%B2%B0\" aria-label=\"github 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github 연결</h3>\n<ul>\n<li>Jenkins 브라우저에서 새로운 Item → Freestyle project</li>\n<li>레포지토리 URL 입력</li>\n<li>\n<p>Credentials 추가</p>\n<ul>\n<li>\n<p>Kind → username with password (테스트용)</p>\n<ul>\n<li>계정 이름 및 비밀번호 입력</li>\n</ul>\n</li>\n<li>Kind → 실재로는 SSH 연동을 많이 사용한다. 해당 내용은 아래에 기입.</li>\n</ul>\n</li>\n<li>\n<p>Branch Specifier 추가</p>\n<ul>\n<li>ex. <code class=\"language-text\">*/master</code></li>\n</ul>\n</li>\n<li>Builder Trigger → Github hook trigger</li>\n<li>\n<p>Build → execute shell</p>\n<ul>\n<li>push 시 실행하도록 등록</li>\n<li>shell 스크립트 작성 필요 *</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"jenkins-github-ssh-연동\" style=\"position:relative;\"><a href=\"#jenkins-github-ssh-%EC%97%B0%EB%8F%99\" aria-label=\"jenkins github ssh 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins Github SSH 연동</h3>\n<ul>\n<li>\n<p>현재 사용자 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">ps</span> aux <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> jenkins</code></pre></div>\n</li>\n<li>\n<p>사용자 전환</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">//jnkins가 서버에 등록된 사용자가 아닌 경우가 많으므로 <span class=\"token function\">su</span> -u 로 전환이 안될 수 있는 것 참고 \n$ <span class=\"token function\">sudo</span> -u jenkins /bin/bash</code></pre></div>\n</li>\n<li>\n<p>.ssh 디렉토리 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> /var/lib/jenkins/.ssh\n$ <span class=\"token builtin class-name\">cd</span> /var/lib/jenkins/.ssh</code></pre></div>\n</li>\n<li>\n<p>ssh 키 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ssh-keygen -t rsa -f /var/lib/jenkins/.ssh/github_ansible-in-action\n\n//비밀키, 공개키 생성 확인 \n$ <span class=\"token function\">ls</span> -al </code></pre></div>\n</li>\n<li>\n<p>Github 설정 - 공개키 등록</p>\n<ul>\n<li>\n<p>Settings → Deploy keys → add deploy key → 공개키 복붙</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> /var/lib/jenkins/.ssh/github_ansible-in-action.pub</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>Jenkins 브라우저에 비밀키 등록</p>\n<ul>\n<li>\n<p>Credentials → System → Global credentials → Add credentials → 비밀키 복붙</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> /var/lib/jenkins/.ssh/github_ansible-in-action</code></pre></div>\n</li>\n<li>\n<p>Kind → SSH Username with private key</p>\n<p>Username → github_ansible-in-action(Job에서 보여줄 인증키 이름이므로 원하는 것 설정)</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"github-설정\" style=\"position:relative;\"><a href=\"#github-%EC%84%A4%EC%A0%95\" aria-label=\"github 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github 설정</h3>\n<ul>\n<li>\n<p>Setting → Integration &#x26; Services → Add Service → Jenkins hook url → Jenkins 주소 입력</p>\n<ul>\n<li>주소 뒤에 <code class=\"language-text\">/github-webhook/</code> 추가</li>\n</ul>\n</li>\n</ul>\n<p>⇒ 슬랙 연동도 가능</p>\n<br>\n<br>\n<p><strong>[참고링크]</strong></p>\n<ul>\n<li><a href=\"https://jojoldu.tistory.com/139\">https://jojoldu.tistory.com/139</a></li>\n<li><a href=\"https://jojoldu.tistory.com/442\">https://jojoldu.tistory.com/442</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%9E%90%EB%B0%94--%EC%8A%A4%ED%94%84%EB%A7%81-mvc-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B0%B0%ED%8F%AC%EA%B3%BC%EC%A0%95-%EB%B3%84%EB%8F%84-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%ED%99%9C%EC%9A%A9\">자바 + 스프링 MVC 프로젝트 배포과정 (별도 인스턴스 활용)</a></p>\n<ul>\n<li><a href=\"#docker-%EC%84%A4%EC%B9%98\">docker 설치</a></li>\n<li><a href=\"#ec2%EC%97%90%EC%84%9C-jenkins-key-%EB%B0%9B%EA%B8%B0-%EB%B0%8F-%EC%A0%81%EC%9A%A9\">EC2에서 Jenkins key 받기 및 적용</a></li>\n<li><a href=\"#jenkins-%ED%8F%AC%ED%8A%B8-%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD\">Jenkins 포트 번호 변경</a></li>\n<li><a href=\"#jenkins-%EC%A0%91%EC%86%8D-%EB%B0%8F-%EC%84%A4%EC%A0%95\">Jenkins 접속 및 설정</a></li>\n<li><a href=\"#jenkins-key-%EC%83%9D%EC%84%B1\">Jenkins Key 생성</a></li>\n<li><a href=\"#ssh-key-%EA%B5%90%ED%99%98\">SSH KEY 교환</a></li>\n<li><a href=\"#jenkins-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EC%A0%95\">Jenkins 시스템 설정</a></li>\n<li><a href=\"#global-tool-%EC%84%A4%EC%A0%95\">Global Tool 설정</a></li>\n<li><a href=\"#jenkins-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1-%E2%86%92-github-%EC%97%B0%EB%8F%99\">Jenkins 프로젝트 생성 → Github 연동</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#docker--jenkins-%EB%B0%B0%ED%8F%AC-%EA%B3%BC%EC%A0%95\">Docker + Jenkins 배포 과정</a></p>\n<ul>\n<li><a href=\"#docker-%EC%97%90%EC%84%9C-jenkins-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B0%9B%EA%B8%B0-%EB%B0%8F-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%8B%A4%ED%96%89\">Docker 에서 Jenkins 이미지 받기 및 컨테이너 실행</a></li>\n<li><a href=\"#ip%EC%99%80-%ED%8F%AC%ED%8A%B8%EB%A1%9C-jenkins-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%A0%91%EC%86%8D-%EB%B0%8F-admin-%EC%83%9D%EC%84%B1\">IP와 포트로 Jenkins 브라우저 접속 및 admin 생성</a></li>\n<li><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%84%A4%EC%B9%98\">플러그인 설치</a></li>\n<li><a href=\"#github-%EC%97%B0%EA%B2%B0\">Github 연결</a></li>\n<li><a href=\"#jenkins-github-ssh-%EC%97%B0%EB%8F%99\">Jenkins Github SSH 연동</a></li>\n<li><a href=\"#github-%EC%84%A4%EC%A0%95\">Github 설정</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"May 19, 2021","title":"젠킨스를 활용한 CI/CD 적용기","categories":"웹 운영","author":"코다","emoji":"🖥"},"fields":{"slug":"/cicd-jenkins/"}},"site":{"siteMetadata":{"siteUrl":"https://yjksw.github.io","comments":{"utterances":{"repo":"yjksw/yjksw.github.io"}}}}},"pageContext":{"slug":"/cicd/","nextSlug":"/transaction-advance/","prevSlug":"/cicd-jenkins/"}},"staticQueryHashes":["1073350324","2938748437"]}