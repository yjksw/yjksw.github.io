{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/one-percent-network-4/",
    "result": {"data":{"cur":{"id":"a180f961-5ad2-56c5-99c8-ed17112b0314","html":"<blockquote>\n<p>다음은 <em>성공과 실패를 결정하는 1%의 네트워크 원리</em> 를 읽고 정리한 내용입니다. 본 글은 CH2. TCP/IP의 데이터를 전기 신호로 만들어 보낸다_프로토콜 스택과 LAN 어댑터의 탐험입니다 🙌</p>\n</blockquote>\n<br>\n<br>\n<h2 id=\"-story4-서버에서-연결을-끊어-소켓을-말소한다\" style=\"position:relative;\"><a href=\"#-story4-%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-%EC%97%B0%EA%B2%B0%EC%9D%84-%EB%81%8A%EC%96%B4-%EC%86%8C%EC%BC%93%EC%9D%84-%EB%A7%90%EC%86%8C%ED%95%9C%EB%8B%A4\" aria-label=\" story4 서버에서 연결을 끊어 소켓을 말소한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛺 [Story4] 서버에서 연결을 끊어 소켓을 말소한다</h2>\n<h3 id=\"1-데이터-보내기를-완료하고-연결을-끊는다\" style=\"position:relative;\"><a href=\"#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%B4%EB%82%B4%EA%B8%B0%EB%A5%BC-%EC%99%84%EB%A3%8C%ED%95%98%EA%B3%A0-%EC%97%B0%EA%B2%B0%EC%9D%84-%EB%81%8A%EB%8A%94%EB%8B%A4\" aria-label=\"1 데이터 보내기를 완료하고 연결을 끊는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 데이터 보내기를 완료하고 연결을 끊는다</h3>\n<ul>\n<li>소켓 연결 말소 시점은 한쪽이 데이터 보내기를 완료했을때다.</li>\n<li>어느 측에서든 먼저 연결을 끊을 수 있도록 프로토콜이 설계 되어 있다.\n<ul>\n<li>주로 브라우저에서 요청을 보내고 서버에서 응답을 하면 서버 측에서 먼저 연결 끊기 동작을 실행한다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">close</code> 메소드를 호출해서 연결끊기 동작에 들어간다.</li>\n<li>연결끊기 동작 세부 로직 - 끊는 쪽 (예. 서버)\n<ul>\n<li>연결을 끊고자 하는 측이 TCP 헤더를 만들어서 FIN 컨트롤 비트를 1로 설정한다.</li>\n<li>이 패킷을 IP 담당에게 요청하여 상대에게 송신한다.</li>\n<li>자신의 소켓에 연결 끊기 동작에 들어갔다는 사실을 통지한다.</li>\n</ul>\n</li>\n<li>연결끊기 동작 세부 로직 - 상대 쪽 (예. 브라우저)\n<ul>\n<li>프로토콜 스택이 소켓에 연결 끊기 동작이 들어갔다는 것을 기록하고 패킷을 잘 받았다는 뜻으로 ACK를 보낸다.</li>\n<li>어플리케이션이 <code class=\"language-text\">read</code>를 할 때 데이터를 건내는 대신 데이터 수신을 완료했음을 알리고 FIN을 1로 한 헤더를 IP 담당에게 넘겨 반송한다.</li>\n<li>서버에서 ACK를 보내면 연결이 끊기가 완료된다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-소켓을-말소한다\" style=\"position:relative;\"><a href=\"#2-%EC%86%8C%EC%BC%93%EC%9D%84-%EB%A7%90%EC%86%8C%ED%95%9C%EB%8B%A4\" aria-label=\"2 소켓을 말소한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 소켓을 말소한다</h3>\n<ul>\n<li>연결 끊기 동식이 실행되었을 때 소켓을 곧바로 말소하지 않고 기다린 후에 소켓을 말소한다.\n<ul>\n<li>이유는 ACK가 서버에 도착하지 않아서 서버가 다시 FIN을 전송하게 되는 경우 담당 소켓이 말소되었으므로 동일한 포트번호의 새로운 소켓을 생성하게 되고 해당 소켓에 FIN이 도착하여 오동작하게 된다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-데이터-송수신-동작-요약\" style=\"position:relative;\"><a href=\"#3-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%86%A1%EC%88%98%EC%8B%A0-%EB%8F%99%EC%9E%91-%EC%9A%94%EC%95%BD\" aria-label=\"3 데이터 송수신 동작 요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 데이터 송수신 동작 요약</h3>\n<ul>\n<li>처음 소켓을 작성한다. (보통 서버측에서 먼저 소켓을 만들고 접속 대기 상태로 기다린다)</li>\n<li>클라이언트에서도 소켓을 만들고 서버로 접속 동작을 실행한다.\n<ul>\n<li>SYN을 1로 만들고 TCP 헤더를 만들어서 서버에 보낸다. (시퀀스 초기값, 윈도우 값도 포함)</li>\n<li>서버에서 ACK 번호, 윈도우값, SYN 1, 시퀀스 초기값을 전송한다.</li>\n<li>클라이언트에서 ACK 번호를 보낸다.</li>\n</ul>\n</li>\n<li>데이터를 송수신 한다.\n<ul>\n<li>웹의 경우 클라이언트가 요청 메세지를 보내는 것을 시작한다.</li>\n<li>TCP는 최대 MSS 만큼 패킷을 분할 + 헤더 추가하여 보낸다.</li>\n<li>시퀀스 번호와 데이터를 보내면 상대는 ACK 번호와 윈도우 값을 보낸다.</li>\n<li>슬라이등 윈도우 기법으로 흐름제어를 한다.</li>\n</ul>\n</li>\n<li>연결을 끊는다.\n<ul>\n<li>웹의 경우 서버가 먼저 연결 끊기 동작을 실행한다.</li>\n<li>FIN 1로 만든 헤더를 보내고 ACK 번호를 응답으로 받는다.</li>\n<li>이후 상대도 FIN 1로 만든 헤더를 보내고 ACK를 응답으로 받는다.</li>\n<li>잠시 기다린 후 소켓을 말소한다.</li>\n</ul>\n</li>\n</ul>\n<p align=\"center\"><img width=\"70%\" src=\"https://user-images.githubusercontent.com/63405904/138543869-4a228252-e6e4-413b-bedb-096c07364266.png\"><br>출처: 상위 1% 네트워크</p>\n<br>\n<h2 id=\"-story5-ip와-이더넷의-패킷-송수신-동작\" style=\"position:relative;\"><a href=\"#-story5-ip%EC%99%80-%EC%9D%B4%EB%8D%94%EB%84%B7%EC%9D%98-%ED%8C%A8%ED%82%B7-%EC%86%A1%EC%88%98%EC%8B%A0-%EB%8F%99%EC%9E%91\" aria-label=\" story5 ip와 이더넷의 패킷 송수신 동작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛺 [Story5] IP와 이더넷의 패킷 송수신 동작</h2>\n<ul>\n<li>TCP 담당 부분에서 필요한 헤더 및 데이터를 추가한 이후에 IP 담당 부분에게 의뢰한다.</li>\n</ul>\n<h3 id=\"1-패킷의-기본\" style=\"position:relative;\"><a href=\"#1-%ED%8C%A8%ED%82%B7%EC%9D%98-%EA%B8%B0%EB%B3%B8\" aria-label=\"1 패킷의 기본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 패킷의 기본</h3>\n<ul>\n<li>\n<p>패킷은 헤더 + 데이터로 나뉜다. (주소 등의 제어 정보 + 안의 내용물)</p>\n<p align=\"center\"><img width=\"70%\" src=\"https://user-images.githubusercontent.com/63405904/138543891-a6fa10df-b371-4f35-97a5-7c2001b22910.png\"><br>출처: 상위 1% 네트워크</p>\n</li>\n<li>\n<p>패킷의 흐름은 패킷의 헤더에 적힌 제어정보와 중계 장치에 있는 표의 정보를 결합하여 다음 패킷 목적지로 이동하며 최종 목적지에 도착한다.</p>\n<ul>\n<li>송신처와 최송 수신처를 ‘엔드 노드’라고 부른다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"tcpip-에서-패킷-구조\" style=\"position:relative;\"><a href=\"#tcpip-%EC%97%90%EC%84%9C-%ED%8C%A8%ED%82%B7-%EA%B5%AC%EC%A1%B0\" aria-label=\"tcpip 에서 패킷 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TCP/IP 에서 패킷 구조</h4>\n<p>두 가지 중계 장치가 있다. 서브넷을 관리하는 ‘허브’와 IP를 담당하는 ‘라우터’이다.</p>\n<p>각각 다음 역할을 한다.</p>\n<ul>\n<li>라우터가 목적지를 확인하여 다음 라우터를 찾는다.\n<ul>\n<li>IP가 다음 목적지를 확인하여 다음 IP 중계 장치를 찾는다.</li>\n</ul>\n</li>\n<li>허브가 서브넷 안에서 패킷을 운반해 다음 라우터에 도착하도록 한다.\n<ul>\n<li>서브넷 안의 이더넷이 라우터까지 패킷을 운반한다.</li>\n</ul>\n</li>\n</ul>\n<p>위 역할을 수행하기 위해서 패킷에 다음 두 헤더가 붙어 있다.</p>\n<ol>\n<li>MAC 헤더 (이더넷용 헤더)</li>\n<li>IP 헤더 (IP용 헤더)</li>\n</ol>\n<ul>\n<li>패킷 운반 흐름은 다음과 같다.\n<ul>\n<li>먼저 클라이언트가 TCP 헤더 + 데이터를 이어붙이고 목적 IP 주소에 맞는 다음 라우터를 조사한다.</li>\n<li>다음 라우터가 정해지면 해당 라우터에 대한 MAC 주소를 조사하고 패킷의 MAC 헤더에 추가한다.</li>\n<li>이더넷에게 해당 라우터로 패킷을 전송하도록 의뢰하여 패킷을 송신한다.</li>\n<li>이더넷에 의해 허브에 도착한다. 허브에서 이더넷 표와 헤더 정보를 결합해서 다음 라우터로 중계한다.\n<ul>\n<li>만일 허브가 여러개라면 여러 허브를 순차적으로 경우한다.</li>\n</ul>\n</li>\n<li>다음 라우터에 도착해서 IP용 표를 통해 다음 라우터를 조사하여 MAC 주소를 헤더가 기록한다.\n<ul>\n<li>동일하게 허브를 경유하여 다음 라우터에 도착한다. 수신처에 도착할 때까지 반복한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p align=\"center\"><img width=\"70%\" src=\"https://user-images.githubusercontent.com/63405904/138543896-57e300fe-ae57-4d72-9638-387b2acdd4cd.png\"><br>출처: 상위 1% 네트워크</p>\n<ul>\n<li>이더넷 대신 무선 LAN, ADSL 등으로 대체될 수 있다.\n<ul>\n<li><strong>IP의 의뢰를 받아서 패킷을 운반할 수 있는 것이면 된다.</strong></li>\n</ul>\n</li>\n<li>여기까지가 전체적인 흐름!!</li>\n</ul>\n<h3 id=\"2-패킷-송수신-동작의-개요\" style=\"position:relative;\"><a href=\"#2-%ED%8C%A8%ED%82%B7-%EC%86%A1%EC%88%98%EC%8B%A0-%EB%8F%99%EC%9E%91%EC%9D%98-%EA%B0%9C%EC%9A%94\" aria-label=\"2 패킷 송수신 동작의 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 패킷 송수신 동작의 개요</h3>\n<p>IP 담당이 진행하는 패킷 송신 동작을 자세하게 알아보기! IP 담당은 패킷을 송출하고 실제 패킷의 운반은 네트워크 기기인 허브 및 라우터가 수행한다.</p>\n<ul>\n<li>TCP 담당에서 TCP 헤더와 데이터가 붙은 채로 IP 담당에게 넘어온다.</li>\n<li>IP 담당은 넘어온 패킷을 들여다보지 않고 단지 헤더를 추가한다.\n<ul>\n<li>IP 헤더와 MAC 헤더를 추가한다.</li>\n</ul>\n</li>\n<li>IP 헤더: 목적지를 나타내는 제어정보</li>\n<li>MAC 헤더: LAN을 사용해서 가까운 라우터까지 패킷을 운반할 때 사용할 제어정보</li>\n<li>완성된 패킷을 네트워크 <strong>하드웨어</strong> LAN 어댑터에 보낸다.\n<ul>\n<li>0과 1로 이루어진 디지털 데이터의 모습이다.</li>\n<li>LAN 어댑터는 전기나 빛의 신호로 바꾸어 케이블로 송출한다.</li>\n<li>이후 허브나 라우터 등의 중계 장치에 도착한다.</li>\n</ul>\n</li>\n<li>IP 담당에서 바라보는 패킷은 그 역할이 구분되어 있지 않고 단순히 ‘패킷’이라는 덩어리일 뿐이다. 패킷의 내용, 순서, 유무도 상관하지 않는다.</li>\n</ul>\n<h3 id=\"3-수신처-ip주소를-기록한-ip-헤더를-만든다\" style=\"position:relative;\"><a href=\"#3-%EC%88%98%EC%8B%A0%EC%B2%98-ip%EC%A3%BC%EC%86%8C%EB%A5%BC-%EA%B8%B0%EB%A1%9D%ED%95%9C-ip-%ED%97%A4%EB%8D%94%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4\" aria-label=\"3 수신처 ip주소를 기록한 ip 헤더를 만든다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 수신처 IP주소를 기록한 IP 헤더를 만든다</h3>\n<p align=\"center\"><img width=\"70%\" src=\"https://user-images.githubusercontent.com/63405904/138543901-4a6f5980-cbc5-48d2-bc86-ac8518ba3457.png\"><br>출처: 상위 1% 네트워크</p>\n<ul>\n<li>수신처 IP주소 → 어플리케이션에서 통지한 그대로를 사용</li>\n<li>송신처 IP주소 → 여러 LAN 어댑터 중 송신을 책임지는 어댑터(대상 라우터가 정해지면 정해짐)의 IP 주소 사용</li>\n</ul>\n<h4 id=\"ip-경로표\" style=\"position:relative;\"><a href=\"#ip-%EA%B2%BD%EB%A1%9C%ED%91%9C\" aria-label=\"ip 경로표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP 경로표</h4>\n<ul>\n<li>\n<p><code class=\"language-text\">route print</code> 로 경로표를 확인할 수 있다.</p>\n<ul>\n<li>수신처 IP 주소의 왼쪽 부분이 일치하면 해당하는 행의 정보가 알맞은 것이다.\n<ul>\n<li>예를 들어 수신처 IP가 10.10.1.166 이면 왼쪽이 일치하는 10.10.1이 알맞은 행이다.</li>\n<li>Interface로 네트워크용(LAN 어댑터) 인터페이스를 알 수 있다.</li>\n<li><strong>Gateway로 다음 라우터 IP 주소를 알 수 있다!!!</strong></li>\n<li>가장 위 행은 기본 게이트웨이를 나타낸다 (추후 설명)</li>\n<li>어느 LAN 어댑터에서 보내는지 정하고 해당 IP 주소를 <strong>송신처 IP 주소</strong>로 설정한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>IP 헤더에 어느 프로토콜 (TCP, UDP 등등)을 사용하는지 번호를 작성한다.</p>\n</li>\n</ul>\n<h3 id=\"4-이더넷용-mac-헤더를-만든다\" style=\"position:relative;\"><a href=\"#4-%EC%9D%B4%EB%8D%94%EB%84%B7%EC%9A%A9-mac-%ED%97%A4%EB%8D%94%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4\" aria-label=\"4 이더넷용 mac 헤더를 만든다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 이더넷용 MAC 헤더를 만든다</h3>\n<p>MAC 헤더는 이더넷이 사용한다.</p>\n<ul>\n<li>수신처 MAC 주소, 송신처 MAC주소, 이더 타입(사용하는 프로토콜 종류 ARP, IP, IPv6 등등)</li>\n</ul>\n<h4 id=\"mac-주소-알아보기\" style=\"position:relative;\"><a href=\"#mac-%EC%A3%BC%EC%86%8C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"mac 주소 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MAC 주소 알아보기</h4>\n<ul>\n<li>MAC 주소는 48비트이다.</li>\n<li>이더타입에 프로토콜 번호를 기입한다.\n<ul>\n<li>이더넷의 경우 IP혹은 ARP이다.</li>\n</ul>\n</li>\n<li>송신처 MAC주소에 LAN 어댑터의 MAC 주소를 설정한다.</li>\n<li>수신처의 MAC 주소를 조사해서 설정한다.\n<ul>\n<li>경로표의 Gateway가 패킷을 건내줄 대상이다.</li>\n<li>이 IP 주소로 MAC 주소를 조사한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-arp로-수신처-라우터의-mac-주소를-조사한다\" style=\"position:relative;\"><a href=\"#5-arp%EB%A1%9C-%EC%88%98%EC%8B%A0%EC%B2%98-%EB%9D%BC%EC%9A%B0%ED%84%B0%EC%9D%98-mac-%EC%A3%BC%EC%86%8C%EB%A5%BC-%EC%A1%B0%EC%82%AC%ED%95%9C%EB%8B%A4\" aria-label=\"5 arp로 수신처 라우터의 mac 주소를 조사한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. ARP로 수신처 라우터의 MAC 주소를 조사한다</h3>\n<ul>\n<li>이더넷에 브로드캐스를 통해 연결된 전원에게 xx IP 주소(게이트웨이의 IP 주소)를 물어봐서 MAC주소를 획득한다.\n<ul>\n<li>상대가 자신과 같은 네트워크라면 이렇게 MAC주소를 알 수 있다. (Gateway가 라우터 IP 주소인 경우 라우터가 응답한다)</li>\n<li>해당하지 않는 기기는 브로드캐스트 메세지를 무시한다.</li>\n<li>ARP 응답이 없다면 패킷 송신 동작이 실패한다.</li>\n<li>매번 ARP 패킷을 보내는 것은 어렵기 때문에 메모리에 ARP 캐시 데이터를 저장한다.\n<ul>\n<li><code class=\"language-text\">arp -a</code> 를 통해 ARP 캐시데이터를 확인</li>\n<li><code class=\"language-text\">arp -d</code> 를 통해 캐시 데이터 삭제</li>\n<li>몇 분이 지나면 캐시 데이터를 삭제한다 → IP가 더이상 유효하지 않을수 있기 때문이다.</li>\n</ul>\n</li>\n<li>MAC 헤더를 붙이면 LAN 어댑터가 패킷을 그대로 송수신할 수 있다.</li>\n<li>MAC주소는 <code class=\"language-text\">:</code> 또는 <code class=\"language-text\">-</code>로 구분하며 총 48피트이고 8비트씩 16진수로 나타낸다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-이더넷의-기본\" style=\"position:relative;\"><a href=\"#6-%EC%9D%B4%EB%8D%94%EB%84%B7%EC%9D%98-%EA%B8%B0%EB%B3%B8\" aria-label=\"6 이더넷의 기본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 이더넷의 기본</h3>\n<ul>\n<li><strong>이더넷은 컴퓨터가 여러 컴퓨터와 적은 비용으로 자유롭게 통신하기 위한 통신 기술이다.</strong></li>\n<li>원형은 하나의 케이블에 여러 컴퓨터가 연결이 되어 있어서 케이블로 전체에게 신호가 가고 MAC헤더를 통해 수신처를 판단하여 다른 대상들을 해당 패킷을 폐기하고 대상 컴퓨터만 패킷을 받게 되는 구조이다.</li>\n<li>케이블 → 리피터 허브 → 스위칭 허브(현재 모습)으로 변화했다.\n<ul>\n<li>전원에게 신호를 보내는 것이 아니라 MAC 주소로 알아낸 원하는 상대에게만 신호가 흐른다.</li>\n</ul>\n</li>\n<li>이더넷의 동작도 패킷의 내용과는 아무런 상관이 없다.</li>\n</ul>\n<h3 id=\"7-ip-패킷을-전기나-빛의-신호로-변환하여-송신한다\" style=\"position:relative;\"><a href=\"#7-ip-%ED%8C%A8%ED%82%B7%EC%9D%84-%EC%A0%84%EA%B8%B0%EB%82%98-%EB%B9%9B%EC%9D%98-%EC%8B%A0%ED%98%B8%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EC%97%AC-%EC%86%A1%EC%8B%A0%ED%95%9C%EB%8B%A4\" aria-label=\"7 ip 패킷을 전기나 빛의 신호로 변환하여 송신한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. IP 패킷을 전기나 빛의 신호로 변환하여 송신한다</h3>\n<ul>\n<li>LAN 어댑터가 디지털 데이터를 전기나 빛의 신호로 변환하여 네트워크 케이블에 송출한다.</li>\n<li>LAN 어댑터를 제어하는 LAN 드라이버라는 소프트웨어가 필요하다.</li>\n</ul>\n<h3 id=\"8-패킷에-3개-제어용-데이터를-추가한다\" style=\"position:relative;\"><a href=\"#8-%ED%8C%A8%ED%82%B7%EC%97%90-3%EA%B0%9C-%EC%A0%9C%EC%96%B4%EC%9A%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%B6%94%EA%B0%80%ED%95%9C%EB%8B%A4\" aria-label=\"8 패킷에 3개 제어용 데이터를 추가한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 패킷에 3개 제어용 데이터를 추가한다</h3>\n<ul>\n<li>프리앰블, 스타트 프레임 딜리미터, 프레임 체크 시퀀스(오류 검출용 데이터)를 추가한다.</li>\n<li>프리앰플로 클록신호의 타이밍을 잡는다.</li>\n<li>스타트 프레임 딜리미터로 패킷 신호 시작을 나타낸다.</li>\n<li>FCS로 오류를 검출한다.</li>\n</ul>\n<p align=\"center\"><img width=\"70%\" src=\"https://user-images.githubusercontent.com/63405904/138543918-2a540179-7fd3-4416-8734-608fd29b9a72.png\"><br>출처: 상위 1% 네트워크</p>\n<p align=\"center\"><img width=\"70%\" src=\"https://user-images.githubusercontent.com/63405904/138543919-a2e6971b-983a-478d-9e55-a78d6aba5b40.png\"><br>출처: 상위 1% 네트워크</p>\n<h3 id=\"9-허브를-향해-패킷을-송신한다\" style=\"position:relative;\"><a href=\"#9-%ED%97%88%EB%B8%8C%EB%A5%BC-%ED%96%A5%ED%95%B4-%ED%8C%A8%ED%82%B7%EC%9D%84-%EC%86%A1%EC%8B%A0%ED%95%9C%EB%8B%A4\" aria-label=\"9 허브를 향해 패킷을 송신한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 허브를 향해 패킷을 송신한다</h3>\n<ul>\n<li>리피터 허브의 반이중 모드 &#x26; 스위치 허브의 전이중 모드가 있다.</li>\n<li>반이중 모드\n<ul>\n<li>케이블에 다른 송신 동작이 흐르고 있으면 대기했다가 송신 동작을 시작한다.</li>\n<li>동시에 신호가 흐르면 충돌이 나며 재밍 신호를 보내고 송신 동작을 멈추고 잠시 후 다시 시작한다.</li>\n</ul>\n</li>\n<li>전이중 모드는 충돌이 일어나지 않는다. (추후 설명)</li>\n</ul>\n<h3 id=\"10-돌아온-패킷을-받는다\" style=\"position:relative;\"><a href=\"#10-%EB%8F%8C%EC%95%84%EC%98%A8-%ED%8C%A8%ED%82%B7%EC%9D%84-%EB%B0%9B%EB%8A%94%EB%8B%A4\" aria-label=\"10 돌아온 패킷을 받는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. 돌아온 패킷을 받는다</h3>\n<ul>\n<li>리피터 허브에서는 한대에서 송신해도 전체에 신호가 간다. 이것을 모두 수신 신호로 받는다.</li>\n<li>프리앰블로 타이밍일 계산하고 스타트 프레임 딜리미터가 나오면 그 다음 비트부터 패킷으로 판단해 디지털 데이터로 변환한다. 최후에 FCS를 검사하여 오류가 있다면 폐기한다.</li>\n<li>오류가 없다면 MAC헤더 수신처와 MAC 주소를 조사하여 자신의 것이면 수신하여 버퍼 메모리에 저장하고 아니라면 패킷을 폐기한다.</li>\n<li>자신의 것이라서 패킷을 수신하면 <strong>interrupt 인터럽트</strong>로 컴퓨터에 통지한다.</li>\n</ul>\n<h3 id=\"11-서버의-응답-패킷을-ip에서-tcp로-넘긴다\" style=\"position:relative;\"><a href=\"#11-%EC%84%9C%EB%B2%84%EC%9D%98-%EC%9D%91%EB%8B%B5-%ED%8C%A8%ED%82%B7%EC%9D%84-ip%EC%97%90%EC%84%9C-tcp%EB%A1%9C-%EB%84%98%EA%B8%B4%EB%8B%A4\" aria-label=\"11 서버의 응답 패킷을 ip에서 tcp로 넘긴다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11. 서버의 응답 패킷을 IP에서 TCP로 넘긴다</h3>\n<ul>\n<li>웹서버에서 패킷이 돌아오면 (LAN 어댑터가 프로토콜 번호를 확인해 TCP/IP 프로토콜 스택으로 전송함) 프로토콜 스택의 IP 담당 부분에 넘겨진다.\n<ul>\n<li>IP 헤더를 조사해 수신처 IP주소를 조사하여 LAN 어댑터와 일치하는지 확인하고 패킷을 수신한다.</li>\n<li>만일 자신에게 온 패킷이 아니라면 IP 담당 부분이 <strong>ICMP 메세지로 통신 상대에게 오류를 통지</strong>한다.\n<ul>\n<li>여러 메세지 종류가 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>만일 패킷이 fragment로 분할된 것이면 IP 담당은 패킷을 복원한다. (이후에 패킷 분할에 대해서 다룬다)\n<ul>\n<li>IP 헤더의 flag로 분할여부를 확인할 수 있다.</li>\n<li>ID 정보로 같은 패킷임을 확인할 수 있다.</li>\n<li>fragment offset으로 패킷 위치를 알 수 있다.</li>\n<li>패킷을 복원하는 동작 = reassembling 리어셈블링이라고 한다.</li>\n</ul>\n</li>\n<li>리어셈블링이 끝나면 패킷을 TCP 담당 부분에 넘긴다.</li>\n</ul>\n<br>\n<h2 id=\"-story6-udp-프로토콜을-이용한-송수신동작\" style=\"position:relative;\"><a href=\"#-story6-udp-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%86%A1%EC%88%98%EC%8B%A0%EB%8F%99%EC%9E%91\" aria-label=\" story6 udp 프로토콜을 이용한 송수신동작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛺 [Story6] UDP 프로토콜을 이용한 송수신동작</h2>\n<h3 id=\"1-수정송신이-필요없는-데이터-송신은-udp가-효율적이다\" style=\"position:relative;\"><a href=\"#1-%EC%88%98%EC%A0%95%EC%86%A1%EC%8B%A0%EC%9D%B4-%ED%95%84%EC%9A%94%EC%97%86%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%86%A1%EC%8B%A0%EC%9D%80-udp%EA%B0%80-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B4%EB%8B%A4\" aria-label=\"1 수정송신이 필요없는 데이터 송신은 udp가 효율적이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 수정송신이 필요없는 데이터 송신은 UDP가 효율적이다.</h3>\n<ul>\n<li>ex. DNS 서버에서 IP 주소를 조회할 때</li>\n<li>만일 데이터를 보내서 수신응답이 오지 않으면 패킷을 전부 다 보내는 간단한 방법이 있다.\n<ul>\n<li>하지만 그것을 비효율적이니 TCP가 누락된 부분만 보내기 위해서 복잡한 구조인 것이다.</li>\n</ul>\n</li>\n<li>패킷이 하나라면 복잡하게 생각하지 않고 회신이 오지 않으면 다시 보내면 된다.</li>\n</ul>\n<h3 id=\"2-제어용-짧은-데이터\" style=\"position:relative;\"><a href=\"#2-%EC%A0%9C%EC%96%B4%EC%9A%A9-%EC%A7%A7%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"2 제어용 짧은 데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 제어용 짧은 데이터</h3>\n<ul>\n<li>DNS 조회 같은 경우 패킷 1개로 가능한 짧은 요청이기 때문에 UDP를 사용한다.</li>\n<li>접속이나 연결 끊기 단계가 없이 송신 데이터에 UDP 헤더만 추가하여 바로 IP 담당에 의뢰하여 송신한다.</li>\n<li>만일 오류가 생기면 송신측에서 회답이 오지 않으므로 데이터를 한번 더 보낸다.</li>\n</ul>\n<h3 id=\"3-음성-및-동영상-데이터\" style=\"position:relative;\"><a href=\"#3-%EC%9D%8C%EC%84%B1-%EB%B0%8F-%EB%8F%99%EC%98%81%EC%83%81-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"3 음성 및 동영상 데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 음성 및 동영상 데이터</h3>\n<ul>\n<li>UDP를 많이 사용한다. 타이밍이 맞지 않으면 데이터가 다시 와도 쓸모가 없으므로 잠시 누락되어도 괜찮다.</li>\n</ul>\n<p><strong>⇒ 이 다음은 케이블로 나간 전기 및 빛 신호가 리피터 허브, 스위칭 허브, 라우터 기기를 통해 인터넷으로 나가는 과정이다.</strong></p>\n<br>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[용어]\n\nARP - Address Resolution Protocol\n\nFCS - Frame Check Sequence</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-story4-%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-%EC%97%B0%EA%B2%B0%EC%9D%84-%EB%81%8A%EC%96%B4-%EC%86%8C%EC%BC%93%EC%9D%84-%EB%A7%90%EC%86%8C%ED%95%9C%EB%8B%A4\">🛺 [Story4] 서버에서 연결을 끊어 소켓을 말소한다</a></p>\n<ul>\n<li><a href=\"#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%B4%EB%82%B4%EA%B8%B0%EB%A5%BC-%EC%99%84%EB%A3%8C%ED%95%98%EA%B3%A0-%EC%97%B0%EA%B2%B0%EC%9D%84-%EB%81%8A%EB%8A%94%EB%8B%A4\">1. 데이터 보내기를 완료하고 연결을 끊는다</a></li>\n<li><a href=\"#2-%EC%86%8C%EC%BC%93%EC%9D%84-%EB%A7%90%EC%86%8C%ED%95%9C%EB%8B%A4\">2. 소켓을 말소한다</a></li>\n<li><a href=\"#3-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%86%A1%EC%88%98%EC%8B%A0-%EB%8F%99%EC%9E%91-%EC%9A%94%EC%95%BD\">3. 데이터 송수신 동작 요약</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-story5-ip%EC%99%80-%EC%9D%B4%EB%8D%94%EB%84%B7%EC%9D%98-%ED%8C%A8%ED%82%B7-%EC%86%A1%EC%88%98%EC%8B%A0-%EB%8F%99%EC%9E%91\">🛺 [Story5] IP와 이더넷의 패킷 송수신 동작</a></p>\n<ul>\n<li>\n<p><a href=\"#1-%ED%8C%A8%ED%82%B7%EC%9D%98-%EA%B8%B0%EB%B3%B8\">1. 패킷의 기본</a></p>\n<ul>\n<li><a href=\"#tcpip-%EC%97%90%EC%84%9C-%ED%8C%A8%ED%82%B7-%EA%B5%AC%EC%A1%B0\">TCP/IP 에서 패킷 구조</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%ED%8C%A8%ED%82%B7-%EC%86%A1%EC%88%98%EC%8B%A0-%EB%8F%99%EC%9E%91%EC%9D%98-%EA%B0%9C%EC%9A%94\">2. 패킷 송수신 동작의 개요</a></p>\n</li>\n<li>\n<p><a href=\"#3-%EC%88%98%EC%8B%A0%EC%B2%98-ip%EC%A3%BC%EC%86%8C%EB%A5%BC-%EA%B8%B0%EB%A1%9D%ED%95%9C-ip-%ED%97%A4%EB%8D%94%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4\">3. 수신처 IP주소를 기록한 IP 헤더를 만든다</a></p>\n<ul>\n<li><a href=\"#ip-%EA%B2%BD%EB%A1%9C%ED%91%9C\">IP 경로표</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-%EC%9D%B4%EB%8D%94%EB%84%B7%EC%9A%A9-mac-%ED%97%A4%EB%8D%94%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4\">4. 이더넷용 MAC 헤더를 만든다</a></p>\n<ul>\n<li><a href=\"#mac-%EC%A3%BC%EC%86%8C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\">MAC 주소 알아보기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-arp%EB%A1%9C-%EC%88%98%EC%8B%A0%EC%B2%98-%EB%9D%BC%EC%9A%B0%ED%84%B0%EC%9D%98-mac-%EC%A3%BC%EC%86%8C%EB%A5%BC-%EC%A1%B0%EC%82%AC%ED%95%9C%EB%8B%A4\">5. ARP로 수신처 라우터의 MAC 주소를 조사한다</a></p>\n</li>\n<li>\n<p><a href=\"#6-%EC%9D%B4%EB%8D%94%EB%84%B7%EC%9D%98-%EA%B8%B0%EB%B3%B8\">6. 이더넷의 기본</a></p>\n</li>\n<li>\n<p><a href=\"#7-ip-%ED%8C%A8%ED%82%B7%EC%9D%84-%EC%A0%84%EA%B8%B0%EB%82%98-%EB%B9%9B%EC%9D%98-%EC%8B%A0%ED%98%B8%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EC%97%AC-%EC%86%A1%EC%8B%A0%ED%95%9C%EB%8B%A4\">7. IP 패킷을 전기나 빛의 신호로 변환하여 송신한다</a></p>\n</li>\n<li>\n<p><a href=\"#8-%ED%8C%A8%ED%82%B7%EC%97%90-3%EA%B0%9C-%EC%A0%9C%EC%96%B4%EC%9A%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%B6%94%EA%B0%80%ED%95%9C%EB%8B%A4\">8. 패킷에 3개 제어용 데이터를 추가한다</a></p>\n</li>\n<li>\n<p><a href=\"#9-%ED%97%88%EB%B8%8C%EB%A5%BC-%ED%96%A5%ED%95%B4-%ED%8C%A8%ED%82%B7%EC%9D%84-%EC%86%A1%EC%8B%A0%ED%95%9C%EB%8B%A4\">9. 허브를 향해 패킷을 송신한다</a></p>\n</li>\n<li>\n<p><a href=\"#10-%EB%8F%8C%EC%95%84%EC%98%A8-%ED%8C%A8%ED%82%B7%EC%9D%84-%EB%B0%9B%EB%8A%94%EB%8B%A4\">10. 돌아온 패킷을 받는다</a></p>\n</li>\n<li>\n<p><a href=\"#11-%EC%84%9C%EB%B2%84%EC%9D%98-%EC%9D%91%EB%8B%B5-%ED%8C%A8%ED%82%B7%EC%9D%84-ip%EC%97%90%EC%84%9C-tcp%EB%A1%9C-%EB%84%98%EA%B8%B4%EB%8B%A4\">11. 서버의 응답 패킷을 IP에서 TCP로 넘긴다</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-story6-udp-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%86%A1%EC%88%98%EC%8B%A0%EB%8F%99%EC%9E%91\">🛺 [Story6] UDP 프로토콜을 이용한 송수신동작</a></p>\n<ul>\n<li><a href=\"#1-%EC%88%98%EC%A0%95%EC%86%A1%EC%8B%A0%EC%9D%B4-%ED%95%84%EC%9A%94%EC%97%86%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%86%A1%EC%8B%A0%EC%9D%80-udp%EA%B0%80-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B4%EB%8B%A4\">1. 수정송신이 필요없는 데이터 송신은 UDP가 효율적이다.</a></li>\n<li><a href=\"#2-%EC%A0%9C%EC%96%B4%EC%9A%A9-%EC%A7%A7%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0\">2. 제어용 짧은 데이터</a></li>\n<li><a href=\"#3-%EC%9D%8C%EC%84%B1-%EB%B0%8F-%EB%8F%99%EC%98%81%EC%83%81-%EB%8D%B0%EC%9D%B4%ED%84%B0\">3. 음성 및 동영상 데이터</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"다음은 성공과 실패를 결정하는 1%의 네트워크 원리 를 읽고 정리한 내용입니다. 본 글은 CH2. TCP/IP의 데이터를 전기 신호로 만들어 보낸다_프로토콜 스택과 LAN 어댑터의 탐험입니다 🙌 🛺 [Story4] 서버에서 연결을 끊어 소켓을 말소한다 1. 데이터 보내기를 완료하고 연결을 끊는다 소켓 연결 말소 시점은 한쪽이 데이터 보내기를 완료했을때다. 어느 측에서든 먼저 연결을 끊을 수 있도록 프로토콜이 설계 되어 있다. 주로 브라우저에서 요청을 보내고 서버에서 응답을 하면 서버 측에서 먼저 연결 끊기 동작을 실행한다.  메소드를 호출해서 연결끊기 동작에 들어간다. 연결끊기 동작 세부 로직 - 끊는 쪽 (예. 서버) 연결을 끊고자 하는 측이 TCP 헤더를 만들어서 FIN 컨트롤 비트를 1로 설정한다. 이 패킷을 IP 담당에게 요청하여 상대에게 송신한다. 자신의 소켓에 연결 끊기 동작에 들어갔다는 사실을 통지한다. 연결끊기 동작 세부 로직 - 상대 쪽 (예. 브라우저) 프로토콜 …","frontmatter":{"date":"September 30, 2021","title":"성공과 실패를 결정하는 1%의 네트워크 원리_4","categories":"네트워크 책","author":"코다","emoji":"⚡️"},"fields":{"slug":"/one-percent-network-4/"}},"next":{"id":"8064689b-ac41-5c5d-b707-9c5fb59639e2","html":"<blockquote>\n<p>다음은 웹 개발자를 위한 대규모 서비스를 지탱하는 기술을 읽고 정리한 내용입니다 🙌</p>\n</blockquote>\n<br>\n<h2 id=\"1-작업큐job-queue-시스템\" style=\"position:relative;\"><a href=\"#1-%EC%9E%91%EC%97%85%ED%81%90job-queue-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"1 작업큐job queue 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 작업큐(Job-Queue) 시스템</h2>\n<h2 id=\"웹-서비스와-요청\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%99%80-%EC%9A%94%EC%B2%AD\" aria-label=\"웹 서비스와 요청 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 서비스와 요청</h2>\n<p>본래 웹 서비스의 요청은 동기적으로 실행이 되었는데, 데이터가 축적되어 처리가 무거워지면서 작업큐 시스템을 통해서 나중으로 미뤄도 되는 처리를 비동기로 실행하도록 한다.</p>\n<p><strong>예)</strong> 특정 url을 북마크 할 때 해당 url의 개요를 얻고 키워드를 추출하고, 카테고리를 판정하는 작업들을 비동기로 처리한다. 그렇지 않으면 북마크를 추가할 때마다 긴 시간이 소요된다.</p>\n<h2 id=\"작업큐-시스템-입문\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%97%85%ED%81%90-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%9E%85%EB%AC%B8\" aria-label=\"작업큐 시스템 입문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작업큐 시스템 입문</h2>\n<ul>\n<li>비동화 하는 방법 → 해당 처리를 독립된 스크립트로 어플리케이션 내부에서 호출한다.\n<ul>\n<li>이 방법은 대량의 비동기 처리시 그 수만큼의 프로세스를 실행시키므로 성능상 단점이 될 수 있다.</li>\n<li>스크립트 시작과 초기화의 오버헤드가 커서 성능이 좋지 않다.</li>\n<li>소규모 어플리케이션에서만 진행하는 것이 좋다.</li>\n</ul>\n</li>\n<li>작업큐와 워커를 세트로 작업큐 시스템을 사용하는 것이 일반적이다.\n<ul>\n<li>작업큐에 실행하고자 하는 처리를 등록하고, 워커가 큐에서 작업을 추출해서 처리한다.</li>\n<li>작업큐를 통해 일시작인 대량의 처리 등록시 부하의 변동을 흡수한다.</li>\n<li>워커가 항상 실행하고 있으므로 처리시 초기화 오버헤드가 거의 없다.</li>\n</ul>\n<p align=\"center\"><img width=\"85%\" src=\"https://user-images.githubusercontent.com/63405904/136998712-f7065322-bc05-4c98-a135-c8e360e0f89e.png\"><br>이미지 출처: 대용량 서비스를 지탱하는 기술</p>\n</li>\n</ul>\n<br>\n<h2 id=\"2-스토리지-선택---rdbms-와-key-value-스토어\" style=\"position:relative;\"><a href=\"#2-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%84%A0%ED%83%9D---rdbms-%EC%99%80-key-value-%EC%8A%A4%ED%86%A0%EC%96%B4\" aria-label=\"2 스토리지 선택   rdbms 와 key value 스토어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 스토리지 선택 - RDBMS 와 key-value 스토어</h2>\n<h2 id=\"증가하는-데이터를-어떻게-저장할까-\" style=\"position:relative;\"><a href=\"#%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A0%80%EC%9E%A5%ED%95%A0%EA%B9%8C-\" aria-label=\"증가하는 데이터를 어떻게 저장할까  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>증가하는 데이터를 어떻게 저장할까 ?</h2>\n<h3 id=\"웹-어플리케이션과-스토리지\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EA%B3%BC-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\" aria-label=\"웹 어플리케이션과 스토리지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 어플리케이션과 스토리지</h3>\n<ul>\n<li><strong>스토리지란?</strong>\n<ul>\n<li>데이터를 영속적 혹은 일시적으로 저장하기 위한 기능</li>\n</ul>\n</li>\n<li>원본 데이터는 서비스의 근본적인 신뢰성과 관계되어서 매우 중요하다.</li>\n<li>캐시 데이터는 신뢰성보다는 성능을 높이고 비용을 줄일 때 사용된다.</li>\n<li>스토리지를 처음부터 잘 선택하는 것이 중요하다. 중간에 변경을 하려는 것은 굉장히 어렵다.</li>\n</ul>\n<h3 id=\"스토리지-선택의-전제조건\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%84%A0%ED%83%9D%EC%9D%98-%EC%A0%84%EC%A0%9C%EC%A1%B0%EA%B1%B4\" aria-label=\"스토리지 선택의 전제조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스토리지 선택의 전제조건</h3>\n<ul>\n<li>평균크기</li>\n<li>최대크기</li>\n<li>신규추가빈도</li>\n<li>갱신빈도</li>\n<li>삭제빈도</li>\n<li>참조빈도</li>\n</ul>\n<h3 id=\"스토리지의-종류\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"스토리지의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스토리지의 종류</h3>\n<ul>\n<li>현재는 크기 4가지 이다.\n<ul>\n<li>RDBMS\n<ul>\n<li>SQL 언어로 데이터 조작을 수행하는 시스템</li>\n<li>대표적으로 MySQL이 있다.</li>\n<li>MySQL에서는 SQL을 해석하여 실행하는 블록(서버, 옵티마이저, 캐시버퍼)과 실제 데이터를 보관하는 기능블록(InnoDB와 같은 스토리지 엔진)이 분리되어 있다.</li>\n<li>트랜잭션이 필요하고 갱신빈도가 높다면 InnoDB 엔진을 선택하고 추가작업이나 count 등만을 사용하면 MyISAM을 사용하는 등 특징에 맞게 선택해서 사용한다.\n<ul>\n<li>그렇지만 하나의 서버에서 두가지 엔진을 사용하는 것은 효율적인 CPU, 메모리 사용이 어렵다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>분산 key-value 스토어 (ex. memcached 등등)\n<ul>\n<li>정말 심플한 스토리지 이다.</li>\n<li>RDBMS에 비해 기능을 부족하지만 성능이 10~100배이다.</li>\n<li>분산알고리즘을 사용하기도 하는데 key의 해시값을 서버대수로 나누어서 분산저장하는 방법이나 더 복잡한 방법으로 분산한다.</li>\n<li>캐시데이터를 분산 key-value 스토리지에 저장할 수 있다.</li>\n</ul>\n</li>\n<li>분산 파일 시스템\n<ul>\n<li>보통 어느 크기 상의 데이터를 저장하는데 적합하다.</li>\n</ul>\n</li>\n<li>그 밖의 스토리지</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"3-캐시-시스템\" style=\"position:relative;\"><a href=\"#3-%EC%BA%90%EC%8B%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"3 캐시 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 캐시 시스템</h2>\n<h2 id=\"웹-어플리케이션의-부하와-프록시캐시-시스템\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%9D%98-%EB%B6%80%ED%95%98%EC%99%80-%ED%94%84%EB%A1%9D%EC%8B%9C%EC%BA%90%EC%8B%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"웹 어플리케이션의 부하와 프록시캐시 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 어플리케이션의 부하와 프록시/캐시 시스템</h2>\n<ul>\n<li>\n<p>용량이 부족할 때 HTTP 레벨의 캐싱을 포워드 프록시와 리버스 프록시로 진행할 수 있다.</p>\n</li>\n<li>\n<p>프록시에서 요청에 대한 응답을 캐싱하여 같은 요청이 전달됐을 때 캐싱해둔 응답을 반환할 수 있다.</p>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-%EC%9E%91%EC%97%85%ED%81%90job-queue-%EC%8B%9C%EC%8A%A4%ED%85%9C\">1. 작업큐(Job-Queue) 시스템</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%99%80-%EC%9A%94%EC%B2%AD\">웹 서비스와 요청</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9E%91%EC%97%85%ED%81%90-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%9E%85%EB%AC%B8\">작업큐 시스템 입문</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%84%A0%ED%83%9D---rdbms-%EC%99%80-key-value-%EC%8A%A4%ED%86%A0%EC%96%B4\">2. 스토리지 선택 - RDBMS 와 key-value 스토어</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A0%80%EC%9E%A5%ED%95%A0%EA%B9%8C-\">증가하는 데이터를 어떻게 저장할까 ?</a></p>\n<ul>\n<li><a href=\"#%EC%9B%B9-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EA%B3%BC-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">웹 어플리케이션과 스토리지</a></li>\n<li><a href=\"#%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%84%A0%ED%83%9D%EC%9D%98-%EC%A0%84%EC%A0%9C%EC%A1%B0%EA%B1%B4\">스토리지 선택의 전제조건</a></li>\n<li><a href=\"#%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80%EC%9D%98-%EC%A2%85%EB%A5%98\">스토리지의 종류</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-%EC%BA%90%EC%8B%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C\">3. 캐시 시스템</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9B%B9-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%9D%98-%EB%B6%80%ED%95%98%EC%99%80-%ED%94%84%EB%A1%9D%EC%8B%9C%EC%BA%90%EC%8B%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C\">웹 어플리케이션의 부하와 프록시/캐시 시스템</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 29, 2021","title":"대규모 서비스를 지탱하는 기술 - 실전 기술","categories":"웹 인프라 책 성능테스트","author":"코다","emoji":"📚"},"fields":{"slug":"/high-traffic-service_13/"}},"prev":{"id":"07e871a9-e296-5627-8e08-bb3702e64491","html":"<blockquote>\n<p>다음은 <em>성공과 실패를 결정하는 1%의 네트워크 원리</em> 를 읽고 정리한 내용입니다. 본 글은 CH3. 케이블의 앞은 LAN 기기였다_허브와 스위치, 라우터의 탐험입니다 🙌</p>\n</blockquote>\n<br>\n<br>\n<h2 id=\"-story1-케이블과-리피터-허브-속을-신호가-흘러간다\" style=\"position:relative;\"><a href=\"#-story1-%EC%BC%80%EC%9D%B4%EB%B8%94%EA%B3%BC-%EB%A6%AC%ED%94%BC%ED%84%B0-%ED%97%88%EB%B8%8C-%EC%86%8D%EC%9D%84-%EC%8B%A0%ED%98%B8%EA%B0%80-%ED%9D%98%EB%9F%AC%EA%B0%84%EB%8B%A4\" aria-label=\" story1 케이블과 리피터 허브 속을 신호가 흘러간다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛺 [Story1] 케이블과 리피터, 허브 속을 신호가 흘러간다</h2>\n<h3 id=\"1-패킷-하나하나가-독립적으로-동작한다\" style=\"position:relative;\"><a href=\"#1-%ED%8C%A8%ED%82%B7-%ED%95%98%EB%82%98%ED%95%98%EB%82%98%EA%B0%80-%EB%8F%85%EB%A6%BD%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%8F%99%EC%9E%91%ED%95%9C%EB%8B%A4\" aria-label=\"1 패킷 하나하나가 독립적으로 동작한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 패킷 하나하나가 독립적으로 동작한다</h3>\n<ul>\n<li>케이블로 흘러간 패킷은 중계 장치를 경유해서 목적지에 도착한다.</li>\n<li>중계 장치는 데이터의 내용을 보지 않고 헤더에 적힌 정보만 보고 중계한다.</li>\n<li>기본적인 흐름은 LAN 어댑터 → 리피터 허브 → 스위칭 허브 → 라우터를 경유해서 인터넷으로 나가는 것이다.</li>\n</ul>\n<h3 id=\"2-lan-케이블은-신호를-약화시키지-않는-것이-핵심이다\" style=\"position:relative;\"><a href=\"#2-lan-%EC%BC%80%EC%9D%B4%EB%B8%94%EC%9D%80-%EC%8B%A0%ED%98%B8%EB%A5%BC-%EC%95%BD%ED%99%94%EC%8B%9C%ED%82%A4%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%83%EC%9D%B4-%ED%95%B5%EC%8B%AC%EC%9D%B4%EB%8B%A4\" aria-label=\"2 lan 케이블은 신호를 약화시키지 않는 것이 핵심이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. LAN 케이블은 신호를 약화시키지 않는 것이 핵심이다</h3>\n<ul>\n<li>LAN 어댑터의 PHY(MAU)회로에서 신호가 나가 케이블에 흘러 리피터 허브의 커넥터 부분에 도착한다.</li>\n<li>이때 케이블을 이동하고 그 길이가 길어지면서 신호가 약해져서 변형된다.</li>\n</ul>\n<h3 id=\"3-꼼은-잡음을-방지하기-위한-방법이다\" style=\"position:relative;\"><a href=\"#3-%EA%BC%BC%EC%9D%80-%EC%9E%A1%EC%9D%8C%EC%9D%84-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EB%B0%A9%EB%B2%95%EC%9D%B4%EB%8B%A4\" aria-label=\"3 꼼은 잡음을 방지하기 위한 방법이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 꼼은 잡음을 방지하기 위한 방법이다.</h3>\n<ul>\n<li>선을 꼬게 되면서 전자파에 의한 잡음을 상쇄한다.</li>\n</ul>\n<h3 id=\"4-리피터-허브는-연결되어-있는-전체-케이블에-신호를-송신한다\" style=\"position:relative;\"><a href=\"#4-%EB%A6%AC%ED%94%BC%ED%84%B0-%ED%97%88%EB%B8%8C%EB%8A%94-%EC%97%B0%EA%B2%B0%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94-%EC%A0%84%EC%B2%B4-%EC%BC%80%EC%9D%B4%EB%B8%94%EC%97%90-%EC%8B%A0%ED%98%B8%EB%A5%BC-%EC%86%A1%EC%8B%A0%ED%95%9C%EB%8B%A4\" aria-label=\"4 리피터 허브는 연결되어 있는 전체 케이블에 신호를 송신한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 리피터 허브는 연결되어 있는 전체 케이블에 신호를 송신한다</h3>\n<ul>\n<li>신호가 리피터 허브에 도착하면 LAN 전체에 신호가 흩어진다.</li>\n<li>신호를 수신한 기기는 맨 앞의 MAC 헤더에 쓰인 수신처 MAC 주소를 확인하고 자신이 아니면 무시한다.</li>\n<li>이 다음 스위칭 허브, 라우터, 서버 등에 도착해서 디지털 데이터로 변환되고, FCS를 검사하는 곳에서 오류가 나면 패킷을 폐기한다.</li>\n</ul>\n<br>\n<h2 id=\"-story2-스위칭-허브의-패킷-중계-동작\" style=\"position:relative;\"><a href=\"#-story2-%EC%8A%A4%EC%9C%84%EC%B9%AD-%ED%97%88%EB%B8%8C%EC%9D%98-%ED%8C%A8%ED%82%B7-%EC%A4%91%EA%B3%84-%EB%8F%99%EC%9E%91\" aria-label=\" story2 스위칭 허브의 패킷 중계 동작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛺 [Story2] 스위칭 허브의 패킷 중계 동작</h2>\n<h3 id=\"1-스위칭-허브는-주소-테이블로-중계한다\" style=\"position:relative;\"><a href=\"#1-%EC%8A%A4%EC%9C%84%EC%B9%AD-%ED%97%88%EB%B8%8C%EB%8A%94-%EC%A3%BC%EC%86%8C-%ED%85%8C%EC%9D%B4%EB%B8%94%EB%A1%9C-%EC%A4%91%EA%B3%84%ED%95%9C%EB%8B%A4\" aria-label=\"1 스위칭 허브는 주소 테이블로 중계한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 스위칭 허브는 주소 테이블로 중계한다</h3>\n<ul>\n<li>\n<p>트위스트 페어 케이블에서 흘러온 전기 신호가 PHY(MAU)회로를 거쳐 MAC 회로로 들어온다.</p>\n</li>\n<li>\n<p>MAC 회로에서 디지털 데이터(0101로 이루어진 데이터)로 변환되고 FCS를 대조하여 오류 유무를 검사하여 문제가 없다면 메모리 버퍼에 저장한다.</p>\n</li>\n<li>\n<p>스위치 허브의 안쪽에는 <strong>포트</strong>가 있다.</p>\n<ul>\n<li>하나의 호스트에 각각의 LAN 어댑터가 있는 것과 같이 여러개의 포트가 존재한다.</li>\n<li>하지만 LAN 어댑터와는 달리 여기에는 각각 부여된 MAC 주소는 없다. 자기에게 할당된 패킷을 걸러서 받는 것이 아니라 모든 패킷을 수신하기 때문에 자신에게 부여된 MAC 주소가 필요 없다.</li>\n</ul>\n</li>\n<li>\n<p>메모리 버퍼에 저장한 후 <strong>MAC 주소표</strong>에 수신한 패킷의 <strong>수신처 MAC 주소</strong>와 일치하는 정보가 있는지 확인한다. 이 표에는 MAC주소와 포트가 짝지어져 있다.</p>\n</li>\n<li>\n<p>존재한다면 해당 포트 번호로 패킷을 보낸다. 해당 포트가 송신처 포트 번호가 된다.</p>\n<p align=\"center\"><img width=\"70%\" src=\"https://user-images.githubusercontent.com/63405904/138543967-e04b241e-dca0-4e5f-ac00-1bce0e4448b4.png\"><br>출처: 상위 1% 네트워크</p>\n</li>\n<li>\n<p>스위치 회로는 격자 모양의 배치로 교점에 스위치가 있어 개폐를 제어할 수 있기 때문에 복수의 신호를 동시에 흘릴 수 있다.</p>\n</li>\n<li>\n<p>실제로 패킷을 송신하는 PHY(MAU) 회로에서 케이블로 신호가 흘러가는데 이때는 이더넷의 규칙에 따라 아무도 송신하고 있지 않는 것을 확인하고 디지털 데이터를 신호로 변환하여 송신한다.</p>\n<ul>\n<li>LAN 어댑터와 마찬가지로 동시에 수신을 하게 되면 재밍 신호를 보낸 후 기다렸다가 재송신한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-mac-주소-테이블을-등록-및-갱신한다\" style=\"position:relative;\"><a href=\"#2-mac-%EC%A3%BC%EC%86%8C-%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%84-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B0%B1%EC%8B%A0%ED%95%9C%EB%8B%A4\" aria-label=\"2 mac 주소 테이블을 등록 및 갱신한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. MAC 주소 테이블을 등록 및 갱신한다</h3>\n<p>이 때 스위칭 허브는 MAC 주소표의 내용을 갱신해야 한다.</p>\n<ul>\n<li>패킷을 수신했을 때 송신처 MAC 주소를 조사하여 수신한 입력 포트와 함께 주소표에 등록한다.\n<ul>\n<li>따라서 한번이라도 패킷을 송신하면 MAC 주소가 주소표에 등록된다.</li>\n</ul>\n</li>\n<li>일정 시간이 지나면 오래된 MAC 주소 정보는 삭제한다. (더이상 유효하지 않을 수 있기 때문이다)</li>\n<li>잘못된 주소로 인해 패킷 통신 동작에 오류가 생기면 스위칭 허브를 리셋하여 MAC 주소를 초기화시키고 다시 주소가 등록되도록 하면 된다.</li>\n<li>스위칭 허브 자체가 알아서 MAC 주소를 등록하므로 수동으로 갱신 및 등록 할 필요가 없다.\n<ul>\n<li>스스로 등록, 삭제, 리셋을 한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-예외적인-동작\" style=\"position:relative;\"><a href=\"#3-%EC%98%88%EC%99%B8%EC%A0%81%EC%9D%B8-%EB%8F%99%EC%9E%91\" aria-label=\"3 예외적인 동작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 예외적인 동작</h3>\n<ul>\n<li>스위칭 허브에 리피터 허브가 접속되어 있는 경우 패킷이 수신된 포트와 송신할 포트가 같을 수 있다.\n<ul>\n<li>상황1 - A 에서 B로 패킷을 보낸다.</li>\n<li>상황2 - 리피터 허브에 A, B, 스위치 허브가 연결되어 있다.</li>\n<li>문제 - 리피터 허브에서 전체 중계할 때 B, 스위치 허브에 모두 패킷이 간다. 이때 B 에게 패킷이 도착한다. 하지만 스위치 허브에서도 패킷을 받아서 중계하기 때문에 중복된 패킷이 B에게 도착한다.</li>\n<li>위 문제를 방지하기 위해 스위칭 허브는 수신한 포트와 송신하는 포트가 같을 경우 패킷을 중계하지 않고 폐기한다.</li>\n</ul>\n</li>\n<li>최초이거나 삭제된 이후라서 MAC 주소표에 MAC 주소가 등록되어 있지 않은 경우가 있다.\n<ul>\n<li>패킷을 수신한 포트를 제외한 모든 포트에서 패킷을 송신한다. (이 중 하나는 올바른 포트 이므로 패킷이 잘 송신된다)</li>\n<li>잘 송신한 이후 응답이 오면 해당 MAC 주소가 주소표에 등록이 되므로 그 다음 부터는 전체에게 보내지 않아도 된다.</li>\n</ul>\n</li>\n<li>수신처 MAC 주소가 브로드캐스트 주소인 경우 수신 포트를 제외하고 모든 포트에서 패킷을 송신한다.</li>\n</ul>\n<h3 id=\"4-전이중-모드에서-송신과-수신을-동시에-실행한다\" style=\"position:relative;\"><a href=\"#4-%EC%A0%84%EC%9D%B4%EC%A4%91-%EB%AA%A8%EB%93%9C%EC%97%90%EC%84%9C-%EC%86%A1%EC%8B%A0%EA%B3%BC-%EC%88%98%EC%8B%A0%EC%9D%84-%EB%8F%99%EC%8B%9C%EC%97%90-%EC%8B%A4%ED%96%89%ED%95%9C%EB%8B%A4\" aria-label=\"4 전이중 모드에서 송신과 수신을 동시에 실행한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 전이중 모드에서 송신과 수신을 동시에 실행한다</h3>\n<ul>\n<li>스위칭 허브는 송신과 수신을 동시에 실행할 수 있는 <strong>전이중 모드</strong>다.</li>\n<li>스위칭 허브의 포트, PHY(MAU), MAC 회로 내부가 모두 송신과 수신이 나뉘어져 있다.</li>\n</ul>\n<h3 id=\"5-최적의-전송-속도로-보내는-자동-조정\" style=\"position:relative;\"><a href=\"#5-%EC%B5%9C%EC%A0%81%EC%9D%98-%EC%A0%84%EC%86%A1-%EC%86%8D%EB%8F%84%EB%A1%9C-%EB%B3%B4%EB%82%B4%EB%8A%94-%EC%9E%90%EB%8F%99-%EC%A1%B0%EC%A0%95\" aria-label=\"5 최적의 전송 속도로 보내는 자동 조정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 최적의 전송 속도로 보내는 자동 조정</h3>\n<p>접속 상대가 전이중 모드를 지원하는지 검출하여 동작 모드를 자동으로 전환하고 상대의 속도도 검출한다.</p>\n<h3 id=\"6-스위칭-허브는-복수의-중계-동작을-동시에-실행한다\" style=\"position:relative;\"><a href=\"#6-%EC%8A%A4%EC%9C%84%EC%B9%AD-%ED%97%88%EB%B8%8C%EB%8A%94-%EB%B3%B5%EC%88%98%EC%9D%98-%EC%A4%91%EA%B3%84-%EB%8F%99%EC%9E%91%EC%9D%84-%EB%8F%99%EC%8B%9C%EC%97%90-%EC%8B%A4%ED%96%89%ED%95%9C%EB%8B%A4\" aria-label=\"6 스위칭 허브는 복수의 중계 동작을 동시에 실행한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 스위칭 허브는 복수의 중계 동작을 동시에 실행한다</h3>\n<ul>\n<li>MAC 주소가 존재하는 포트 이외의 포트는 빈 포트가 되어 송신 동작을 하지 않는다.</li>\n<li>이 비어있는 포트에 별도의 패킷을 흘려 동시에 여러개의 패킷을 중계할 수 있다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-story1-%EC%BC%80%EC%9D%B4%EB%B8%94%EA%B3%BC-%EB%A6%AC%ED%94%BC%ED%84%B0-%ED%97%88%EB%B8%8C-%EC%86%8D%EC%9D%84-%EC%8B%A0%ED%98%B8%EA%B0%80-%ED%9D%98%EB%9F%AC%EA%B0%84%EB%8B%A4\">🛺 [Story1] 케이블과 리피터, 허브 속을 신호가 흘러간다</a></p>\n<ul>\n<li><a href=\"#1-%ED%8C%A8%ED%82%B7-%ED%95%98%EB%82%98%ED%95%98%EB%82%98%EA%B0%80-%EB%8F%85%EB%A6%BD%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%8F%99%EC%9E%91%ED%95%9C%EB%8B%A4\">1. 패킷 하나하나가 독립적으로 동작한다</a></li>\n<li><a href=\"#2-lan-%EC%BC%80%EC%9D%B4%EB%B8%94%EC%9D%80-%EC%8B%A0%ED%98%B8%EB%A5%BC-%EC%95%BD%ED%99%94%EC%8B%9C%ED%82%A4%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%83%EC%9D%B4-%ED%95%B5%EC%8B%AC%EC%9D%B4%EB%8B%A4\">2. LAN 케이블은 신호를 약화시키지 않는 것이 핵심이다</a></li>\n<li><a href=\"#3-%EA%BC%BC%EC%9D%80-%EC%9E%A1%EC%9D%8C%EC%9D%84-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EB%B0%A9%EB%B2%95%EC%9D%B4%EB%8B%A4\">3. 꼼은 잡음을 방지하기 위한 방법이다.</a></li>\n<li><a href=\"#4-%EB%A6%AC%ED%94%BC%ED%84%B0-%ED%97%88%EB%B8%8C%EB%8A%94-%EC%97%B0%EA%B2%B0%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94-%EC%A0%84%EC%B2%B4-%EC%BC%80%EC%9D%B4%EB%B8%94%EC%97%90-%EC%8B%A0%ED%98%B8%EB%A5%BC-%EC%86%A1%EC%8B%A0%ED%95%9C%EB%8B%A4\">4. 리피터 허브는 연결되어 있는 전체 케이블에 신호를 송신한다</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-story2-%EC%8A%A4%EC%9C%84%EC%B9%AD-%ED%97%88%EB%B8%8C%EC%9D%98-%ED%8C%A8%ED%82%B7-%EC%A4%91%EA%B3%84-%EB%8F%99%EC%9E%91\">🛺 [Story2] 스위칭 허브의 패킷 중계 동작</a></p>\n<ul>\n<li><a href=\"#1-%EC%8A%A4%EC%9C%84%EC%B9%AD-%ED%97%88%EB%B8%8C%EB%8A%94-%EC%A3%BC%EC%86%8C-%ED%85%8C%EC%9D%B4%EB%B8%94%EB%A1%9C-%EC%A4%91%EA%B3%84%ED%95%9C%EB%8B%A4\">1. 스위칭 허브는 주소 테이블로 중계한다</a></li>\n<li><a href=\"#2-mac-%EC%A3%BC%EC%86%8C-%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%84-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B0%B1%EC%8B%A0%ED%95%9C%EB%8B%A4\">2. MAC 주소 테이블을 등록 및 갱신한다</a></li>\n<li><a href=\"#3-%EC%98%88%EC%99%B8%EC%A0%81%EC%9D%B8-%EB%8F%99%EC%9E%91\">3. 예외적인 동작</a></li>\n<li><a href=\"#4-%EC%A0%84%EC%9D%B4%EC%A4%91-%EB%AA%A8%EB%93%9C%EC%97%90%EC%84%9C-%EC%86%A1%EC%8B%A0%EA%B3%BC-%EC%88%98%EC%8B%A0%EC%9D%84-%EB%8F%99%EC%8B%9C%EC%97%90-%EC%8B%A4%ED%96%89%ED%95%9C%EB%8B%A4\">4. 전이중 모드에서 송신과 수신을 동시에 실행한다</a></li>\n<li><a href=\"#5-%EC%B5%9C%EC%A0%81%EC%9D%98-%EC%A0%84%EC%86%A1-%EC%86%8D%EB%8F%84%EB%A1%9C-%EB%B3%B4%EB%82%B4%EB%8A%94-%EC%9E%90%EB%8F%99-%EC%A1%B0%EC%A0%95\">5. 최적의 전송 속도로 보내는 자동 조정</a></li>\n<li><a href=\"#6-%EC%8A%A4%EC%9C%84%EC%B9%AD-%ED%97%88%EB%B8%8C%EB%8A%94-%EB%B3%B5%EC%88%98%EC%9D%98-%EC%A4%91%EA%B3%84-%EB%8F%99%EC%9E%91%EC%9D%84-%EB%8F%99%EC%8B%9C%EC%97%90-%EC%8B%A4%ED%96%89%ED%95%9C%EB%8B%A4\">6. 스위칭 허브는 복수의 중계 동작을 동시에 실행한다</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"October 01, 2021","title":"성공과 실패를 결정하는 1%의 네트워크 원리_5","categories":"네트워크 책","author":"코다","emoji":"⚡️"},"fields":{"slug":"/one-percent-network-5/"}},"site":{"siteMetadata":{"siteUrl":"https://yjksw.github.io","comments":{"utterances":{"repo":"yjksw/yjksw.github.io"}}}}},"pageContext":{"slug":"/one-percent-network-4/","nextSlug":"/high-traffic-service_13/","prevSlug":"/one-percent-network-5/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}