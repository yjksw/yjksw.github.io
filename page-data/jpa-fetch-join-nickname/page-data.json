{"componentChunkName":"component---src-templates-blog-template-js","path":"/jpa-fetch-join-nickname/","result":{"data":{"cur":{"id":"f536d063-bb0a-5d8a-89be-12abd97a0c4e","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<ul>\n<li>JPA의 <code class=\"language-text\">fetch join</code> 사용시 별칭을 쓰면 안되는 이유가 무엇인지 알아본다. </li>\n<li><a href=\"https://github.com/woowacourse-teams/2021-pick-git\">프로젝트</a>애서 fetch join 시 별칭 사용에 대해서 고민해본다. </li>\n</ul>\n<br>\n<h2 id=\"fetch-join-별칭은-왜-안될까-\" style=\"position:relative;\"><a href=\"#fetch-join-%EB%B3%84%EC%B9%AD%EC%9D%80-%EC%99%9C-%EC%95%88%EB%90%A0%EA%B9%8C-\" aria-label=\"fetch join 별칭은 왜 안될까  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fetch join 별칭은 왜 안될까 ?</h2>\n<ul>\n<li>fetch join에서 별칭이 안되는 이유는 데이터의 일관성이 깨지기 때문이다.</li>\n<li>\n<p>예를 들어서 다음과 같은 코드는 fetch join 대상에 조건문이 들어가서 일관성이 깨진 경우이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fetch join 대상에 조건문을 걸었을 때 데이터가 불일치하다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">findTeamWithSpecificNameMember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// given</span>\n\n    <span class=\"token comment\">// 데이터 삽입</span>\n    <span class=\"token class-name\">Team</span> teamA <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Team</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"teamA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Member</span> memberA1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Member</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberA1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Member</span> memberA2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Member</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberA2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Member</span> memberA3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Member</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberA3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> teamAMembers <span class=\"token operator\">=</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>memberA1<span class=\"token punctuation\">,</span> memberA2<span class=\"token punctuation\">,</span> memberA3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    teamA<span class=\"token punctuation\">.</span><span class=\"token function\">setMembers</span><span class=\"token punctuation\">(</span>teamAMembers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    teamRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>teamA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    testEntityManager<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    testEntityManager<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 데이터 조회</span>\n    <span class=\"token class-name\">Team</span> teamA <span class=\"token operator\">=</span> teamRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElseThrow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> teamAMemberSize <span class=\"token operator\">=</span> teamA<span class=\"token punctuation\">.</span><span class=\"token function\">getMembers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    testEntityManager<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// when</span>\n    <span class=\"token class-name\">Team</span> teamAWithMemberName <span class=\"token operator\">=</span> teamRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findTeamWithSomeMemberByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberA1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// then</span>\n    <span class=\"token comment\">/* 본래 teamA에 3명의 멤버가 들어가있지만 fetch join 대상에 where문이 들어가면서 데이터 불일치가 일어났다.\n    * collection 에는 관련 데이터가 모두 들어가있기를 기대하는데 그렇지 않다.\n    * 따라서 fetch join 대상에 필터링 조건을 거는 것을 지양한다. \n    */</span>\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>teamA<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span>teamAWithMemberName<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>teamAMemberSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEqualTo</span><span class=\"token punctuation\">(</span>teamAWithMemberName<span class=\"token punctuation\">.</span><span class=\"token function\">getMembers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>TeamA에 대한 member collection 은 본래 3개이다. 그리고 fetch join을 하면 연관된 데이터가 모두 들어올 것이라고 가정한다. </li>\n<li>하지만 위와 같이 fetch join 대상에 별칭을 주어 where 필터링 조건을 사용하면 실제로 TeamA에 연관된 멤버는 3명이지만 <code class=\"language-text\">memberA1</code>만 연관 데이터로 들어온다. </li>\n<li>DB의 상태에 대한 일관성이 깨진다. </li>\n</ul>\n<h3 id=\"하지만-예외는-있다\" style=\"position:relative;\"><a href=\"#%ED%95%98%EC%A7%80%EB%A7%8C-%EC%98%88%EC%99%B8%EB%8A%94-%EC%9E%88%EB%8B%A4\" aria-label=\"하지만 예외는 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>하지만 예외는 있다</h3>\n<ul>\n<li>일관성을 해치지지 않는 한에서 성능에 도움이 된다면 예외적으로 사용해도 된다. (아마도 하이버네이트가 별칭을 허용하는 이유…)</li>\n<li>\n<p>예를 들어 다음과 같은 쿼리는 일관성을 해치지 않는다. </p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> m <span class=\"token keyword\">from</span> Member m <span class=\"token keyword\">join</span> <span class=\"token keyword\">fetch</span> m<span class=\"token punctuation\">.</span>team <span class=\"token keyword\">where</span> t<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> :teamName</code></pre></div>\n</li>\n<li>하지만 위의 쿼리가 left join fetch로 되면 일관성이 깨진다. (Team이 null이 아닌 Member에 대해서 null 값이 들어가기 때문이다.)</li>\n<li>때문에 매우 조심스럽게 사용해야한다. </li>\n</ul>\n<br>\n<h2 id=\"우리-프로젝트에-있는-별칭은\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%A6%AC-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90-%EC%9E%88%EB%8A%94-%EB%B3%84%EC%B9%AD%EC%9D%80\" aria-label=\"우리 프로젝트에 있는 별칭은 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우리 프로젝트에 있는 별칭은?!</h2>\n<ul>\n<li>\n<p>깃들다 프로젝트에도 fetch join 대상에 별칭을 사용하는 부분이 있다. 다음 <a href=\"http://tech.pick-git.com/jpa-proxy-equals-bug/\">포스트</a>에 어떤 상황이었는지 배경 설명이 자세하게 되어있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select distinct p from Post p left join fetch p.likes.likes l left join fetch l.user where p.id = :postId\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Post</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findPostWithLikeUsers</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"postId\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> postId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Post 안에는 해당 게시물을 좋아요한 유저들 정보를 담은 <code class=\"language-text\">Like</code> 리스트가 담겨있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">//....</span>\n\n <span class=\"token annotation punctuation\">@OneToMany</span><span class=\"token punctuation\">(</span>\n    mappedBy <span class=\"token operator\">=</span> <span class=\"token string\">\"post\"</span><span class=\"token punctuation\">,</span>\n    fetch <span class=\"token operator\">=</span> <span class=\"token class-name\">FetchType</span><span class=\"token punctuation\">.</span>LAZY<span class=\"token punctuation\">,</span>\n    cascade <span class=\"token operator\">=</span> <span class=\"token class-name\">CascadeType</span><span class=\"token punctuation\">.</span>PERSIST<span class=\"token punctuation\">,</span>\n    orphanRemoval <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Like</span><span class=\"token punctuation\">></span></span> likes<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Like</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token annotation punctuation\">@Id</span> <span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span>IDENTITY<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@ManyToOne</span><span class=\"token punctuation\">(</span>fetch <span class=\"token operator\">=</span> <span class=\"token class-name\">FetchType</span><span class=\"token punctuation\">.</span>LAZY<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@JoinColumn</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"post_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Post</span> post<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@ManyToOne</span><span class=\"token punctuation\">(</span>fetch <span class=\"token operator\">=</span> <span class=\"token class-name\">FetchType</span><span class=\"token punctuation\">.</span>LAZY<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@JoinColumn</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"user_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>위 쿼리를 살펴보면 </p>\n<ul>\n<li>별칭이 <code class=\"language-text\">p.likes.likes l</code>에 사용된다. </li>\n<li>where 조건문에는 fetch join 대상을 필터링 하지 않는다. </li>\n<li>따라서 데이터 일관성을 헤치지 않는다.</li>\n</ul>\n</li>\n<li>fetch join을 할 때 주의해야하는 부분은 collection을 여러개 fetch join 할 경우이다. </li>\n<li>위 같은 경우는 <code class=\"language-text\">post -> like</code> 관계는 OneToMany라서 한번까지 fetch join 할 수 있다. </li>\n<li><code class=\"language-text\">like -> user</code>는 ManyToOne 관계 이므로 추가 fetch join을 할 수 있었다. </li>\n</ul>\n<br>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<ul>\n<li>처음에 버그를 마주하고 fetch join 대상에 별칭을 두는 것이 찝찝했지만 왜 안되는지 모르는 상태로 (나만) 넘어갔다.</li>\n<li>검토해보니 fetch join 대상이 아니었으며 여러 collection을 fetch join 하는 상황도 아니었다. </li>\n<li>하지만 이런 예외적인 경우는 자세히 알아보고 주의해서 사용해야 할 것 같다. 또 왜인지 모르고 그냥 안쓰지는 말자. </li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#intro\">Intro</a></li>\n<li>\n<p><a href=\"#fetch-join-%EB%B3%84%EC%B9%AD%EC%9D%80-%EC%99%9C-%EC%95%88%EB%90%A0%EA%B9%8C-\">fetch join 별칭은 왜 안될까 ?</a></p>\n<ul>\n<li><a href=\"#%ED%95%98%EC%A7%80%EB%A7%8C-%EC%98%88%EC%99%B8%EB%8A%94-%EC%9E%88%EB%8B%A4\">하지만 예외는 있다</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%9A%B0%EB%A6%AC-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90-%EC%9E%88%EB%8A%94-%EB%B3%84%EC%B9%AD%EC%9D%80\">우리 프로젝트에 있는 별칭은?!</a></li>\n<li><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></li>\n</ul>\n</div>","excerpt":"Intro JPA의  사용시 별칭을 쓰면 안되는 이유가 무엇인지 알아본다.  프로젝트애서 fetch join 시 별칭 사용에 대해서 고민해본다.  fetch join 별칭은 왜 안될까 ? fetch join에서 별칭이 안되는 이유는 데이터의 일관성이 깨지기 때문이다. 예를 들어서 다음과 같은 코드는 fetch join 대상에 조건문이 들어가서 일관성이 깨진 경우이다. TeamA에 대한 member collection 은 본래 3개이다. 그리고 fetch join을 하면 연관된 데이터가 모두 들어올 것이라고 가정한다.  하지만 위와 같이 fetch join 대상에 별칭을 주어 where 필터링 조건을 사용하면 실제로 TeamA에 연관된 멤버는 3명이지만 만 연관 데이터로 들어온다.  DB의 상태에 대한 일관성이 깨진다.  하지만 예외는 있다 일관성을 해치지지 않는 한에서 성능에 도움이 된다면 예외적으로 사용해도 된다. (아마도 하이버네이트가 별칭을 허용하는 이유…) 예를 들어 다음과…","frontmatter":{"date":"October 06, 2021","title":"JPA 에서 별칭을 쓰지 않는 이유 (하지만 쓴 이유)","categories":"JPA","author":"코다","emoji":"🚀"},"fields":{"slug":"/jpa-fetch-join-nickname/"}},"next":{"id":"3144633b-9fb5-54a7-9f11-f6a48517333b","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INTRO</h2>\n<ul>\n<li>\n<p>현재 진행중인 <a href=\"https://github.com/woowacourse-teams/2021-pick-git\">프로젝트</a>에서 DB Replication을 적용했었다. </p>\n<ul>\n<li><a href=\"https://yjksw.github.io/db-replication/\">Replication 알아보기</a></li>\n</ul>\n</li>\n<li>DB replication 적용 이후 Master DB를 업그레이드 해야하는 상황에서 replicas와의 연동에 문제가 생긴적이 있었다. 이때 Master와 replicas 간의 데이터 연동 방법을 이해하고 해결한 (매우 간단한) 방법을 기록한다. </li>\n</ul>\n<h2 id=\"master-db와-replicas-동기화\" style=\"position:relative;\"><a href=\"#master-db%EC%99%80-replicas-%EB%8F%99%EA%B8%B0%ED%99%94\" aria-label=\"master db와 replicas 동기화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Master DB와 replicas 동기화</h2>\n<ul>\n<li>Master DB에 데이터를 쓰기 위해서는 replicas에서 master db 의 데이터와 연결되어 있어야 한다. 그러기 위해서 replication을 설정할 때 <code class=\"language-text\">show master status</code> 라는 명령어를 통해서 나온 <code class=\"language-text\">File</code>값과 <code class=\"language-text\">Position</code> 값을 replica db 설정시 적용해 주었다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">MariaDB [pickgit]&gt; show master status;\n+--------------------+----------+--------------+------------------+\n| File               | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n+--------------------+----------+--------------+------------------+\n| mariadb-bin.000008 | 68143505 |              |                  |\n+--------------------+----------+--------------+------------------+\n1 row in set (0.000 sec)</code></pre></div>\n<ul>\n<li>여기서 File은 master db의 binary 로그 파일이고 Position 값은 해당 파일의 현재 위치이다. </li>\n<li>\n<p>위 log 파일에는 어떤 내용이 담겨 있을까?</p>\n<blockquote>\n<p>The MariaDB binary log is a series of files that contain events. An event is a description of a modification to the contents of our database. <br>출처: Big Data and Business Intelligence</p>\n</blockquote>\n</li>\n<li>로그 파일에는 데이터베이스에서 일어난 <code class=\"language-text\">event</code>에 대해서 적혀 있는데, 여기서 <code class=\"language-text\">event</code>라고 하는 것은 데이터베이스의 컨텐츠에 대해 일어난 변경사항을 말한다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">MariaDB [pickgit]&gt; show master status;\n+--------------------+----------+--------------+------------------+\n| File               | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n+--------------------+----------+--------------+------------------+\n| mariadb-bin.000008 | 68143656 |              |                  |\n+--------------------+----------+--------------+------------------+\n1 row in set (0.000 sec)</code></pre></div>\n<ul>\n<li>실제로 테이블을 추가하는 쿼리를 날린 후 다시 확인해보니 Position값이 증가한 것을 확인할 수 있다. </li>\n<li>Replicas 설정시 위 값을 지정한다는 것은 replicas에 데이터를 업데이트하는 file과 해당 file에서의 위치를 지정하는 것이다. </li>\n<li>번외로 만일 binary loggin이 비활성되어 있는 상태에서 master 데이터베이스가 실행중이었다면 <code class=\"language-text\">show master status;</code> 명령어에 나오는 값이 비어있을 것이다. 그 경우 replicas에 master의 로그파일과 position을 지정할 때 빈 스트링 (”)과 4를 지정하면 된다. </li>\n</ul>\n<h2 id=\"문제상황-및-해결\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%83%81%ED%99%A9-%EB%B0%8F-%ED%95%B4%EA%B2%B0\" aria-label=\"문제상황 및 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제상황 및 해결</h2>\n<ul>\n<li>본래 사용한 MariaDB 버전은 10.1이었다. 하지만 Flyway를 적용한 이후 MariaDB를 10.4로 업그레이드 하지 않으면 적용할 수 없다는 오류가 생겼다. MariaDB 버전을 업그레이드 할 수 있는 방법을 찾아보았지만 현재 사용 중인 DB 데이터를 백업하고 삭제 후 10.4 버전을 새로 설치하여 데이터를 복원하라는 내용밖에 나오지 않았다. </li>\n<li>현재 Master 1개 slave 2개를 사용중이었기 때문에 DB 3개를 모두 삭제하고 재설치하는 것은 지나치게 많은 작업이라고 생각했다. (replication 설정, 유저 생성 및 권한 부여 등등 자잘한 설정이 많음) 따라서 Flyway가 직접 적용되는 Master DB만 수정하고 Slave DB는 기존의 것을 유지하기로 했다. </li>\n<li>\n<p>Master DB를 새로 구성하는 와중에 다음과 같은 문제 상황이 발생했다. </p>\n<ul>\n<li>문제 상황</li>\n<li>Master DB의 설정을 마치고 Slave에 Master를 지정하여 연결을 완료함 </li>\n<li>Master DB의 <code class=\"language-text\">replication</code> 유저에게 외부에서 쓰기 권한을 부여하지 않은 것을 깨달음 </li>\n<li>Master DB의 <code class=\"language-text\">replication</code> 유저에게 권한을 부여함</li>\n<li>Slave DB에 Master DB의 데이터가 반영이 되지 않음  </li>\n</ul>\n</li>\n<li>\n<p>Master에서 연결된 slave hosts를 확인해 보면 잘 연결되어 있는 것을 확인할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">MariaDB [pickgit]&gt; show slave hosts;\n+-----------+------+------+-----------+\n| Server_id | Host | Port | Master_id |\n+-----------+------+------+-----------+\n|         3 |      | 9000 |         1 |\n|         2 |      | 9000 |         1 |\n+-----------+------+------+-----------+\n2 rows in set (0.000 sec)</code></pre></div>\n</li>\n<li>Slave 의 상태를 확인해보면 <code class=\"language-text\">Slave_IO_State: Waiting for master to sent event</code> 라고 나와있는 것을 확인할 수 있다. </li>\n</ul>\n<p align=\"center\"><img width=\"90%\" src=\"https://user-images.githubusercontent.com/63405904/134805936-9f3469e3-aa3e-496f-91b3-ae5b7f6e881d.png\"></p>\n<ul>\n<li>위 상태의 더 아래에 <code class=\"language-text\">Last_Error</code> 와 <code class=\"language-text\">Last_SQL_Error</code>를 확인해보면 특정 쿼리에 에러가 발생했다는 로그가 출력되어 있다. 즉, <code class=\"language-text\">replication</code> 이라는 유저가 Master에서는 잘 적용이 되었지만 Slave DB에는 존재하지 않기 때문에 에러가 발생한 것이다. 해당 로그 이후에 추가 및 변경된 데이터에 대해서는 slave db에 더 이상 반영이 되지 않았다. </li>\n<li>위 문제를 해결하기 위해서는 Slave DB가 Master의 로그 파일을 읽는 Position을 위 쿼리가 실행된 이후로 옮겨서 해당 쿼리를 건너뛰어야 한다. 따라서 <code class=\"language-text\">show master status</code>를 다시 실행하여 나온 최신 position을 slave DB 설정에 넣어주어 문제를 해결했다. 여기서 주의할 점은 만일 이전에 변경된 데이터가 있다면 해당 변경 로그도 모두 건너뛰게 되니 다시 적용해주어야 한다. </li>\n</ul>\n<p><strong>[참고자료]</strong></p>\n<ul>\n<li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/replication-setup-replicas.html#replication-howto-newservers\">https://dev.mysql.com/doc/refman/8.0/en/replication-setup-replicas.html#replication-howto-newservers</a></li>\n<li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/replication-howto-masterstatus.html\">https://dev.mysql.com/doc/refman/8.0/en/replication-howto-masterstatus.html</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#intro\">INTRO</a></li>\n<li><a href=\"#master-db%EC%99%80-replicas-%EB%8F%99%EA%B8%B0%ED%99%94\">Master DB와 replicas 동기화</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C%EC%83%81%ED%99%A9-%EB%B0%8F-%ED%95%B4%EA%B2%B0\">문제상황 및 해결</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 26, 2021","title":"DB 리플리케이션 적용시 Binary 로그 에러 해결방법","categories":"데이터베이스 인프라","author":"코다","emoji":"🚊"},"fields":{"slug":"/db-replication-binary-log/"}},"prev":{"id":"da36c6a9-a62a-53e5-a254-0a74475b5d42","html":"<p>Github에 익숙하지 않기 때문에 커밋은 나에게 push를 해서 업로드를 하기 위한 중간과정 중 하나였다. 하지만 다른 곳에서 깃헙이나 프로젝트 진행을 하면서 커밋을 하는 단위의 중요성과 깃헙의 최대 장점인 프로젝트를 되돌리기 위한 커밋 메세지의 중요성에 대해서 여러번 들었었다. 이번에 프리코스를 시작하면서 커밋 메세지에 대한 가이드를 읽고 정리해보기로 했다. <br></p>\n<p><a href=\"%5Bhttps://gist.github.com/stephenparish/9941e89d80e2bc58a153#recognizing-unimportant-commits%5D(https://gist.github.com/stephenparish/9941e89d80e2bc58a153#recognizing-unimportant-commits)\">참고 사이트</a></p>\n<br>\n<h2 id=\"changelogmd-생성하기\" style=\"position:relative;\"><a href=\"#changelogmd-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"changelogmd 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CHANGELOG.md 생성하기</h2>\n<ul>\n<li>changelog에는 3개의 section이 있다: new features, bug fixes, breaking changes.</li>\n<li>이러한 정보들은 배포가 될 때 script로 생성이 되어야 하며 해당하는 commit과 함께 제공되어야 한다.</li>\n<li>\n<p>해당 로그들을 보는 방법들은 다음과 같다.</p>\n<ol>\n<li>\n<p>지난 release 이후에 발생한 모든 subject(커밋 메세지의 첫번째 라인) 조회:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">git log <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>lasg tag<span class=\"token punctuation\">></span></span> HEAD <span class=\"token operator\">--</span>pretty<span class=\"token operator\">=</span>format<span class=\"token operator\">:</span>$s</code></pre></div>\n</li>\n<li>\n<p>이번 release의 새로운 feature:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">git log <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>last release<span class=\"token punctuation\">></span></span> HEAD <span class=\"token operator\">--</span>grep feature</code></pre></div>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"recognizing-unimportant-commits\" style=\"position:relative;\"><a href=\"#recognizing-unimportant-commits\" aria-label=\"recognizing unimportant commits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recognizing unimportant commits</h3>\n<ul>\n<li>\n<p>사소한 버그 수정 등과 같이 중요하지 않은 커밋들을 걸러낼 수 있다. 코드의 logic이 수정된 부분들이 아닌 경우에는 다음과 같은 명령어로 무시할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">git bisect skip $<span class=\"token punctuation\">(</span>git rev<span class=\"token operator\">-</span>list <span class=\"token operator\">--</span>grep irrelevant <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>good place<span class=\"token punctuation\">></span></span> HEAD<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"history-브라우징-시-정보-제공을-위한-커밋\" style=\"position:relative;\"><a href=\"#history-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A7%95-%EC%8B%9C-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%BB%A4%EB%B0%8B\" aria-label=\"history 브라우징 시 정보 제공을 위한 커밋 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>History 브라우징 시 정보 제공을 위한 커밋</h3>\n<ul>\n<li>커밋 메세지를 작성할 때 가능한 많은 정보들을 제공하는 것이 좋다.</li>\n<li>그렇기에 메세지로 무슨 변경이나 추가가 있었는지 확인 할 수 있는데, 해당 메세지가 일정한 convention을 지닐 필요가 있다.</li>\n</ul>\n<br>\n<h2 id=\"commit-message-형식\" style=\"position:relative;\"><a href=\"#commit-message-%ED%98%95%EC%8B%9D\" aria-label=\"commit message 형식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Commit Message 형식</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>type<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>scope<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>subject<span class=\"token punctuation\">></span></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>BLANK LINE<span class=\"token punctuation\">></span></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>body<span class=\"token punctuation\">></span></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>BLANK LINE<span class=\"token punctuation\">></span></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>footer<span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>커밋 메세지는 100자를 넘지 않는다. 이래야지 깃헙이나 깃 툴을 사용할 때 메세지 읽기가 쉽다.</li>\n</ul>\n<h3 id=\"subject-line\" style=\"position:relative;\"><a href=\"#subject-line\" aria-label=\"subject line permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subject line</h3>\n<p>어떤 변경이 일어났는지에 대한 간단명료한 설명을 담고 있다. (커밋 메세지의 첫 줄)</p>\n<ol>\n<li>\n<p>Allowed <code class=\"language-text\">&lt;type></code> </p>\n<ul>\n<li>feat (feature)</li>\n<li>fix (bug fix)</li>\n<li>docs (documentation)</li>\n<li>style (formatting, missing semi colons, …)</li>\n<li>refactor</li>\n<li>test (when adding missing tests)</li>\n<li>chore (maintain)</li>\n</ul>\n</li>\n<li>\n<p>Allowed <code class=\"language-text\">&lt;scope></code> </p>\n<ul>\n<li>적용 범위를 나타내는 것으로 커밋에 대한 부가적인 정보이다. (선택 사항)</li>\n<li>적용 범위에 대한 예시는 이러하다: <span class=\"mjx-chtml\"><span class=\"mjx-math\" aria-label=\"location,\"><span class=\"mjx-mrow\" aria-hidden=\"true\"><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.446em; padding-bottom: 0.298em;\">l</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">o</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">c</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">a</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.372em; padding-bottom: 0.298em;\">t</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.446em; padding-bottom: 0.298em;\">i</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">o</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">n</span></span><span class=\"mjx-mo\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.144em; padding-bottom: 0.519em;\">,</span></span></span></span></span>browser, <span class=\"mjx-chtml\"><span class=\"mjx-math\" aria-label=\"compile,\"><span class=\"mjx-mrow\" aria-hidden=\"true\"><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">c</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">o</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">m</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.446em;\">p</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.446em; padding-bottom: 0.298em;\">i</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.446em; padding-bottom: 0.298em;\">l</span></span><span class=\"mjx-mi\"><span class=\"mjx-char MJXc-TeX-math-I\" style=\"padding-top: 0.225em; padding-bottom: 0.298em;\">e</span></span><span class=\"mjx-mo\"><span class=\"mjx-char MJXc-TeX-main-R\" style=\"margin-top: -0.144em; padding-bottom: 0.519em;\">,</span></span></span></span></span>rootScope, ngHref, ngClick, ngView, 등등</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">&lt;subject></code></p>\n<ul>\n<li>현재형으로 작성한다: “change” → x “changed” or “changes”</li>\n<li>첫 문자를 대문자로 작성하지 않는다.</li>\n<li>(.)을 작성하지 않는다.</li>\n</ul>\n</li>\n<li>\n<p>해당 커밋에 major 한 변화가 있다면 큰 변화가 있기 때문에 호환이 안되는 부분들이 있을 수 있다. 해당 부분들을 footer에 반드시 작성하게 되는데, 해당 메세지를 확인하지 못할 수도 있기 때문에 다음과 같이 <code class=\"language-text\">BREAKING CHANGE: 설명</code> 있음을 표시한다. </p>\n<ul>\n<li><code class=\"language-text\">예: fead(pipeling)!: Add pipeline function</code></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"message-body\" style=\"position:relative;\"><a href=\"#message-body\" aria-label=\"message body permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Message body</h3>\n<ul>\n<li>커밋 메세지와 같이 현재형 동사로 작성한다.</li>\n<li>수정의 동기화, 수정 이전과의 비교를 명시한다.</li>\n<li>본문에 여러개가 있을 경우에는 (-)로 구분한다.</li>\n</ul>\n<h3 id=\"message-footer\" style=\"position:relative;\"><a href=\"#message-footer\" aria-label=\"message footer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Message footer</h3>\n<ul>\n<li>커밋이 어떤 이슈에서 왔는지 촘조 정보들을 추가하는 용도로 사용.</li>\n<li>특정 이슈와의 연관을 표현하기 위해 <code class=\"language-text\">close #123 #245</code> 같이 커밋 메세지를 추가한다.</li>\n<li>\n<p>Breaking changes에 대해서 footer에 작성한다</p>\n<p>어떤 것이 수정되었는지, 수정이 된 정의, migration note 등이 추가되도록한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">BREAKING CHANGE<span class=\"token operator\">:</span> isolate scope bindings definition has changed and\n    the inject option <span class=\"token keyword\">for</span> the directive controller injection was <span class=\"token class-name\"><span class=\"token namespace\">removed<span class=\"token punctuation\">.</span></span>\n    \n    To</span> migrate the code follow the example below<span class=\"token operator\">:</span>\n    \n    <span class=\"token class-name\">Before</span><span class=\"token operator\">:</span>\n    \n    scope<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      myAttr<span class=\"token operator\">:</span> <span class=\"token string\">'attribute'</span><span class=\"token punctuation\">,</span>\n      myBind<span class=\"token operator\">:</span> <span class=\"token string\">'bind'</span><span class=\"token punctuation\">,</span>\n      myExpression<span class=\"token operator\">:</span> <span class=\"token string\">'expression'</span><span class=\"token punctuation\">,</span>\n      myEval<span class=\"token operator\">:</span> <span class=\"token string\">'evaluate'</span><span class=\"token punctuation\">,</span>\n      myAccessor<span class=\"token operator\">:</span> <span class=\"token string\">'accessor'</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token class-name\">After</span><span class=\"token operator\">:</span>\n    \n    scope<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      myAttr<span class=\"token operator\">:</span> <span class=\"token string\">'@'</span><span class=\"token punctuation\">,</span>\n      myBind<span class=\"token operator\">:</span> <span class=\"token string\">'@'</span><span class=\"token punctuation\">,</span>\n      myExpression<span class=\"token operator\">:</span> <span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// myEval - usually not useful, but in cases where the expression is assignable, you can use '='</span>\n      myAccessor<span class=\"token operator\">:</span> <span class=\"token string\">'='</span> <span class=\"token comment\">// in directive's template change myAccessor() to myAccessor</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token class-name\">The</span> removed `inject` wasn't generaly useful <span class=\"token keyword\">for</span> directives so there should be no code using it<span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token function\">feat</span><span class=\"token punctuation\">(</span>$browser<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> onUrlChange event <span class=\"token punctuation\">(</span>popstate<span class=\"token operator\">/</span>hashchange<span class=\"token operator\">/</span>polling<span class=\"token punctuation\">)</span>\n\n<span class=\"token class-name\">Added</span> <span class=\"token keyword\">new</span> event <span class=\"token keyword\">to</span> $browser<span class=\"token operator\">:</span>\n<span class=\"token operator\">-</span> forward popstate event <span class=\"token keyword\">if</span> available\n<span class=\"token operator\">-</span> forward hashchange event <span class=\"token keyword\">if</span> popstate not available\n<span class=\"token operator\">-</span> <span class=\"token keyword\">do</span> polling when neither popstate nor hashchange available\n\n<span class=\"token class-name\">Breaks</span> $browser<span class=\"token punctuation\">.</span>onHashChange<span class=\"token punctuation\">,</span> which was removed <span class=\"token punctuation\">(</span>use onUrlChange instead<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token function\">fix</span><span class=\"token punctuation\">(</span>$compile<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> couple of unit tests <span class=\"token keyword\">for</span> IE9\n\n<span class=\"token class-name\">Older</span> <span class=\"token class-name\">IEs</span> serialize html uppercased<span class=\"token punctuation\">,</span> but IE9 does not<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token class-name\">Would</span> be better <span class=\"token keyword\">to</span> <span class=\"token namespace\">expect</span> <span class=\"token keyword\">case</span> insensitive<span class=\"token punctuation\">,</span> unfortunately jasmine does\nnot allow <span class=\"token keyword\">to</span> <span class=\"token namespace\">user</span> regexps <span class=\"token keyword\">for</span> <span class=\"token keyword\">throw</span> <span class=\"token class-name\"><span class=\"token namespace\">expectations<span class=\"token punctuation\">.</span></span>\n\nCloses</span> #<span class=\"token number\">392</span>\n<span class=\"token class-name\">Breaks</span> foo<span class=\"token punctuation\">.</span>bar api<span class=\"token punctuation\">,</span> foo<span class=\"token punctuation\">.</span>baz should be used instead</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token function\">docs</span><span class=\"token punctuation\">(</span>guide<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> updated fixed docs from <span class=\"token class-name\">Google</span> <span class=\"token class-name\">Docs</span>\n\n<span class=\"token class-name\">Couple</span> of typos fixed<span class=\"token operator\">:</span>\n<span class=\"token operator\">-</span> indentation\n<span class=\"token operator\">-</span> batchLogbatchLog <span class=\"token operator\">-></span> batchLog\n<span class=\"token operator\">-</span> start periodic checking\n<span class=\"token operator\">-</span> missing brace</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#changelogmd-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">CHANGELOG.md 생성하기</a></p>\n<ul>\n<li><a href=\"#recognizing-unimportant-commits\">Recognizing unimportant commits</a></li>\n<li><a href=\"#history-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A7%95-%EC%8B%9C-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%BB%A4%EB%B0%8B\">History 브라우징 시 정보 제공을 위한 커밋</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#commit-message-%ED%98%95%EC%8B%9D\">Commit Message 형식</a></p>\n<ul>\n<li><a href=\"#subject-line\">Subject line</a></li>\n<li><a href=\"#message-body\">Message body</a></li>\n<li><a href=\"#message-footer\">Message footer</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%98%88%EC%8B%9C\">예시</a></li>\n</ul>\n</div>","frontmatter":{"date":"November 29, 2021","title":"[GitHub] Commit Message Convetion","categories":"기타","author":"코다","emoji":"👀"},"fields":{"slug":"/commit-message-convetion/"}},"site":{"siteMetadata":{"siteUrl":"https://yjksw.github.io","comments":{"utterances":{"repo":"yjksw/yjksw.github.io"}}}}},"pageContext":{"slug":"/jpa-fetch-join-nickname/","nextSlug":"/db-replication-binary-log/","prevSlug":"/commit-message-convetion/"}},"staticQueryHashes":["1073350324","2938748437"]}