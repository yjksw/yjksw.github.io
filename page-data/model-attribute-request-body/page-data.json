{"componentChunkName":"component---src-templates-blog-template-js","path":"/model-attribute-request-body/","result":{"data":{"cur":{"id":"b0ca772e-1b48-53f1-8a7f-24d1a8ffe267","html":"<p>이번에 스프링 체스 자바 웹 어플리케이션을 사용하여 구현하면서 처음에는 모두 <code class=\"language-text\">@RequestParam</code> 으로 데이터를 가져왔었다. 하지만 인자가 너무 많아지는 경우 메서드에 파라미터가 많아지면서 가독성이 안 좋아졌다. 또한 DTO에 해당 데이터를 담아서 서비스 레이어에 전달해야하거나 할 때 일일이 데이터를 DTO에 담아서 가공해야 하는 작업을 해야하기도 했다. 코드를 구현할 때 손가락이 아프다면 수정할 부분을 찾으라고 했었는데 확실히 <code class=\"language-text\">@RequestParam</code>으로 받는 것은 손가락이 아팠다. <br></p>\n<p>아니나 다를까 리뷰어가 @ModelAttribute를 사용하는 걸 추천했다. 마침 레벨1 제이슨 톡방에서도 @ModelAttribute 에 대한 논의가 활발하길래 공부도 하고 코드에 적용을 하며 배운 것을 기록해본다. </p>\n<h2 id=\"modelattribute-vs-requestbody\" style=\"position:relative;\"><a href=\"#modelattribute-vs-requestbody\" aria-label=\"modelattribute vs requestbody permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@ModelAttribute vs. @RequestBody</h2>\n<p>간단하게 말하면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token number\">1.</span> <span class=\"token annotation punctuation\">@ModelAttribute</span>은 form data로 오는 데이터를 저장한다<span class=\"token punctuation\">.</span> \n<span class=\"token number\">2.</span> <span class=\"token annotation punctuation\">@RequestBody</span>는 JSON<span class=\"token operator\">/</span>xml 타입으로 오는 body에 담긴 데이터를 저장한다<span class=\"token punctuation\">.</span></code></pre></div>\n<p><code class=\"language-text\">@ModelAttribute</code> 같은 경우는 parameter 값으로 DTO에 바인딩한다. 따라서 해당 DTO 객체에 <code class=\"language-text\">setter</code> 메소드가 반드시 있어야 한다. 따라서 타입에 대한 검증을 한 후에 setting을 한다. </p>\n<p><code class=\"language-text\">@RequestBody</code>의 경우는 본문 body에 있는 Json/xml 타입을 바인딩하기 때문에 <code class=\"language-text\">HttpMessageReader</code>를 통해서 <code class=\"language-text\">ObjectMapper</code>를 한다. </p>\n<p>여기서 <code class=\"language-text\">HttpMessageReader</code>는 들어온 request body의 데이터값을 Java object로 역직렬화 해준다. 이때 역직렬화는 <code class=\"language-text\">ObjectMapper</code>의 <code class=\"language-text\">readValue()</code> 메서드로 변환하므로 setter가 필요가 없다. (단, 기본 생성자의 경우는 필요한 경우가 많다) </p>\n<h2 id=\"사용예시\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%98%88%EC%8B%9C\" aria-label=\"사용예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용예시</h2>\n<ul>\n<li>\n<p>form 데이터로 넘어오는 경우 @ModelAttribute를 사용해서 바인딩한다. 여기서 @RequestBody를 쓰면 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/white-game\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">whiteStart</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@ModelAttribute</span> <span class=\"token class-name\">RoomInfoRequestDto</span> roomInfoRequestDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> room <span class=\"token operator\">=</span> roomInfoRequestDto<span class=\"token punctuation\">.</span><span class=\"token function\">getRoomName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> roomInfoRequestDto<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"room\"</span><span class=\"token punctuation\">,</span> room<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        session<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"game\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>아래의 경우 js에서 데이터를 보내줄 content-type을 지정하지 않았을 때 오류가 났다. 이후에 @RequestBody는 json 타입을 받기 때문에 <code class=\"language-text\">Content-type</code>을  <code class=\"language-text\">application/json</code>으로 지정하니 잘 바인딩이 되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@PutMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/game\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MoveResponseDto</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">MoveRequestDto</span> moveRequestDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> chessService<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>moveRequestDto<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>번외로, 서버로 내보내는 content-type에서 json을 지정하고 싶을 경우 <code class=\"language-text\">Content-type : 'application/json'</code> 으로 지정하고 서버에서 받는 데이터의 경우 <code class=\"language-text\">Data-type : 'json'</code> 으로 지정해야 한다. (중요한 이유는 없고 그냥 설정이 그렇게 되어 있음)</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#modelattribute-vs-requestbody\">@ModelAttribute vs. @RequestBody</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9%EC%98%88%EC%8B%9C\">사용예시</a></li>\n</ul>\n</div>","excerpt":"이번에 스프링 체스 자바 웹 어플리케이션을 사용하여 구현하면서 처음에는 모두  으로 데이터를 가져왔었다. 하지만 인자가 너무 많아지는 경우 메서드에 파라미터가 많아지면서 가독성이 안 좋아졌다. 또한 DTO에 해당 데이터를 담아서 서비스 레이어에 전달해야하거나 할 때 일일이 데이터를 DTO에 담아서 가공해야 하는 작업을 해야하기도 했다. 코드를 구현할 때 손가락이 아프다면 수정할 부분을 찾으라고 했었는데 확실히 으로 받는 것은 손가락이 아팠다.  아니나 다를까 리뷰어가 @ModelAttribute를 사용하는 걸 추천했다. 마침 레벨1 제이슨 톡방에서도 @ModelAttribute 에 대한 논의가 활발하길래 공부도 하고 코드에 적용을 하며 배운 것을 기록해본다.  @ModelAttribute vs. @RequestBody 간단하게 말하면 다음과 같다.  같은 경우는 parameter 값으로 DTO에 바인딩한다. 따라서 해당 DTO 객체에  메소드가 반드시 있어야 한다. 따라서 타입에 …","frontmatter":{"date":"March 25, 2021","title":"@ModelAttribute vs. @RequestBody","categories":"스프링부트","author":"코다","emoji":"🖥"},"fields":{"slug":"/model-attribute-request-body/"}},"next":{"id":"173c5b8e-1b25-5de9-b81f-6d9b68fd8ac4","html":"<h2 id=\"-소개\" style=\"position:relative;\"><a href=\"#-%EC%86%8C%EA%B0%9C\" aria-label=\" 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 소개</h2>\n<p>블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다.<br>\n이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌</p>\n<p>블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다!</p>\n<blockquote>\n<p>혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 <a href=\"https://github.com/zoomKoding/zoomkoding-gatsby-blog/issues/new\">이슈</a>를 통해 문의 남겨주세요!<br>\n<a href=\"https://github.com/zoomKoding/zoomkoding.com\">스타</a>는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️</p>\n</blockquote>\n<h2 id=\"-시작하기\" style=\"position:relative;\"><a href=\"#-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\" 시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚀 시작하기</h2>\n<p>Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다.</p>\n<h3 id=\"🦖-github-page로-만들기\" style=\"position:relative;\"><a href=\"#%F0%9F%A6%96-github-page%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"🦖 github page로 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🦖 GitHub Page로 만들기</h3>\n<p>깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요!<br>\n<a href=\"https://www.zoomkoding.com/gatsby-github-blog/\">Gatsby 테마로 GitHub Blog 만들기</a></p>\n<h3 id=\"-netlify로-만들기\" style=\"position:relative;\"><a href=\"#-netlify%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\" netlify로 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔧 Netlify로 만들기</h3>\n<p>아래 버튼을 활용하면 개인 계정에 <code class=\"language-text\">zoomkoding-gatsby-blog</code>를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시에 진행할 수 있습니다. 이후에, 생성된 Repository를 clone합니다.</p>\n<p><a href=\"https://app.netlify.com/start/deploy?repository=https://github.com/zoomkoding/zoomkoding-gatsby-blog\"><img src=\"https://www.netlify.com/img/deploy/button.svg\" alt=\"Deploy to Netlify\"></a></p>\n<h3 id=\"♀️-실행하기\" style=\"position:relative;\"><a href=\"#%E2%99%80%EF%B8%8F-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"♀️ 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏃‍♀️ 실행하기</h3>\n<p>아래 명령어를 실행하여 로컬 환경에 블로그를 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install dependencies</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># Start development server</span>\n$ <span class=\"token function\">npm</span> start</code></pre></div>\n<br/>\n<p>위 명령어가 문제 없이 실행됐다면 <a href=\"http://localhost:8000\">http://localhost:8000</a>에서 블로그를 확인하실 수 있습니다.</p>\n<h2 id=\"️-블로그-정보-입력하기\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%A0%95%EB%B3%B4-%EC%9E%85%EB%A0%A5%ED%95%98%EA%B8%B0\" aria-label=\"️ 블로그 정보 입력하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ 블로그 정보 입력하기</h2>\n<p>위의 과정을 다 진행하셨다면 배포와 개발 환경이 세팅이 끝났습니다! 🙌<br>\n이제 블로그 정보를 입력하게 되면 나만의 블로그가 만들어지게 됩니다. 이를 위해 <code class=\"language-text\">gatsby-meta-config.js</code>에 있는 여러값들을 변경해줍니다.</p>\n<h3 id=\"1-블로그-기본-정보\" style=\"position:relative;\"><a href=\"#1-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4\" aria-label=\"1 블로그 기본 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 블로그 기본 정보</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">title<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">// zoomkoding.com</span>\ndescription<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">// 줌코딩의 개발일기</span>\nlanguage<span class=\"token operator\">:</span> <span class=\"token string\">'ko'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 'ko', 'en' (영어 버전도 지원하고 있습니다.)</span>\nsiteUrl<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">// https://www.zoomkoding.com</span>\nogImage<span class=\"token operator\">:</span> <span class=\"token string\">'/og-image.png'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 공유할 때 보이는 미리보기 이미지로 '/static' 하위에 넣고 싶은 이미지를 추가하시면 됩니다.</span></code></pre></div>\n<h3 id=\"2-댓글-설정\" style=\"position:relative;\"><a href=\"#2-%EB%8C%93%EA%B8%80-%EC%84%A4%EC%A0%95\" aria-label=\"2 댓글 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 댓글 설정</h3>\n<p>블로그 글들에 댓글을 달 수 있길 원하신다면 utterances를 통해서 이를 설정하실 수 있습니다.</p>\n<blockquote>\n<p>🦄 utterances 사용방법은 <a href=\"https://utteranc.es/\">링크</a>를 참고해주세요!</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">comments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    utterances<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        repo<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">// zoomkoding/zoomkoding-gatsby-blog</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"3-글쓴이-정보\" style=\"position:relative;\"><a href=\"#3-%EA%B8%80%EC%93%B4%EC%9D%B4-%EC%A0%95%EB%B3%B4\" aria-label=\"3 글쓴이 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 글쓴이 정보</h3>\n<p>글쓴이(author)에 입력하신 정보는 홈페이지와 about 페이지 상단에 있는 글쓴이를 소개하는 섹션인 bio에서 사용됩니다. <strong>description</strong>에 자신을 설명하는 문구들을 넣으면 애니메이션으로 보여지게 됩니다. bio에 들어가는 이미지를 바꾸시려면 <code class=\"language-text\">assets</code>에 원하시는 파일을 추가하시고 파일의 이름을 <strong>thumbnail</strong>에 넣어주시면 됩니다.(gif도 지원합니다!)</p>\n<p>아이폰 미모티콘으로 thumbnail을 만드는 방법이 궁금하시면 <a href=\"https://www.zoomkoding.com/memoji-to-gif/\">이 글</a>을 참고해주세요!</p>\n<blockquote>\n<p>🤖 위에서 설정한 언어에 따라 description의 포맷이 달라집니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">author<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'정진혁'</span><span class=\"token punctuation\">,</span>\n    bio<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      role<span class=\"token operator\">:</span> <span class=\"token string\">'개발자'</span><span class=\"token punctuation\">,</span>\n      description<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'사람에 가치를 두는'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'능동적으로 일하는'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이로운 것을 만드는'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      thumbnail<span class=\"token operator\">:</span> <span class=\"token string\">'zoomkoding.gif'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    social<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      github<span class=\"token operator\">:</span> <span class=\"token string\">'https://github.com/zoomKoding'</span><span class=\"token punctuation\">,</span>\n      linkedIn<span class=\"token operator\">:</span> <span class=\"token string\">'https://www.linkedin.com/in/jinhyeok-jeong-800871192'</span><span class=\"token punctuation\">,</span>\n      email<span class=\"token operator\">:</span> <span class=\"token string\">'zoomkoding@gmail.com'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2 id=\"♀️-about-page-만들기\" style=\"position:relative;\"><a href=\"#%E2%99%80%EF%B8%8F-about-page-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"♀️ about page 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙋‍♀️ about page 만들기</h2>\n<p>about 페이지 또한 gatsby-meta-config.js를 통해 생성됩니다. about 하위에 있는 timestamps와 projects에 각각 정보를 입력하시면 about 페이지가 자동 생성됩니다.</p>\n<h3 id=\"1-timestamps\" style=\"position:relative;\"><a href=\"#1-timestamps\" aria-label=\"1 timestamps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. timestamps</h3>\n<p>아래와 같이 각 timestamp 정보를 배열로 제공해주시면 입력하신 순서에 맞춰서 timestamps section에 보여지게 됩니다.</p>\n<blockquote>\n<p>links에 해당 정보가 없다면 생략해도 됩니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n    date<span class=\"token operator\">:</span> <span class=\"token string\">'2021.02 ~'</span><span class=\"token punctuation\">,</span>\n    activity<span class=\"token operator\">:</span> <span class=\"token string\">'개인 블로그 개발 및 운영'</span><span class=\"token punctuation\">,</span>\n    links<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        post<span class=\"token operator\">:</span> <span class=\"token string\">'/gatsby-starter-zoomkoding-introduction'</span><span class=\"token punctuation\">,</span>\n        github<span class=\"token operator\">:</span> <span class=\"token string\">'https://github.com/zoomkoding/zoomkoding-gatsby-blog'</span><span class=\"token punctuation\">,</span>\n        demo<span class=\"token operator\">:</span> <span class=\"token string\">'https://www.zoomkoding.com'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h3 id=\"2-projects\" style=\"position:relative;\"><a href=\"#2-projects\" aria-label=\"2 projects permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. projects</h3>\n<p>마찬가지로 각 project 정보를 배열로 제공해주시면 입력하신 순서에 맞춰서 projects section에 보여지게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'개발 블로그 테마 개발'</span><span class=\"token punctuation\">,</span>\n  description<span class=\"token operator\">:</span>\n    <span class=\"token string\">'개발 블로그를 운영하는 기간이 조금씩 늘어나고 점점 많은 생각과 경험이 블로그에 쌓아가면서 제 이야기를 담고 있는 블로그를 직접 만들어보고 싶게 되었습니다. 그동안 여러 개발 블로그를 보면서 좋았던 부분과 불편했던 부분들을 바탕으로 레퍼런스를 참고하여 직접 블로그 테마를 만들게 되었습니다.'</span><span class=\"token punctuation\">,</span>\n  techStack<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  thumbnailUrl<span class=\"token operator\">:</span> <span class=\"token string\">'blog.png'</span><span class=\"token punctuation\">,</span>\n  links<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    post<span class=\"token operator\">:</span> <span class=\"token string\">'/gatsby-starter-zoomkoding-introduction'</span><span class=\"token punctuation\">,</span>\n    github<span class=\"token operator\">:</span> <span class=\"token string\">'https://github.com/zoomkoding/zoomkoding-gatsby-blog'</span><span class=\"token punctuation\">,</span>\n    demo<span class=\"token operator\">:</span> <span class=\"token string\">'https://www.zoomkoding.com'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p>그렇게 내용을 문제 없이 입력하셨다면 나만의 블로그가 탄생한 것을 확인하실 수 있습니다.🎉</p>\n<blockquote>\n<p>변동사항을 실행 중인 블로그에서 확인하시려면 <code class=\"language-text\">npm start</code>를 통해 재실행해주세요!</p>\n</blockquote>\n<h2 id=\"️-글-쓰기\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EA%B8%80-%EC%93%B0%EA%B8%B0\" aria-label=\"️ 글 쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✍️ 글 쓰기</h2>\n<p>본격적으로 블로그에 글을 쓰려면 <code class=\"language-text\">/content</code> 아래에 디렉토리를 생성하고 <code class=\"language-text\">index.md</code>에 markdown으로 작성하시면 됩니다.</p>\n<blockquote>\n<p>이 때, 폴더의 이름은 경로를 생성하는데 됩니다.</p>\n</blockquote>\n<h3 id=\"-메타-정보\" style=\"position:relative;\"><a href=\"#-%EB%A9%94%ED%83%80-%EC%A0%95%EB%B3%B4\" aria-label=\" 메타 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏗 메타 정보</h3>\n<p>index.md 파일의 상단에는 아래와 같이 emoji, title, date, author, tags, categories 정보를 제공해야 합니다.</p>\n<blockquote>\n<p>emoji는 글머리에 보여지게 되며, categories는 띄어쓰기로 나누어 여러개를 입력할 수 있습니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\nemoji: 🧢\ntitle: Getting Started\ndate: '2021-03-22 23:00:00'\nauthor: 줌코딩\ntags: tutorial\ncategories: tutorial\n---</code></pre></div>\n<h3 id=\"-이미지-경로\" style=\"position:relative;\"><a href=\"#-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EA%B2%BD%EB%A1%9C\" aria-label=\" 이미지 경로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖼 이미지 경로</h3>\n<p>글에 이미지를 첨부하고 싶으시다면 같은 디렉토리에 이미지 파일을 추가하셔서 아래와 같이 사용하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">![사진](./[이미지 파일명])</code></pre></div>\n<h3 id=\"-목차-생성\" style=\"position:relative;\"><a href=\"#-%EB%AA%A9%EC%B0%A8-%EC%83%9D%EC%84%B1\" aria-label=\" 목차 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔍 목차 생성</h3>\n<p>글의 우측에 목차가 보이기를 원하신다면 <code class=\"language-text\">index.md</code> 파일 맨 아래에 다음 내용을 추가하시면 자동으로 목차가 생성됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```toc\n```</code></pre></div>\n<h3 id=\"-버그-리포트--문의\" style=\"position:relative;\"><a href=\"#-%EB%B2%84%EA%B7%B8-%EB%A6%AC%ED%8F%AC%ED%8A%B8--%EB%AC%B8%EC%9D%98\" aria-label=\" 버그 리포트  문의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 버그 리포트 &#x26; 문의</h3>\n<p>만일 블로그 테마를 적용하시면서 도움이 필요하시거나 궁금하신 점이 있으시다면 <a href=\"https://github.com/zoomKoding/zoomkoding-gatsby-blog/issues/new\">이슈</a>로 남겨주시면 최대한 빠르게 답변 드리도록 하겠습니다!🙋‍♂️</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%86%8C%EA%B0%9C\">👋 소개</a></li>\n<li>\n<p><a href=\"#-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">🚀 시작하기</a></p>\n<ul>\n<li><a href=\"#%F0%9F%A6%96-github-page%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\">🦖 GitHub Page로 만들기</a></li>\n<li><a href=\"#-netlify%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\">🔧 Netlify로 만들기</a></li>\n<li><a href=\"#%E2%99%80%EF%B8%8F-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\">🏃‍♀️ 실행하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%A0%95%EB%B3%B4-%EC%9E%85%EB%A0%A5%ED%95%98%EA%B8%B0\">⚙️ 블로그 정보 입력하기</a></p>\n<ul>\n<li><a href=\"#1-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4\">1. 블로그 기본 정보</a></li>\n<li><a href=\"#2-%EB%8C%93%EA%B8%80-%EC%84%A4%EC%A0%95\">2. 댓글 설정</a></li>\n<li><a href=\"#3-%EA%B8%80%EC%93%B4%EC%9D%B4-%EC%A0%95%EB%B3%B4\">3. 글쓴이 정보</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E2%99%80%EF%B8%8F-about-page-%EB%A7%8C%EB%93%A4%EA%B8%B0\">🙋‍♀️ about page 만들기</a></p>\n<ul>\n<li><a href=\"#1-timestamps\">1. timestamps</a></li>\n<li><a href=\"#2-projects\">2. projects</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EA%B8%80-%EC%93%B0%EA%B8%B0\">✍️ 글 쓰기</a></p>\n<ul>\n<li><a href=\"#-%EB%A9%94%ED%83%80-%EC%A0%95%EB%B3%B4\">🏗 메타 정보</a></li>\n<li><a href=\"#-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EA%B2%BD%EB%A1%9C\">🖼 이미지 경로</a></li>\n<li><a href=\"#-%EB%AA%A9%EC%B0%A8-%EC%83%9D%EC%84%B1\">🔍 목차 생성</a></li>\n<li><a href=\"#-%EB%B2%84%EA%B7%B8-%EB%A6%AC%ED%8F%AC%ED%8A%B8--%EB%AC%B8%EC%9D%98\">💡 버그 리포트 &#x26; 문의</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 22, 2021","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","categories":"블로그","author":"줌코딩","emoji":"🧢"},"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}},"prev":{"id":"154e5bdf-92b6-5e1e-a764-8f5e8aa71162","html":"<p>제일 핵심이 되는 차이점은 HTTPResponse Body의 생성 방식이다. </p>\n<h2 id=\"controller\" style=\"position:relative;\"><a href=\"#controller\" aria-label=\"controller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Controller</h2>\n<p>본래 Spring MVC 컨트롤러의 주 역할은 View를 반환하는 것이다. </p>\n<p>아래 사진을 보면, 클라이언트가 URL을 통해서 Dispatcher Servlet 에 요청을 보내면 적절한 Handler를 매핍하고 컨트롤러에서 해당 View를 <code class=\"language-text\">ViewResolver</code>를 통해서 반환한다.  </p>\n<p align=\"center\"><img width=\"85%\" src=\"https://user-images.githubusercontent.com/63405904/134930324-a380f854-7718-4ef1-8161-1fe94cdd2e30.png\"></p>\n<p>하지만 컨트롤러는 항상 View를 반환하는 것이 아니라 data도 반환해야한다. 이때는 @ResponseBody 어노테이션을 통해서 Json 형태로 클라이언트에 데이터를 반환할 수 있도록 해야 한다. 이때는 View를 반환할 때 사용하는 ViewResolver를 반환하는 것이 아니라 HttpMessageConverter 을 사용해서 데이터를 반환한다. </p>\n<p align=\"center\"><img width=\"85%\" src=\"https://user-images.githubusercontent.com/63405904/134930518-240c33bd-f309-47d1-b836-2ad737a5c201.png\"></p>\n<p>따라서 Data를 반환하는 응답에 대해서는 <code class=\"language-text\">@ResponseBody</code>를 붙여주어야하는데 매번 그러기가 번거로우니 Controller에 <code class=\"language-text\">@ResponseBody</code>가 자동으로 붙어있는 <code class=\"language-text\">@RestController</code>가 등장하게 된 것이다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#controller\">@Controller</a></li>\n</ul>\n</div>","frontmatter":{"date":"April 28, 2021","title":"@Controller vs. @RestController","categories":"스프링부트","author":"코다","emoji":"🖥"},"fields":{"slug":"/controller-vs-restcontroller/"}},"site":{"siteMetadata":{"siteUrl":"https://yjksw.github.io","comments":{"utterances":{"repo":"yjksw/yjksw.github.io"}}}}},"pageContext":{"slug":"/model-attribute-request-body/","nextSlug":"/gatsby-starter-zoomkoding-introduction/","prevSlug":"/controller-vs-restcontroller/"}},"staticQueryHashes":["1073350324","2938748437"]}