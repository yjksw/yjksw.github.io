{"componentChunkName":"component---src-templates-blog-template-js","path":"/high-traffic-service_5/","result":{"data":{"cur":{"id":"cbda6c6e-78e0-5537-8357-d8fbe5ec7db1","html":"<blockquote>\n<p>다음은 웹 개발자를 위한 대규모 서비스를 지탱하는 기술을 읽고 정리한 내용입니다 🙌</p>\n</blockquote>\n<br>\n<ul>\n<li>이전에는 미들웨어를 살펴보면서 운용에 대한 생각을 했다면 이제는 개발에 대한 생각을 하면서 어플리케이션 개발시 고려해야할 급소들에 대해서 살펴보도록 한다.</li>\n<li>대량의 데이터에 액세스 (그리고 이러한 데이터들을 특정 부분을 절단하기 어려운 경우가 대부분이다)를 할 대 RDBMS, MySQL등에서 처리할 수 없는 규모의 데이터를 계산하고자 할 경우를 살펴본다.</li>\n</ul>\n<br>\n<h2 id=\"강의14-용도특화형-인덱싱\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%9814-%EC%9A%A9%EB%8F%84%ED%8A%B9%ED%99%94%ED%98%95-%EC%9D%B8%EB%8D%B1%EC%8B%B1\" aria-label=\"강의14 용도특화형 인덱싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[강의14] 용도특화형 인덱싱</h2>\n<h2 id=\"인덱스와-시스템-구성---rdbms가-한계를-보일-때\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4%EC%99%80-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%84%B1---rdbms%EA%B0%80-%ED%95%9C%EA%B3%84%EB%A5%BC-%EB%B3%B4%EC%9D%BC-%EB%95%8C\" aria-label=\"인덱스와 시스템 구성   rdbms가 한계를 보일 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인덱스와 시스템 구성 - RDBMS가 한계를 보일 때</h2>\n<p>지나치게 많은 데이터를 다루는 경우 (검색 등) RDBMS로는 한계가 있다. 그렇다면 해결 방법은 ?</p>\n<ul>\n<li>배치 처리로 RDBMS에서 대량의 데이터를 추출</li>\n<li>별도의 인덱스 서버와 같은 것에 데이터를 보관</li>\n<li>웹 어플리케이션에서 RPC(Remote Procedure Call)등으로 액세스 하도록 처리</li>\n</ul>\n<h3 id=\"rpc-웹-api\" style=\"position:relative;\"><a href=\"#rpc-%EC%9B%B9-api\" aria-label=\"rpc 웹 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RPC, 웹 API</h3>\n<ol>\n<li>DB 가 정기적으로 데이터를 추출해서 인덱스 서버로 넘긴다. </li>\n<li>인덱스 서버에서 검색용 인덱스를 만든다. </li>\n<li>\n<p>WAS 서버에서 인덱스를 가지고 있는 인덱스 서버에 RPC로 액섹스 한다.</p>\n<ul>\n<li>여기서 말하는 RPC는 웹 API 이다.</li>\n<li>웹 서버에 직접 인덱스를 저장하지 않는 이유는 웹 서버의 용량이 주로 충분하지 않기 때문이다.</li>\n<li>대용량 인덱스 데이터를 여러 프로세스에서 공유하는 것은 적합하지 않다.</li>\n<li>여러 WAS를 두었을 때 각각 그런 대용량 인덱스를 가지고 있는 것은 매우 비효율적이다.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"용도특화형-인덱싱---튜닝한-데이터-구조-사용하기\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EB%8F%84%ED%8A%B9%ED%99%94%ED%98%95-%EC%9D%B8%EB%8D%B1%EC%8B%B1---%ED%8A%9C%EB%8B%9D%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"용도특화형 인덱싱   튜닝한 데이터 구조 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용도특화형 인덱싱 - 튜닝한 데이터 구조 사용하기</h2>\n<ul>\n<li>RDBMS와 같은 경우는 여러 용도를 가지고 만들어져있다 → 여러 관계형 데이터들을 여러 방식으로 처리할 수 있도록 만들어져 있다.</li>\n<li>\n<p>만일 특정 목적으로 튜닝한 데이터구조를 사용하면 그 목적에 대해서는 압도적으로 빨라질 수 있다.</p>\n<ul>\n<li>예) 검색에서의 역 인덱스</li>\n<li>자연어 처리를 모두 해두면 데이터를 전부 순회하지 않아도 검색을 처리할 수 있는 등의 속도 개선을 할 수 있음</li>\n</ul>\n</li>\n<li>\n<p>전문 검색 엔진을 사용</p>\n<ul>\n<li>대량의 데이터를 검색하고자 할 때 용이</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"강의15-이론과-실전-양쪽과의-싸움\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%9815-%EC%9D%B4%EB%A1%A0%EA%B3%BC-%EC%8B%A4%EC%A0%84-%EC%96%91%EC%AA%BD%EA%B3%BC%EC%9D%98-%EC%8B%B8%EC%9B%80\" aria-label=\"강의15 이론과 실전 양쪽과의 싸움 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[강의15] 이론과 실전 양쪽과의 싸움</h2>\n<ul>\n<li>\n<p>RDBMS에서 Join을 사용하지 말라는 것은 Bad Knowhow 같은 것이다.</p>\n<ul>\n<li>이런건 이론에서 추구하기에는 이상한 개념이지만 실전에서 마주한 노하우 같은 것이다.</li>\n<li>대규모 어플리케이션을 하면서 이론과 실전의 적절한 균형이 매우 중요하다.</li>\n<li>너무 이론을 추구하다보면 실전에서 걸림돌이 되는 경우도 많다.</li>\n<li>이론을 모른다면 엄청난 규모의 데이터에서 문제가 생겼을 때 노하우만으로는 해결되지 않는 때가 많아진다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%95%EC%9D%9814-%EC%9A%A9%EB%8F%84%ED%8A%B9%ED%99%94%ED%98%95-%EC%9D%B8%EB%8D%B1%EC%8B%B1\">강의14 용도특화형 인덱싱</a></li>\n<li>\n<p><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4%EC%99%80-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%84%B1---rdbms%EA%B0%80-%ED%95%9C%EA%B3%84%EB%A5%BC-%EB%B3%B4%EC%9D%BC-%EB%95%8C\">인덱스와 시스템 구성 - RDBMS가 한계를 보일 때</a></p>\n<ul>\n<li><a href=\"#rpc-%EC%9B%B9-api\">RPC, 웹 API</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%9A%A9%EB%8F%84%ED%8A%B9%ED%99%94%ED%98%95-%EC%9D%B8%EB%8D%B1%EC%8B%B1---%ED%8A%9C%EB%8B%9D%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">용도특화형 인덱싱 - 튜닝한 데이터 구조 사용하기</a></li>\n<li><a href=\"#%EA%B0%95%EC%9D%9815-%EC%9D%B4%EB%A1%A0%EA%B3%BC-%EC%8B%A4%EC%A0%84-%EC%96%91%EC%AA%BD%EA%B3%BC%EC%9D%98-%EC%8B%B8%EC%9B%80\">강의15 이론과 실전 양쪽과의 싸움</a></li>\n</ul>\n</div>","excerpt":"다음은 웹 개발자를 위한 대규모 서비스를 지탱하는 기술을 읽고 정리한 내용입니다 🙌 이전에는 미들웨어를 살펴보면서 운용에 대한 생각을 했다면 이제는 개발에 대한 생각을 하면서 어플리케이션 개발시 고려해야할 급소들에 대해서 살펴보도록 한다. 대량의 데이터에 액세스 (그리고 이러한 데이터들을 특정 부분을 절단하기 어려운 경우가 대부분이다)를 할 대 RDBMS, MySQL등에서 처리할 수 없는 규모의 데이터를 계산하고자 할 경우를 살펴본다. 강의14 용도특화형 인덱싱 인덱스와 시스템 구성 - RDBMS가 한계를 보일 때 지나치게 많은 데이터를 다루는 경우 (검색 등) RDBMS로는 한계가 있다. 그렇다면 해결 방법은 ? 배치 처리로 RDBMS에서 대량의 데이터를 추출 별도의 인덱스 서버와 같은 것에 데이터를 보관 웹 어플리케이션에서 RPC(Remote Procedure Call)등으로 액세스 하도록 처리 RPC, 웹 API DB 가 정기적으로 데이터를 추출해서 인덱스 서버로 넘긴다.  …","frontmatter":{"date":"September 27, 2021","title":"대규모 서비스를 지탱하는 기술 - 대규모 데이터 처리 실전 입문","categories":"웹 인프라 책 성능테스트","author":"코다","emoji":"📚"},"fields":{"slug":"/high-traffic-service_5/"}},"next":{"id":"e7c35456-c55f-522b-9f50-b7f1989bb9fe","html":"<blockquote>\n<p>다음은 웹 개발자를 위한 대규모 서비스를 지탱하는 기술을 읽고 정리한 내용입니다 🙌</p>\n</blockquote>\n<br>\n<h2 id=\"강의19-알고리즘과-평가\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%9819-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B3%BC-%ED%8F%89%EA%B0%80\" aria-label=\"강의19 알고리즘과 평가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[강의19] 알고리즘과 평가</h2>\n<h2 id=\"데이터-규모와-계산량-차이\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B7%9C%EB%AA%A8%EC%99%80-%EA%B3%84%EC%82%B0%EB%9F%89-%EC%B0%A8%EC%9D%B4\" aria-label=\"데이터 규모와 계산량 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 규모와 계산량 차이</h2>\n<ul>\n<li>\n<p>데이터가 클 수록 알고리즘이나 데이터 구조 선택이 속도에 영향을 미친다.</p>\n<ul>\n<li>ex. 선형탐색 vs. 이분탐색</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"알고리즘이란\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%B4%EB%9E%80\" aria-label=\"알고리즘이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘이란?</h2>\n<ul>\n<li>알고리즘은 값의 집합을 입력, 다른 값의 집합을 출력으로 하고 명확하게 정의된 계산절차이다.</li>\n<li>유한한 자원인 CPU나 메모리를 어떻게 활용하여 문제를 해결해야 할까?</li>\n<li>적절한 데이터구조를 사용하여 알고리즘을 구현해야지 효과가 있다.</li>\n<li>결국 측정이 중요하다 !!</li>\n</ul>\n<h2 id=\"알고리즘을-활용한-데이터-처리\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC\" aria-label=\"알고리즘을 활용한 데이터 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘을 활용한 데이터 처리</h2>\n<ul>\n<li>\n<p>과도한 알고리즘이 항상 더 효율이 좋은 것은 아니다.</p>\n<ul>\n<li>\n<p>때로는 간단한 알고리즘이 더 시간을 줄여줄 때가 있다.</p>\n<ul>\n<li>과도한 알고리즘의 경우 전처리에 많은 시간이 소요되기도 한다.</li>\n</ul>\n</li>\n<li>항상 측정이 중요하다. 단순이 데이터가 ‘적다’, ‘많다’ 라는 것으로 판단하는 것은 좋지 않다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"데이터-압축과-속도---전체적인-처리량을-높이기-위한-사고방식\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%95%95%EC%B6%95%EA%B3%BC-%EC%86%8D%EB%8F%84---%EC%A0%84%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%B2%98%EB%A6%AC%EB%9F%89%EC%9D%84-%EB%86%92%EC%9D%B4%EA%B8%B0-%EC%9C%84%ED%95%9C-%EC%82%AC%EA%B3%A0%EB%B0%A9%EC%8B%9D\" aria-label=\"데이터 압축과 속도   전체적인 처리량을 높이기 위한 사고방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 압축과 속도 - 전체적인 처리량을 높이기 위한 사고방식</h3>\n<ul>\n<li>압축이라는 것이 오히려 압축을 해제하고 처리하는 관점에서 더 무겁다고 생각할 수 있다.</li>\n<li>\n<p>하지만 처리량 관점에서는 데이터를 압축하는 것이 더 빠르다.</p>\n<ul>\n<li>컴퓨터에 CPU와 I/O라는 두 종류의 부하가 있는데, 압축을 할 경우 CPU에는 더 무리가 갈 수 있으나, I/O측면에서 보면 대기를 줄일 수 있다.</li>\n</ul>\n</li>\n<li>I/O 처리를 하며 대기하는 동안은 CPU 가 처리할 수 없다.</li>\n<li>CPU가 여유롭고 I/O가 바쁜 경우가 많으므로 I/O 부하를 줄이고 그 정도의 부담을 CPU에 넘기는 것이 전체적인 처리량을 높일수도 있다.</li>\n</ul>\n<h2 id=\"실전에서-사용하면서-느낀-점\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%A0%84%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%90%EB%82%80-%EC%A0%90\" aria-label=\"실전에서 사용하면서 느낀 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실전에서 사용하면서 느낀 점</h2>\n<ul>\n<li>처음에 단순한 정규표현식을 사용해서 구현을 했던 것을 적절한 알고리즘과 자료구조를 활용하면서 개선시키면서 느낀것들이 있다.</li>\n<li>\n<p>처음에 구현한 심플한 방식이 데이터가 적었을 때 더 적합했던 적도 있다.</p>\n<ul>\n<li>구현에 걸리는 비용이 적고, 유연성이 풍부하다.</li>\n<li>하지만 데이터가 커지면서 문제가 생긴다. 이때는 캐싱 등으로 우선 문제를 잠재우다가 결국에는 본질적인 해결책이 필요하다.</li>\n<li>즉, 현재 사용중인 알고리즘이 가지고 있는 문제점을 개선하여 문제를 개선할 필요가 있는 것이다.</li>\n</ul>\n</li>\n<li>처음부터의 최적화가 중요한 것은 아니다. 이후에 데이터의 규모가 커졌을 때 본질적인 문제 해결방법을 미리 고민하는 것이 좋다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%95%EC%9D%9819-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B3%BC-%ED%8F%89%EA%B0%80\">강의19 알고리즘과 평가</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B7%9C%EB%AA%A8%EC%99%80-%EA%B3%84%EC%82%B0%EB%9F%89-%EC%B0%A8%EC%9D%B4\">데이터 규모와 계산량 차이</a></li>\n<li><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%B4%EB%9E%80\">알고리즘이란?</a></li>\n<li>\n<p><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC\">알고리즘을 활용한 데이터 처리</a></p>\n<ul>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%95%95%EC%B6%95%EA%B3%BC-%EC%86%8D%EB%8F%84---%EC%A0%84%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%B2%98%EB%A6%AC%EB%9F%89%EC%9D%84-%EB%86%92%EC%9D%B4%EA%B8%B0-%EC%9C%84%ED%95%9C-%EC%82%AC%EA%B3%A0%EB%B0%A9%EC%8B%9D\">데이터 압축과 속도 - 전체적인 처리량을 높이기 위한 사고방식</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%8B%A4%EC%A0%84%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%90%EB%82%80-%EC%A0%90\">실전에서 사용하면서 느낀 점</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 27, 2021","title":"대규모 서비스를 지탱하는 기술 - 알고리즘 실용화","categories":"웹 인프라 책 성능테스트","author":"코다","emoji":"📚"},"fields":{"slug":"/high-traffic-service_6/"}},"prev":{"id":"dd4edf24-d044-5bc5-9894-ec3e942fa726","html":"<blockquote>\n<p>다음은 웹 개발자를 위한 대규모 서비스를 지탱하는 기술을 읽고 정리한 내용입니다 🙌</p>\n</blockquote>\n<br>\n<h2 id=\"강의29-엔터프라이즈-vs-웹-서비스\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%9829-%EC%97%94%ED%84%B0%ED%94%84%EB%9D%BC%EC%9D%B4%EC%A6%88-vs-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-label=\"강의29 엔터프라이즈 vs 웹 서비스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[강의29] 엔터프라이즈 vs. 웹 서비스</h2>\n<h2 id=\"엔터프라이즈-vs-웹-서비스---응용범위로-보는-차이\" style=\"position:relative;\"><a href=\"#%EC%97%94%ED%84%B0%ED%94%84%EB%9D%BC%EC%9D%B4%EC%A6%88-vs-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4---%EC%9D%91%EC%9A%A9%EB%B2%94%EC%9C%84%EB%A1%9C-%EB%B3%B4%EB%8A%94-%EC%B0%A8%EC%9D%B4\" aria-label=\"엔터프라이즈 vs 웹 서비스   응용범위로 보는 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>엔터프라이즈 vs. 웹 서비스 - 응용범위로 보는 차이</h2>\n<h3 id=\"웹-서비스의-특징---엔터프라이즈와-비교\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-%ED%8A%B9%EC%A7%95---%EC%97%94%ED%84%B0%ED%94%84%EB%9D%BC%EC%9D%B4%EC%A6%88%EC%99%80-%EB%B9%84%EA%B5%90\" aria-label=\"웹 서비스의 특징   엔터프라이즈와 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 서비스의 특징 - 엔터프라이즈와 비교</h3>\n<ul>\n<li>트래픽 - 엔터프라이즈에 대규모 트래픽이 일어날 일은 많이 없지만 웹 서비스에서는 대규모 트래픽이 일어나고는 한다.</li>\n<li>성장성 - 비즈니스와 연관된 엔터프라이즈는 급격히 성장하지는 않는다. 웹 서비스와 같은 경우는 폭팔적 성장이 가능하다.</li>\n<li>신뢰성 - 사람의 목숨이나 돈에 관련된 일이 많기 때문에 높은 신뢰성이 요구된다. 웹 서비스는 인명이나 돈과 깊게 관련 없는 경우가 더 많기 때문에 그정도의 신뢰성이 중요하지는 않다.</li>\n<li>\n<p>트랜잭션 - 신뢰성과 비슷한 맥락의 이야기지만 더 DB에 한정되서 이야기 한다.</p>\n<ul>\n<li>엔터프라이즈는 데이터의 정합성이 매우 중요하다. (은행에서 돈 예시)</li>\n<li>웹 서비스는 (블로그와 같이) 정합성이 일치하지 않아도 큰 문제가 생기지 않는다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"웹-서비스의-인프라---중요-3-포인트\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-%EC%9D%B8%ED%94%84%EB%9D%BC---%EC%A4%91%EC%9A%94-3-%ED%8F%AC%EC%9D%B8%ED%8A%B8\" aria-label=\"웹 서비스의 인프라   중요 3 포인트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 서비스의 인프라 - 중요 3 포인트</h2>\n<ol>\n<li>\n<p>저비용 고효율 </p>\n<ul>\n<li>항상 trade-off가 있기 때문에 저비용을 고수하기 위해서는 희생되는 무언가가 있다.</li>\n<li>이때 100% 신뢰성을 위해 많은 비용을 치루기보다 비용을 낮춰서 효율을 추구하는 방향을 택한다.</li>\n</ul>\n</li>\n<li>\n<p>확장성이나 응답성 등의 설계를 중요시</p>\n<ul>\n<li>성장속도를 모르거나 서비스의 응답성이 중요한 경우가 많다.</li>\n<li>이때 신뢰성보다 장래를 위한 확장을 고려한 설계를 한다.</li>\n<li>즉, 대부분의 시간에 양호한 상태의 응답이 이루어질 수 있도록 하는 것</li>\n</ul>\n</li>\n<li>\n<p>바뀌는 서비스 사양에 유연하게 대응할 수 있어야한다. </p>\n<ul>\n<li>빠르게 바뀐 사양에 대해서 적용하고 배포할 수 있어야한다. 빠르게 변하는 시장이기 때문에 타이밍이 중요하다.</li>\n<li>또한 배포를 간편하고 빠르게, 처리중인 요청에 영향이 안가도록 하는 것도 중요하다. 문제가 생기면 바로 이전코드로 돌아갈 수 있어야한다.</li>\n</ul>\n</li>\n</ol>\n<br>\n<h2 id=\"강의30-클라우드-vs-자체구축-인프라\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%9830-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-vs-%EC%9E%90%EC%B2%B4%EA%B5%AC%EC%B6%95-%EC%9D%B8%ED%94%84%EB%9D%BC\" aria-label=\"강의30 클라우드 vs 자체구축 인프라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[강의30] 클라우드 vs. 자체구축 인프라</h2>\n<h2 id=\"클라우드-컴퓨팅\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85\" aria-label=\"클라우드 컴퓨팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라우드 컴퓨팅</h2>\n<ul>\n<li>Amazon EC2 같은 것들을 말한다.</li>\n<li>자체구축 인프라 vs. 클라우드 컴퓨터가 대두이다.</li>\n</ul>\n<h2 id=\"클라우드의-장단점\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C%EC%9D%98-%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"클라우드의 장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라우드의 장단점</h2>\n<ul>\n<li><strong>저가로 사용하면서 확장해갈 수 있다. 즉 확장성이 가장 큰 장점이다.</strong></li>\n<li>\n<p>단점</p>\n<ul>\n<li>각 클라우드 서비스마다의 독자적인 사양에 대응해야한다.</li>\n<li>각 클라우드 서비스에서 지원하고 있는 알고리즘 사양에 대해서 더 자세히 알아가야하며, 마음대로 커스텀하지 못하는 부분이 있을 수 있다.</li>\n<li>그냥 노드가 죽어버릴 수도 있다 (?옛날 이야기?)</li>\n</ul>\n</li>\n<li>소규모 프로젝트나 학생 사용하는 용도는 클라우드 컴퓨팅이 좋은 분야라고 하는데 현재는 거의 대세가 되어 버린 것 같다.</li>\n</ul>\n<h2 id=\"자체구축-인프라의-장점\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%B2%B4%EA%B5%AC%EC%B6%95-%EC%9D%B8%ED%94%84%EB%9D%BC%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"자체구축 인프라의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자체구축 인프라의 장점</h2>\n<ul>\n<li>\n<p>하드웨어 구성을 유연하게</p>\n<ul>\n<li>클라우드 컴퓨팅의 경우 사양에 상한선이 있는데 자체 구축인 경우 ssd를 도입하는 등 커스텀할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>서비스로부터 요청에 유연하게 대응</p>\n<ul>\n<li>대수를 늘릴 뿐만 아니라 네트워크적으로 가까운 구성을 갖추는 등등을 할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>병목현상을 제어할 수 있음</p>\n<ul>\n<li>병목 현상이 있을때 클라우드 컴퓨팅 회사의 사양이나 알고리즘에 의존적을 수 밖에 없지만 자체구축이면 자체적으로 제어가 가능하다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"자체구축-인프라와-수직통합-모델\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%B2%B4%EA%B5%AC%EC%B6%95-%EC%9D%B8%ED%94%84%EB%9D%BC%EC%99%80-%EC%88%98%EC%A7%81%ED%86%B5%ED%95%A9-%EB%AA%A8%EB%8D%B8\" aria-label=\"자체구축 인프라와 수직통합 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자체구축 인프라와 수직통합 모델</h2>\n<ul>\n<li>\n<p>수직통합 모델이란?</p>\n<ul>\n<li>물리적 계층부터 서비스 설계까지 모든 것을 한 회사에세 구축하는 모델</li>\n</ul>\n</li>\n<li>\n<p>수평분산 모델이란?</p>\n<ul>\n<li>각 계층을 다른 기업이 시스템으로 제공하는 것</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%95%EC%9D%9829-%EC%97%94%ED%84%B0%ED%94%84%EB%9D%BC%EC%9D%B4%EC%A6%88-vs-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4\">강의29 엔터프라이즈 vs. 웹 서비스</a></li>\n<li>\n<p><a href=\"#%EC%97%94%ED%84%B0%ED%94%84%EB%9D%BC%EC%9D%B4%EC%A6%88-vs-%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4---%EC%9D%91%EC%9A%A9%EB%B2%94%EC%9C%84%EB%A1%9C-%EB%B3%B4%EB%8A%94-%EC%B0%A8%EC%9D%B4\">엔터프라이즈 vs. 웹 서비스 - 응용범위로 보는 차이</a></p>\n<ul>\n<li><a href=\"#%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-%ED%8A%B9%EC%A7%95---%EC%97%94%ED%84%B0%ED%94%84%EB%9D%BC%EC%9D%B4%EC%A6%88%EC%99%80-%EB%B9%84%EA%B5%90\">웹 서비스의 특징 - 엔터프라이즈와 비교</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%9B%B9-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-%EC%9D%B8%ED%94%84%EB%9D%BC---%EC%A4%91%EC%9A%94-3-%ED%8F%AC%EC%9D%B8%ED%8A%B8\">웹 서비스의 인프라 - 중요 3 포인트</a></li>\n<li><a href=\"#%EA%B0%95%EC%9D%9830-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-vs-%EC%9E%90%EC%B2%B4%EA%B5%AC%EC%B6%95-%EC%9D%B8%ED%94%84%EB%9D%BC\">강의30 클라우드 vs. 자체구축 인프라</a></li>\n<li><a href=\"#%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85\">클라우드 컴퓨팅</a></li>\n<li><a href=\"#%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C%EC%9D%98-%EC%9E%A5%EB%8B%A8%EC%A0%90\">클라우드의 장단점</a></li>\n<li><a href=\"#%EC%9E%90%EC%B2%B4%EA%B5%AC%EC%B6%95-%EC%9D%B8%ED%94%84%EB%9D%BC%EC%9D%98-%EC%9E%A5%EC%A0%90\">자체구축 인프라의 장점</a></li>\n<li><a href=\"#%EC%9E%90%EC%B2%B4%EA%B5%AC%EC%B6%95-%EC%9D%B8%ED%94%84%EB%9D%BC%EC%99%80-%EC%88%98%EC%A7%81%ED%86%B5%ED%95%A9-%EB%AA%A8%EB%8D%B8\">자체구축 인프라와 수직통합 모델</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 28, 2021","title":"대규모 서비스를 지탱하는 기술 - 대규모 데이터 처리를 지탱하는 서버/인프라 입문","categories":"웹 인프라 책 성능테스트","author":"코다","emoji":"📚"},"fields":{"slug":"/high-traffic-service_8/"}},"site":{"siteMetadata":{"siteUrl":"https://yjksw.github.io","comments":{"utterances":{"repo":"yjksw/yjksw.github.io"}}}}},"pageContext":{"slug":"/high-traffic-service_5/","nextSlug":"/high-traffic-service_6/","prevSlug":"/high-traffic-service_8/"}},"staticQueryHashes":["1073350324","2938748437"]}