{"componentChunkName":"component---src-templates-blog-template-js","path":"/db-replication-binary-log/","result":{"data":{"cur":{"id":"3144633b-9fb5-54a7-9f11-f6a48517333b","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INTRO</h2>\n<ul>\n<li>\n<p>현재 진행중인 <a href=\"https://github.com/woowacourse-teams/2021-pick-git\">프로젝트</a>에서 DB Replication을 적용했었다. </p>\n<ul>\n<li><a href=\"https://yjksw.github.io/db-replication/\">Replication 알아보기</a></li>\n</ul>\n</li>\n<li>DB replication 적용 이후 Master DB를 업그레이드 해야하는 상황에서 replicas와의 연동에 문제가 생긴적이 있었다. 이때 Master와 replicas 간의 데이터 연동 방법을 이해하고 해결한 (매우 간단한) 방법을 기록한다. </li>\n</ul>\n<h2 id=\"master-db와-replicas-동기화\" style=\"position:relative;\"><a href=\"#master-db%EC%99%80-replicas-%EB%8F%99%EA%B8%B0%ED%99%94\" aria-label=\"master db와 replicas 동기화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Master DB와 replicas 동기화</h2>\n<ul>\n<li>Master DB에 데이터를 쓰기 위해서는 replicas에서 master db 의 데이터와 연결되어 있어야 한다. 그러기 위해서 replication을 설정할 때 <code class=\"language-text\">show master status</code> 라는 명령어를 통해서 나온 <code class=\"language-text\">File</code>값과 <code class=\"language-text\">Position</code> 값을 replica db 설정시 적용해 주었다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">MariaDB [pickgit]&gt; show master status;\n+--------------------+----------+--------------+------------------+\n| File               | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n+--------------------+----------+--------------+------------------+\n| mariadb-bin.000008 | 68143505 |              |                  |\n+--------------------+----------+--------------+------------------+\n1 row in set (0.000 sec)</code></pre></div>\n<ul>\n<li>여기서 File은 master db의 binary 로그 파일이고 Position 값은 해당 파일의 현재 위치이다. </li>\n<li>\n<p>위 log 파일에는 어떤 내용이 담겨 있을까?</p>\n<blockquote>\n<p>The MariaDB binary log is a series of files that contain events. An event is a description of a modification to the contents of our database. <br>출처: Big Data and Business Intelligence</p>\n</blockquote>\n</li>\n<li>로그 파일에는 데이터베이스에서 일어난 <code class=\"language-text\">event</code>에 대해서 적혀 있는데, 여기서 <code class=\"language-text\">event</code>라고 하는 것은 데이터베이스의 컨텐츠에 대해 일어난 변경사항을 말한다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">MariaDB [pickgit]&gt; show master status;\n+--------------------+----------+--------------+------------------+\n| File               | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n+--------------------+----------+--------------+------------------+\n| mariadb-bin.000008 | 68143656 |              |                  |\n+--------------------+----------+--------------+------------------+\n1 row in set (0.000 sec)</code></pre></div>\n<ul>\n<li>실제로 테이블을 추가하는 쿼리를 날린 후 다시 확인해보니 Position값이 증가한 것을 확인할 수 있다. </li>\n<li>Replicas 설정시 위 값을 지정한다는 것은 replicas에 데이터를 업데이트하는 file과 해당 file에서의 위치를 지정하는 것이다. </li>\n<li>번외로 만일 binary loggin이 비활성되어 있는 상태에서 master 데이터베이스가 실행중이었다면 <code class=\"language-text\">show master status;</code> 명령어에 나오는 값이 비어있을 것이다. 그 경우 replicas에 master의 로그파일과 position을 지정할 때 빈 스트링 (”)과 4를 지정하면 된다. </li>\n</ul>\n<h2 id=\"문제상황-및-해결\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%83%81%ED%99%A9-%EB%B0%8F-%ED%95%B4%EA%B2%B0\" aria-label=\"문제상황 및 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제상황 및 해결</h2>\n<ul>\n<li>본래 사용한 MariaDB 버전은 10.1이었다. 하지만 Flyway를 적용한 이후 MariaDB를 10.4로 업그레이드 하지 않으면 적용할 수 없다는 오류가 생겼다. MariaDB 버전을 업그레이드 할 수 있는 방법을 찾아보았지만 현재 사용 중인 DB 데이터를 백업하고 삭제 후 10.4 버전을 새로 설치하여 데이터를 복원하라는 내용밖에 나오지 않았다. </li>\n<li>현재 Master 1개 slave 2개를 사용중이었기 때문에 DB 3개를 모두 삭제하고 재설치하는 것은 지나치게 많은 작업이라고 생각했다. (replication 설정, 유저 생성 및 권한 부여 등등 자잘한 설정이 많음) 따라서 Flyway가 직접 적용되는 Master DB만 수정하고 Slave DB는 기존의 것을 유지하기로 했다. </li>\n<li>\n<p>Master DB를 새로 구성하는 와중에 다음과 같은 문제 상황이 발생했다. </p>\n<ul>\n<li>문제 상황</li>\n<li>Master DB의 설정을 마치고 Slave에 Master를 지정하여 연결을 완료함 </li>\n<li>Master DB의 <code class=\"language-text\">replication</code> 유저에게 외부에서 쓰기 권한을 부여하지 않은 것을 깨달음 </li>\n<li>Master DB의 <code class=\"language-text\">replication</code> 유저에게 권한을 부여함</li>\n<li>Slave DB에 Master DB의 데이터가 반영이 되지 않음  </li>\n</ul>\n</li>\n<li>\n<p>Master에서 연결된 slave hosts를 확인해 보면 잘 연결되어 있는 것을 확인할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">MariaDB [pickgit]&gt; show slave hosts;\n+-----------+------+------+-----------+\n| Server_id | Host | Port | Master_id |\n+-----------+------+------+-----------+\n|         3 |      | 9000 |         1 |\n|         2 |      | 9000 |         1 |\n+-----------+------+------+-----------+\n2 rows in set (0.000 sec)</code></pre></div>\n</li>\n<li>Slave 의 상태를 확인해보면 <code class=\"language-text\">Slave_IO_State: Waiting for master to sent event</code> 라고 나와있는 것을 확인할 수 있다. </li>\n</ul>\n<p align=\"center\"><img width=\"90%\" src=\"https://user-images.githubusercontent.com/63405904/134805936-9f3469e3-aa3e-496f-91b3-ae5b7f6e881d.png\"></p>\n<ul>\n<li>위 상태의 더 아래에 <code class=\"language-text\">Last_Error</code> 와 <code class=\"language-text\">Last_SQL_Error</code>를 확인해보면 특정 쿼리에 에러가 발생했다는 로그가 출력되어 있다. 즉, <code class=\"language-text\">replication</code> 이라는 유저가 Master에서는 잘 적용이 되었지만 Slave DB에는 존재하지 않기 때문에 에러가 발생한 것이다. 해당 로그 이후에 추가 및 변경된 데이터에 대해서는 slave db에 더 이상 반영이 되지 않았다. </li>\n<li>위 문제를 해결하기 위해서는 Slave DB가 Master의 로그 파일을 읽는 Position을 위 쿼리가 실행된 이후로 옮겨서 해당 쿼리를 건너뛰어야 한다. 따라서 <code class=\"language-text\">show master status</code>를 다시 실행하여 나온 최신 position을 slave DB 설정에 넣어주어 문제를 해결했다. 여기서 주의할 점은 만일 이전에 변경된 데이터가 있다면 해당 변경 로그도 모두 건너뛰게 되니 다시 적용해주어야 한다. </li>\n</ul>\n<p><strong>[참고자료]</strong></p>\n<ul>\n<li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/replication-setup-replicas.html#replication-howto-newservers\">https://dev.mysql.com/doc/refman/8.0/en/replication-setup-replicas.html#replication-howto-newservers</a></li>\n<li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/replication-howto-masterstatus.html\">https://dev.mysql.com/doc/refman/8.0/en/replication-howto-masterstatus.html</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#intro\">INTRO</a></li>\n<li><a href=\"#master-db%EC%99%80-replicas-%EB%8F%99%EA%B8%B0%ED%99%94\">Master DB와 replicas 동기화</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C%EC%83%81%ED%99%A9-%EB%B0%8F-%ED%95%B4%EA%B2%B0\">문제상황 및 해결</a></li>\n</ul>\n</div>","excerpt":"INTRO 현재 진행중인 프로젝트에서 DB Replication을 적용했었다.  Replication 알아보기 DB replication 적용 이후 Master DB를 업그레이드 해야하는 상황에서 replicas와의 연동에 문제가 생긴적이 있었다. 이때 Master와 replicas 간의 데이터 연동 방법을 이해하고 해결한 (매우 간단한) 방법을 기록한다.  Master DB와 replicas 동기화 Master DB에 데이터를 쓰기 위해서는 replicas에서 master db 의 데이터와 연결되어 있어야 한다. 그러기 위해서 replication을 설정할 때  라는 명령어를 통해서 나온 값과  값을 replica db 설정시 적용해 주었다.  여기서 File은 master db의 binary 로그 파일이고 Position 값은 해당 파일의 현재 위치이다.  위 log 파일에는 어떤 내용이 담겨 있을까? The MariaDB binary log is a series of file…","frontmatter":{"date":"September 26, 2021","title":"DB 리플리케이션 적용시 Binary 로그 에러 해결방법","categories":"데이터베이스 인프라","author":"코다","emoji":"🚊"},"fields":{"slug":"/db-replication-binary-log/"}},"next":{"id":"0b8de3f2-07af-5ce2-8ced-e55579a73288","html":"<blockquote>\n<p>다음은 <em>성공과 실패를 결정하는 1%의 네트워크 원리</em> 를 읽고 정리한 내용입니다. 본 글은 CH1. 웹 브라우저가 메시지를 만든다 입니다 🙌</p>\n</blockquote>\n<br>\n<h2 id=\"-개요\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%9A%94\" aria-label=\" 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 개요</h2>\n<ol>\n<li>\n<p>HTTP 리퀘스트 메세지를 작성한다. </p>\n<ul>\n<li>URL을 해독하는 곳에서 브라우저의 동작이 시작된다.</li>\n<li>이 URL의 의미에 따라서 요청 메세지를 작성하고 요청 내용을 만든다.</li>\n<li>이때 HTTP 라는 프로토콜이 사용된다.</li>\n</ul>\n</li>\n<li>\n<p>웹 서버의 IP 주소를 DNS 서버에 조회</p>\n<ul>\n<li>OS에 의뢰해서 요청 메세지를 송신할 때 송신대상의 IP주소를 알아야한다.</li>\n<li>URL의 웹 도메인명으로 DNS 서버를 조회해서 IP 주소를 조사한다.</li>\n</ul>\n</li>\n<li>\n<p>전세계 DNS 서버 연대 </p>\n<ul>\n<li>다수의 DNS 서버가 연대하여 IP 주소를 조사한다.</li>\n</ul>\n</li>\n<li>\n<p>프로토콜 스택에 메시지 송신을 의뢰 </p>\n<ul>\n<li>OS에 메세지를 송신하는 동작을 의뢰한다.</li>\n<li>OS에서 제공하는 규칙에 따라서 의뢰를 해야한다.</li>\n<li>해당 프로그램을 직접 구현하는 것이 아니더라도 규칙의 큰 흐름을 알는 것이 중요하다.</li>\n</ul>\n</li>\n</ol>\n<br>\n<h2 id=\"🛺-story1-http-리퀘스트-메세지를-작성한다\" style=\"position:relative;\"><a href=\"#%F0%9F%9B%BA-story1-http-%EB%A6%AC%ED%80%98%EC%8A%A4%ED%8A%B8-%EB%A9%94%EC%84%B8%EC%A7%80%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%9C%EB%8B%A4\" aria-label=\"🛺 story1 http 리퀘스트 메세지를 작성한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛺 [STORY1] HTTP 리퀘스트 메세지를 작성한다</h2>\n<h3 id=\"url-입력\" style=\"position:relative;\"><a href=\"#url-%EC%9E%85%EB%A0%A5\" aria-label=\"url 입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URL 입력</h3>\n<ul>\n<li>\n<p>URL은 우리가 알고 있는 http 뿐 아니라 ftp, file, 등등 여러가지가 존재한다.</p>\n<ul>\n<li>\n<p>브라우저에 여러 프로토콜 존재한다</p>\n<ul>\n<li>브라우저는 여러 클라이언트 기능을 가지고 있는 복합적인 소프트웨어이기 때문</li>\n</ul>\n</li>\n<li>브라우저에서 http 요청 뿐 아니라 파일 다운로드/업로드 등의 기능도 있다.</li>\n<li>어느 기능을 사용하는지 url 에 명시된 프로토콜로 판단할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>URL에 엑세스 대상에 따라서 여러 정보를 담는다.</p>\n<ul>\n<li>웹 서버 요청일 경우 파일 경로, 포트 번호 등을 담아서 보낼 수 있다.</li>\n<li>모든 URL에는 앞에 엑세스 대상에 따라서 다른 프로토콜을 명시하고 있다. (http, ftp 등등)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"브라우저의-url-해독\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-url-%ED%95%B4%EB%8F%85\" aria-label=\"브라우저의 url 해독 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저의 URL 해독</h3>\n<p>우선 웹 서버에 엑세스 하는 경우를 기반으로 설명한다. </p>\n<ul>\n<li>URL에 파일 경로가 포함되어 있을 수 있다 → / 를 기준으로 디렉토리 구조와 파일명을 명시하여 url에 포함한다.</li>\n<li>\n<p>마지막에 파일명을 명시하지 않는 경우</p>\n<ul>\n<li>기본 파일명을 서버측에 설정하여 생략된 경우 사용한다. (index.html, default.htm 등등)</li>\n</ul>\n</li>\n<li>\n<p>마지막에 디렉토리를 생략한 경우</p>\n<ul>\n<li>루트 디렉토리의 기본 파일을 읽는 것으로 간주한다.</li>\n</ul>\n</li>\n<li>\n<p>마지막에 경로에 /가 생략된 경우 (ex. <a href=\"http://www.web.com/path\">http://www.web.com/path</a>)</p>\n<ul>\n<li>이 경우 마지막 값이 파일명인지 디렉토리인지 알 수 없다.</li>\n<li>다음과 같은 경우 우선 매칭되는 <strong>파일명</strong>이 있는지 확인하고, 없다면 매칭되는 <strong>디렉토리명</strong>이 있는지 확인한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"http기본-개념\" style=\"position:relative;\"><a href=\"#http%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90\" aria-label=\"http기본 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP기본 개념</h3>\n<ul>\n<li>URL 해독 후 액세스 해야하는 위치가 판단된다. 그때부터 명시된 프로토콜 (이 경우에는 HTTP)에 따라서 액세스를 진행한다.</li>\n<li>\n<p>HTTP 프로토콜의 요청 메세지가 담고 있는 내용</p>\n<ol>\n<li>무엇을 - URI 데이터를 저장한 경로만 쓰거나 URL을 그대로 쓸 수도 있다. </li>\n<li>어떻게 - 메소드 (GET, POST, PUT 등등) </li>\n</ol>\n</li>\n<li>\n<p>응답 메세지가 담고 있는 내용</p>\n<ol>\n<li>결과 데이터</li>\n<li>status code - 실행 결과의 상태에 대한 정보 </li>\n</ol>\n</li>\n<li>PUT 이나 DELETE를 사용하면 파일 서버 대신 웹 서버를 사용할 수도 있긴 하다. (???) p. 45</li>\n</ul>\n<h3 id=\"http-리쿼스트-메세지를-만든다\" style=\"position:relative;\"><a href=\"#http-%EB%A6%AC%EC%BF%BC%EC%8A%A4%ED%8A%B8-%EB%A9%94%EC%84%B8%EC%A7%80%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4\" aria-label=\"http 리쿼스트 메세지를 만든다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP 리쿼스트 메세지를 만든다</h3>\n<ul>\n<li>우선 URL을 판단하여 웹 서버와 파일 경로 및 파일명을 해석한 후에 HTTP 요청 메세지를 만든다.</li>\n<li>\n<p>첫번째 행 - Request Line</p>\n<ul>\n<li>메소드 - 여러 종류의 메소드 중 웹 서버에 어떻게 전달할지 메소드에 담아서 판단한다.</li>\n<li>URI - 파일이나 경로명</li>\n<li>HTTP 버전</li>\n</ul>\n</li>\n<li>\n<p>두번째 부터 - Headers</p>\n<ul>\n<li>부가적인 자세한 정보를 헤더에 추가한다.</li>\n<li>날짜, 데이터 종류, 언어, 압축 형식 등등</li>\n</ul>\n</li>\n<li>\n<p>공백 라인 이후 - Request Body</p>\n<ul>\n<li>송신할 데이터를 메세지 본문에 기재한다.</li>\n<li>주로 POST 요청인 경우 바디에 데이터를 담아서 요청한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"리퀘스트-메세지를-보낸-이후-응답이-돌아온다\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%80%98%EC%8A%A4%ED%8A%B8-%EB%A9%94%EC%84%B8%EC%A7%80%EB%A5%BC-%EB%B3%B4%EB%82%B8-%EC%9D%B4%ED%9B%84-%EC%9D%91%EB%8B%B5%EC%9D%B4-%EB%8F%8C%EC%95%84%EC%98%A8%EB%8B%A4\" aria-label=\"리퀘스트 메세지를 보낸 이후 응답이 돌아온다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리퀘스트 메세지를 보낸 이후 응답이 돌아온다.</h3>\n<ul>\n<li>기본적으로 첫번째 행을 제외하고 요청 메세지와 비슷한 형태를 지닌다.</li>\n<li>\n<p>첫번째 행 -</p>\n<ul>\n<li>요청 실행 결과 status code</li>\n<li>status 코드의 응답 문구 (Not Found)</li>\n</ul>\n</li>\n<li>응답이 오면 메세지를 추출해서 화면에 표시한다.</li>\n<li>\n<p>문장만 이루어진 응답 데이터가 아닌 경우</p>\n<ul>\n<li>\n<p>추가적으로 이미지나 영상을 담고 있는 경우 응답 문장에 tag를 추가하여 명시한다.</p>\n<ul>\n<li>ex. <code class=\"language-text\">&lt;img src=\"{이미지경로}\" /></code></li>\n</ul>\n</li>\n<li>\n<p>tag가 존재한다면</p>\n<ul>\n<li>우선 공백으로 비워둔다.</li>\n<li>이후 추가 웹 서버 액세스하여 태그에 쓰여있는 경로로 URI를 만들어서 요청 메세지를 보낸다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>하나의 요청 메세지에는 하나의 URI 만 쓰기 때문에 여러 파일이 필요하면 매번 요청을 보내야 한다.</li>\n</ul>\n<br>\n<h2 id=\"🛺-story2-웹-서버의-ip주소를-dns-서버에-조회한다\" style=\"position:relative;\"><a href=\"#%F0%9F%9B%BA-story2-%EC%9B%B9-%EC%84%9C%EB%B2%84%EC%9D%98-ip%EC%A3%BC%EC%86%8C%EB%A5%BC-dns-%EC%84%9C%EB%B2%84%EC%97%90-%EC%A1%B0%ED%9A%8C%ED%95%9C%EB%8B%A4\" aria-label=\"🛺 story2 웹 서버의 ip주소를 dns 서버에 조회한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛺 [STORY2] 웹 서버의 IP주소를 DNS 서버에 조회한다.</h2>\n<h3 id=\"ip-주소의-기본\" style=\"position:relative;\"><a href=\"#ip-%EC%A3%BC%EC%86%8C%EC%9D%98-%EA%B8%B0%EB%B3%B8\" aria-label=\"ip 주소의 기본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP 주소의 기본</h3>\n<ul>\n<li>브라우저가 담당하는 일 → URL 해독, HTTP 메세지 만들기</li>\n<li>\n<p>OS가 담당하는 일 → 메세지를 네트워크로 송출</p>\n<ul>\n<li>따라서 브라우저가 위 업무는 OS에 위임하여 메세지를 송신한다.</li>\n</ul>\n</li>\n<li>이때 URL에서 해석한 도메인명의 IP 주소를 조사해야 한다.</li>\n</ul>\n<h4 id=\"tcpip-기본-개념\" style=\"position:relative;\"><a href=\"#tcpip-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90\" aria-label=\"tcpip 기본 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TCP/IP 기본 개념</h4>\n<ul>\n<li>서브넷 - 여러 PC가 하나의 허브에 연결되어 있는 단위</li>\n<li>\n<p><strong>여러 서브넷을 라우터로 연결하여 네트워크 전체를 구성한다.</strong></p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/42672e20-86f7-4627-b0a3-49302d2675c0/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li>\n<p>네트워크 주소를 00동 00번지의 단위로 표현할 수 있다.</p>\n<ul>\n<li>00동 → 서브넷에 할당된 네트워크 번호</li>\n<li>00번지 → 호스트 번호</li>\n</ul>\n</li>\n<li><strong>네트워크 번호 + 호스트 번호</strong>가 IP 주소를 구성한다.</li>\n<li>라우터와 허브를 통해서 <strong>네트워크 주소를 계속 중계</strong>하면서 액세스 대상을 찾아간다.</li>\n<li>\n<p><strong>기본적인 흐름</strong></p>\n<ul>\n<li>송신측이 메세지를 보냄 → 가까운 허브가 운반하여 가까운 라우터에 송신 → 라우터에서 다음 라우터를 판단 → 서브넷의 허브가 해당 라우터까지 메세지를 송신함 → 반복하여 최종 도착지에 데이터가 도착</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ip의-구조\" style=\"position:relative;\"><a href=\"#ip%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-label=\"ip의 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP의 구조</h4>\n<ul>\n<li>32비트 디지털 데이터</li>\n<li>8비트씩 . 으로 구분하여 10진수로 표기 - 255.255.255.255</li>\n<li>네트워크 번호(서브넷 번호)와 호스트 번호를 판단하기 위해 넷마스크 정보를 IP에 더한다.</li>\n<li>\n<p>넷마스크 번호도 동일하게 32비트 디지털 데이터이다.</p>\n<ul>\n<li>1로 표기된 비트까지가 네트워크 번호</li>\n<li>0으로 표기된 비트를 호스트 번호로 판단한다.</li>\n<li>바이트 단위로 반드시 맞아 떨어지지는 않는다.</li>\n</ul>\n</li>\n<li>호스트 번호가 모두 0인 경우 - 서브넷 자체를 나타냄</li>\n<li>호스트 번호가 모두 1인 경우 - 서브넷 기기 전체에 대한 브로드캐스트를 나타냄</li>\n</ul>\n<h3 id=\"도메인명과-ip-주소를-구분하는-이유\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8%EB%AA%85%EA%B3%BC-ip-%EC%A3%BC%EC%86%8C%EB%A5%BC-%EA%B5%AC%EB%B6%84%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"도메인명과 ip 주소를 구분하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도메인명과 IP 주소를 구분하는 이유</h3>\n<ul>\n<li>반드시 IP 주소가 있어야지 수신 상대와 연결될 수 있는데 번호로 구성된 IP를 기억하기는 어렵기 때문에 도메인명을 쓰도록 한다.</li>\n<li>\n<p>도메인명 만으로 네트워크 통신을 하게 된다면 주소에 대한 바이트가 균일하지 않고 지나치게 클 수 있다.</p>\n<ul>\n<li>데이터 운반 동작에 더 많은 시간이 걸려 속도가 느려진다.</li>\n</ul>\n</li>\n<li>따라서 사용자는 도메인명만 기억하면 해당 IP 주소를 알아서 찾아주는 <strong>DNS</strong>를 사용한다.</li>\n</ul>\n<h3 id=\"socket-라이브러리가-ip-주소-찾는-기능을-제공\" style=\"position:relative;\"><a href=\"#socket-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EA%B0%80-ip-%EC%A3%BC%EC%86%8C-%EC%B0%BE%EB%8A%94-%EA%B8%B0%EB%8A%A5%EC%9D%84-%EC%A0%9C%EA%B3%B5\" aria-label=\"socket 라이브러리가 ip 주소 찾는 기능을 제공 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Socket 라이브러리가 IP 주소 찾는 기능을 제공</h3>\n<ul>\n<li>DNS 동일하게 요청 메세지 + 응답 메세지의 구조로 데이터를 찾아내는 것이다.</li>\n<li>DNS 서버에 요청 메세지를 보내어 도메인명을 의뢰하는 DNS 클라이언트는 <strong>DNS 리졸버</strong>이다.</li>\n<li>DNS resolution → DNS 원리로 IP 주소를 조사하는 것 (DNS 리졸버가 수행함)</li>\n<li>\n<p><strong>DBS 리졸버는 Socket 라이브러리에 내장된 프로그램이다.</strong></p>\n<ul>\n<li>Socket 라이브러리에는 네트워크 기능과 관련된 프로그램이 집합해 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"리졸버를-이용하여-dns-서버를-조회한다\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%A1%B8%EB%B2%84%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-dns-%EC%84%9C%EB%B2%84%EB%A5%BC-%EC%A1%B0%ED%9A%8C%ED%95%9C%EB%8B%A4\" aria-label=\"리졸버를 이용하여 dns 서버를 조회한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리졸버를 이용하여 DNS 서버를 조회한다</h3>\n<ul>\n<li>Socket 라이브러리에 리졸버 메소드에 의뢰하고자 하는 도메인 명을 명시하면 IP 주소를 조회할 수 있다.</li>\n</ul>\n<h3 id=\"리졸버-내부의-작동\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%A1%B8%EB%B2%84-%EB%82%B4%EB%B6%80%EC%9D%98-%EC%9E%91%EB%8F%99\" aria-label=\"리졸버 내부의 작동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리졸버 내부의 작동</h3>\n<ul>\n<li>어플리케이션(브라우저)에서 리졸버를 호출하면서 어플리케이션은 잠시 대기한다. (리졸버로 제어가 넘어가 실행된다. 이때부터 실행주체는 Socket 라이브러리의 리졸버이다)</li>\n<li>DNS 서버에 응답 메세지를 만들어 보낸다.</li>\n<li><strong>메세지 송신 동작은 OS의 프로토콜 스택이 수행한다. LAN 어댑터를 경유하여 목표서버에 메세지가 전달된다.</strong></li>\n<li>DNS 서버가 해당 메세지를 해석하여 결과를 찾는다.</li>\n<li>응답이 오면 <code class=\"language-text\">프로토콜 스택 → 리졸버가 내용을 해독하여 IP 주소 추출 → 어플리케이션에 주소전달</code> 하는 단계를 밟는다.</li>\n<li>\n<p>DNS 서버 주소 정보는 ?</p>\n<ul>\n<li>TCP/IP 설정 항목으로 컴퓨터에 미리 설정되어 있다.</li>\n</ul>\n</li>\n</ul>\n<br>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[용어]\n\nURL - Uniform Resource Locater\n\nFTP - File Transfer Protocol\n\nURI - Unifor Resource Identifier\n\nCGI 프로그램 - 웹 서버 소프트웨어에서 프로그램을 호출할 때 정한 규칙(CGI)에 따라 움직이는 프로그램  \n\n라우터 - 패킷을 중계하는 장치 \n\n허브 - 패킷을 중계하는 장치 (리피터 허브 &amp; 스위칭 허브) \n\nDNS - Domain Name System 서버명과 IP주소를 대응, 메일 주소와 메일 서버를 대응 등등 \n\n프로토콜 스택 - OS 에 내장되어 있는 네트워크 제어 소프트웨어</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EA%B0%9C%EC%9A%94\">💡 개요</a></li>\n<li>\n<p><a href=\"#%F0%9F%9B%BA-story1-http-%EB%A6%AC%ED%80%98%EC%8A%A4%ED%8A%B8-%EB%A9%94%EC%84%B8%EC%A7%80%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%9C%EB%8B%A4\">🛺 STORY1 HTTP 리퀘스트 메세지를 작성한다</a></p>\n<ul>\n<li><a href=\"#url-%EC%9E%85%EB%A0%A5\">URL 입력</a></li>\n<li><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-url-%ED%95%B4%EB%8F%85\">브라우저의 URL 해독</a></li>\n<li><a href=\"#http%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90\">HTTP기본 개념</a></li>\n<li><a href=\"#http-%EB%A6%AC%EC%BF%BC%EC%8A%A4%ED%8A%B8-%EB%A9%94%EC%84%B8%EC%A7%80%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4\">HTTP 리쿼스트 메세지를 만든다</a></li>\n<li><a href=\"#%EB%A6%AC%ED%80%98%EC%8A%A4%ED%8A%B8-%EB%A9%94%EC%84%B8%EC%A7%80%EB%A5%BC-%EB%B3%B4%EB%82%B8-%EC%9D%B4%ED%9B%84-%EC%9D%91%EB%8B%B5%EC%9D%B4-%EB%8F%8C%EC%95%84%EC%98%A8%EB%8B%A4\">리퀘스트 메세지를 보낸 이후 응답이 돌아온다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%F0%9F%9B%BA-story2-%EC%9B%B9-%EC%84%9C%EB%B2%84%EC%9D%98-ip%EC%A3%BC%EC%86%8C%EB%A5%BC-dns-%EC%84%9C%EB%B2%84%EC%97%90-%EC%A1%B0%ED%9A%8C%ED%95%9C%EB%8B%A4\">🛺 STORY2 웹 서버의 IP주소를 DNS 서버에 조회한다.</a></p>\n<ul>\n<li>\n<p><a href=\"#ip-%EC%A3%BC%EC%86%8C%EC%9D%98-%EA%B8%B0%EB%B3%B8\">IP 주소의 기본</a></p>\n<ul>\n<li><a href=\"#tcpip-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90\">TCP/IP 기본 개념</a></li>\n<li><a href=\"#ip%EC%9D%98-%EA%B5%AC%EC%A1%B0\">IP의 구조</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8%EB%AA%85%EA%B3%BC-ip-%EC%A3%BC%EC%86%8C%EB%A5%BC-%EA%B5%AC%EB%B6%84%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\">도메인명과 IP 주소를 구분하는 이유</a></li>\n<li><a href=\"#socket-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EA%B0%80-ip-%EC%A3%BC%EC%86%8C-%EC%B0%BE%EB%8A%94-%EA%B8%B0%EB%8A%A5%EC%9D%84-%EC%A0%9C%EA%B3%B5\">Socket 라이브러리가 IP 주소 찾는 기능을 제공</a></li>\n<li><a href=\"#%EB%A6%AC%EC%A1%B8%EB%B2%84%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-dns-%EC%84%9C%EB%B2%84%EB%A5%BC-%EC%A1%B0%ED%9A%8C%ED%95%9C%EB%8B%A4\">리졸버를 이용하여 DNS 서버를 조회한다</a></li>\n<li><a href=\"#%EB%A6%AC%EC%A1%B8%EB%B2%84-%EB%82%B4%EB%B6%80%EC%9D%98-%EC%9E%91%EB%8F%99\">리졸버 내부의 작동</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 24, 2021","title":"성공과 실패를 결정하는 1%의 네트워크 원리_1","categories":"네트워크 책","author":"코다","emoji":"⚡️"},"fields":{"slug":"/one-percent-network-1/"}},"prev":{"id":"3bc20ab6-0d89-51b0-94a9-01a69ba97f70","html":"<blockquote>\n<p>다음은 웹 개발자를 위한 대규모 서비스를 지탱하는 기술을 읽고 정리한 내용입니다 🙌</p>\n</blockquote>\n<br>\n<ul>\n<li>검색엔진의 노하우를 알아두면 용도특화형 인덱스를 직접 만들어서 대규모 데이터에 대한 문제를 해결할 수 있다.</li>\n</ul>\n<br>\n<h2 id=\"강의24-전문-검색기술의-응용범위\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%9824-%EC%A0%84%EB%AC%B8-%EA%B2%80%EC%83%89%EA%B8%B0%EC%88%A0%EC%9D%98-%EC%9D%91%EC%9A%A9%EB%B2%94%EC%9C%84\" aria-label=\"강의24 전문 검색기술의 응용범위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[강의24] 전문 검색기술의 응용범위</h2>\n<ul>\n<li>\n<p>키워드</p>\n<ul>\n<li>역 인덱스</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"전문-검색의-종류\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EB%AC%B8-%EA%B2%80%EC%83%89%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"전문 검색의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전문 검색의 종류</h2>\n<h3 id=\"grep-형\" style=\"position:relative;\"><a href=\"#grep-%ED%98%95\" aria-label=\"grep 형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>grep 형</h3>\n<ul>\n<li>전부 읽어가면서 검색하는 것</li>\n<li>시간이 오래 걸린다.</li>\n<li>즉시성이 좋다 → 문서가 갱신되더라도 바로 검색할 수 있으며 검색누락이 없다.</li>\n<li>병렬화 하기가 간단하다 → 분할해서 검색하기 편리하다</li>\n</ul>\n<h3 id=\"suffix-형\" style=\"position:relative;\"><a href=\"#suffix-%ED%98%95\" aria-label=\"suffix 형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>suffix 형</h3>\n<ul>\n<li>검색 가능한 형태로 검색 대상 전문을 보유한다.</li>\n<li>구현이 어렵다.</li>\n</ul>\n<h3 id=\"역-인덱스형\" style=\"position:relative;\"><a href=\"#%EC%97%AD-%EC%9D%B8%EB%8D%B1%EC%8A%A4%ED%98%95\" aria-label=\"역 인덱스형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>역 인덱스형</h3>\n<ul>\n<li>단어와 문서를 연관짓는 것</li>\n<li>문서와 별도로 역 인덱스를 만들어야 한다. → 즉 전처리가 필요하다. 즉시성이 떨어진다.</li>\n<li>인덱스를 압축함으로 컴팩트하게 가져갈 수 있다. 대규모화 하기 가 쉽다.</li>\n</ul>\n<br>\n<h2 id=\"강의26검색엔진의-내부구조\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%9826%EA%B2%80%EC%83%89%EC%97%94%EC%A7%84%EC%9D%98-%EB%82%B4%EB%B6%80%EA%B5%AC%EC%A1%B0\" aria-label=\"강의26검색엔진의 내부구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[강의26]검색엔진의 내부구조</h2>\n<h2 id=\"역-인덱스의-구조---dictionary--postings\" style=\"position:relative;\"><a href=\"#%EC%97%AD-%EC%9D%B8%EB%8D%B1%EC%8A%A4%EC%9D%98-%EA%B5%AC%EC%A1%B0---dictionary--postings\" aria-label=\"역 인덱스의 구조   dictionary  postings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>역 인덱스의 구조 - Dictionary + Postings</h2>\n<ul>\n<li>어떠한 단어 (dictionary 형태)에서 연결되어 있는 문서(postings)를 바로 찾을 수 있는 것.</li>\n<li>Postings의 경우 문서 ID만을 공유하고 있기도 한데, 문서의 어느 위치에 출현하는지도 보유하기도 한다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%95%EC%9D%9824-%EC%A0%84%EB%AC%B8-%EA%B2%80%EC%83%89%EA%B8%B0%EC%88%A0%EC%9D%98-%EC%9D%91%EC%9A%A9%EB%B2%94%EC%9C%84\">강의24 전문 검색기술의 응용범위</a></li>\n<li>\n<p><a href=\"#%EC%A0%84%EB%AC%B8-%EA%B2%80%EC%83%89%EC%9D%98-%EC%A2%85%EB%A5%98\">전문 검색의 종류</a></p>\n<ul>\n<li><a href=\"#grep-%ED%98%95\">grep 형</a></li>\n<li><a href=\"#suffix-%ED%98%95\">suffix 형</a></li>\n<li><a href=\"#%EC%97%AD-%EC%9D%B8%EB%8D%B1%EC%8A%A4%ED%98%95\">역 인덱스형</a></li>\n</ul>\n</li>\n<li><a href=\"#%EA%B0%95%EC%9D%9826%EA%B2%80%EC%83%89%EC%97%94%EC%A7%84%EC%9D%98-%EB%82%B4%EB%B6%80%EA%B5%AC%EC%A1%B0\">강의26검색엔진의 내부구조</a></li>\n<li><a href=\"#%EC%97%AD-%EC%9D%B8%EB%8D%B1%EC%8A%A4%EC%9D%98-%EA%B5%AC%EC%A1%B0---dictionary--postings\">역 인덱스의 구조 - Dictionary + Postings</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 27, 2021","title":"대규모 서비스를 지탱하는 기술 - 전문 검색기술","categories":"웹 인프라 책 성능테스트","author":"코다","emoji":"📚"},"fields":{"slug":"/high-traffic-service_7/"}},"site":{"siteMetadata":{"siteUrl":"https://yjksw.github.io","comments":{"utterances":{"repo":"yjksw/yjksw.github.io"}}}}},"pageContext":{"slug":"/db-replication-binary-log/","nextSlug":"/one-percent-network-1/","prevSlug":"/high-traffic-service_7/"}},"staticQueryHashes":["1073350324","2938748437"]}