{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/운영체제","result":{"pageContext":{"currentCategory":"운영체제","categories":["All","웹","책","성능테스트","인프라","스프링부트","네트워크","자바","알고리즘","데이터베이스","JPA","스프링","프로젝트","설계","테스트","머신러닝","운영체제","블로그","운영","빌드","기타"],"edges":[{"node":{"id":"80eec19c-30a9-53ed-bbfd-bb60c8bcfc25","excerpt":"💡 INTRO 팀과 함께 나름 큰 프로젝트를 진행했다. 또한 추후에 있을 꽤 많은 사람들(약 100명 예상)이 참여하는 데모를 준비했다.  실제 사람들에게 사용되려니 고려해야할 것이 굉장히 많았다.  기능이 제대로 돌아가는 것도 중요하지만 많은 사용자에게 실제로 서비스 될 수 있는지까지 고려해야했다.  따라서 어플리케이션이 실제로 구동되는 OS에 대한 지식이 없이는 어플리케이션의 안정성에 대한 판단력을 가지기 어렵다고 생각했다.  따라서 운영체제 관련 책을 읽고 (추후 업로드 예정) 책에 빠진 부분을 보충하여 학습한다.  🌩 KEYWORDS  교착상태 특징  필요 조건들  자원 할당 그래프 ..  교착상태 처리 방법  교착상태 예방  상호 배제 Mutual Exclusion  점유하여 대기 Hold and Wait  비선점 No Preemption  순환 대기 Circular Wait  교착상태 회피  안전 상태 Safe State  자원 할당 그래프 알고리즘 Resource-Al…","fields":{"slug":"/os-deadlock/"},"frontmatter":{"categories":"운영체제","title":"내가 또 보기 위한 운영체제 Deadlock","date":"October 22, 2021"}},"next":{"fields":{"slug":"/process_synchronization/"}},"previous":{"fields":{"slug":"/tcp-congestion-control/"}}},{"node":{"id":"6e98f82c-055a-5bde-b249-27124d358da9","excerpt":"💡 INTRO 팀과 함께 나름 큰 프로젝트를 진행했다. 또한 추후에 있을 꽤 많은 사람들(약 100명 예상)이 참여하는 데모를 준비했다.  실제 사람들에게 사용되려니 고려해야할 것이 굉장히 많았다.  기능이 제대로 돌아가는 것도 중요하지만 많은 사용자에게 실제로 서비스 될 수 있는지까지 고려해야했다.  따라서 어플리케이션이 실제로 구동되는 OS에 대한 지식이 없이는 어플리케이션의 안정성에 대한 판단력을 가지기 어렵다고 생각했다.  따라서 운영체제 관련 책을 읽고 (추후 업로드 예정) 책에 빠진 부분을 보충하여 학습한다.  🌩 KEYWORD  경쟁 상태 Race Condition  임계 영역 문제 The Critical-Section Problem  피터슨 해결안 Peterson’s Solution - 소프트웨어 측면  세마포어 Semaphores & 뮤텍스 Mutex  동기화 문제들 유한 버퍼 문제 Readers-writers 문제 식사하는 철학자들 문제 🌩 경쟁 상태 Race c…","fields":{"slug":"/process_synchronization/"},"frontmatter":{"categories":"운영체제","title":"내가 또 보기 위한 운영체제 프로세스 동기화","date":"October 21, 2021"}},"next":{"fields":{"slug":"/jpa-default-batch-fetch-size-not-working/"}},"previous":{"fields":{"slug":"/os-deadlock/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}