{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/프로젝트","result":{"pageContext":{"currentCategory":"프로젝트","categories":["All","웹","성능테스트","인프라","책","자바","스프링부트","알고리즘","데이터베이스","스프링","JPA","설계","머신러닝","프로젝트","테스트","블로그","운영","빌드","기타"],"edges":[{"node":{"id":"876f010c-b6f8-5496-bba9-4a58ff6140b0","excerpt":"💡 Intro 진행 중인 프로젝트에서 구현한 웹 어플리케이션이 어느 정도의 부하를 견딜 수 있는지에 대한 성능테스트를 진행했다.  프로젝트는 개발자를 타켓으로 한 깃헙 레포지토리를 연동한 게시물을 업로드하여 개발자들이 자신의 작업을 공유하고 다른 이들의 프로젝트를 캐줄얼하게 엿볼 수 있는 SNS형 웹 어플리케이션이다.  사용자는 각 게시물에 관련된 태그를 남길 수 있고 해당 태그를 기반으로 검색하여 관련 게시물을 찾아볼 수 있다. (비로그인/로그인 모두 가능) 태그를 통해서 관련 게시물을 검색하는 성능테스트를 진행, 병목 지점을 분석하고 개선하는 과정을 따라가보자.  🌩 사전 작업 테스트 더미 데이터 입력 테스트를 진행하기 위해서는 실제 운영환경과 최대한 유사한 환경에서 테스트하는 것이 중요하다.  운영환경과 유사한 환경이라고 하면 크게 1) 인프라 구조 2) 데이터 두 가지가 있다.  먼저 대량의 더미 데이터를 입력하도록 한다. (팀원 케빈이 수고해주었다 !! 👍) MariaDB…","fields":{"slug":"/project-pickgit-tag-performance-test-1/"},"frontmatter":{"categories":"웹 프로젝트 성능테스트 데이터베이스","title":"K6를 활용한 성능테스트 경험기 1 - 태그 검색 기능 향상","date":"October 15, 2021"}},"next":{"fields":{"slug":"/project-pickgit-tag-performance-test-2/"}},"previous":{"fields":{"slug":"/netflix-performance-analysis/"}}},{"node":{"id":"8912f646-45ee-5117-87b0-27ff15400fe1","excerpt":"💡 Intro 이전 포스트에서 진행한 프로젝트에서 태그 검색 성능 테스트에 대한 결과를 보고 개선대상을 파악하고 개선한다.  개선 후 테스트를 재진행하여 결과를 비교한다.  🌩 쿼리 진단 이전 포스트에서 진행한 성능 테스트를 통해 DB 쿼리 쪽 병목이 있다는 것을 알아냈다. 구체적으로 쿼리를 자세히 살펴보면서 어떤 문제가 있는지 확인해보자.  태그 검색 시 파생되는 추가 쿼리  아래는 태그를 검색했을 때 그 결과를 반환하기까지 수행되는 쿼리이다.  ’——————-’ 사이에 있는 쿼리가 실제 태그 검색 쿼리 그 이후는 post 결과를 리턴하기 위해서 postAssemble 하면서 파생되는 추가 쿼리 검색 된 포스트에 태그가 1개인 경우 - tag 조회 쿼리가 1번 발생 검색 된 포스트에 태그가 3개인 경우 - tag 조회 쿼리가 3번 발생 게시물에 있는 태그 갯수만큼 추가 쿼리가 발생하는 것으로 보인다. (JPA N+1 문제)  이 부분을 개선하여 태그 갯수와 상관없이 하나의 추가 …","fields":{"slug":"/project-pickgit-tag-performance-test-2/"},"frontmatter":{"categories":"웹 프로젝트 성능테스트 데이터베이스","title":"K6를 활용한 성능테스트 경험기 2 - 태그 검색 기능 향상","date":"October 15, 2021"}},"next":{"fields":{"slug":"/jpa-fetch-join-nickname/"}},"previous":{"fields":{"slug":"/project-pickgit-tag-performance-test-1/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}