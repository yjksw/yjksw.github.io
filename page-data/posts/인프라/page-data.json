{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/인프라","result":{"pageContext":{"currentCategory":"인프라","categories":["All","웹","스프링부트","자바","스프링","JPA","데이터베이스","설계","인프라","테스트","블로그","운영","알고리즘","빌드","머신러닝"],"edges":[{"node":{"id":"3144633b-9fb5-54a7-9f11-f6a48517333b","excerpt":"INTRO 현재 진행중인 프로젝트에서 DB Replication을 적용했었다.  Replication 알아보기 DB replication 적용 이후 Master DB를 업그레이드 해야하는 상황에서 replicas와의 연동에 문제가 생긴적이 있었다. 이때 Master와 replicas 간의 데이터 연동 방법을 이해하고 해결한 (매우 간단한) 방법을 기록한다.  Master DB와 replicas 동기화 Master DB에 데이터를 쓰기 위해서는 replicas에서 master db 의 데이터와 연결되어 있어야 한다. 그러기 위해서 replication을 설정할 때  라는 명령어를 통해서 나온 값과  값을 replica db 설정시 적용해 주었다.  여기서 File은 master db의 binary 로그 파일이고 Position 값은 해당 파일의 현재 위치이다.  위 log 파일에는 어떤 내용이 담겨 있을까? The MariaDB binary log is a series of file…","fields":{"slug":"/db-replication-binary-log/"},"frontmatter":{"categories":"데이터베이스 인프라","title":"DB 리플리케이션 적용시 Binary 로그 에러 해결방법","date":"September 26, 2021"}},"next":{"fields":{"slug":"/behavior-parameterization/"}},"previous":{"fields":{"slug":"/jpa-fetch-join-nickname/"}}},{"node":{"id":"11b32bd6-6da4-513d-9a84-05d7450180a7","excerpt":"INTRO DB Replication을 MySQL 공식 홈페이지에서 찾아보면 다음과 같이 말한다.     Replication enables data from one MySQL databse server (known as a source) to be copied to one or more MySQL database servers (know as replicas) \n출처 : 링크 즉, 하나의 데이터베이스(master/source)에서 다른 하나 또는 그 이상의 데이터베이스(slaves/replicas)로 데이터를 복제하여 저장하는 것이다.  Replication은 비동기로 동작한다. 따라서 replicas가 master에 지속적으로 연결되어는 동기식으로 동작하지 않는다.  설정에 따라서 여러 데이터베이스, 선택된 데이터베이스, 선택된 테이블에만 replication을 적용할 수도 있다.  MySQL replication 장점 공식 홈페이지에 나와있는 장점 4가지는 다음과 같다.  S…","fields":{"slug":"/db-replication/"},"frontmatter":{"categories":"데이터베이스 인프라","title":"DB 리플리케이션 적용하기","date":"September 10, 2021"}},"next":{"fields":{"slug":"/cookie-session/"}},"previous":{"fields":{"slug":"/behavior-parameterization/"}}},{"node":{"id":"ff4d68a5-f01f-5ae1-92ba-074f403b2c61","excerpt":"Intro 이번에 프로젝트를 진행하면서 보안상의 이유로 직접 S3 서버에 접근할 수 없었기 때문에 AWS에서 제공하는 CDN 서비스인 CloudFront를 통해서 이미지 등의 리소스에 접근해야 했다. (CDN서버의 본래 목적과는 다소 다른 이유로 사용했다.) CDN은 어떤 기술이며, 장점이 무엇이고, 어떻게 동작하는지에 대해서 알아본다.  CDN을 퉁해 누릴 수 있는 보안적인 이점은 무엇이며, 프로젝트를 진행하면서 CloudFront를 어떻게 활용했는지에 대해서 작성한다.  CDN이란 무엇인가? CDN은 Content Delivery Network의 약자이다. 직역하자면 컨텐츠를 전달해주는 네트워크이다. CDN 컨텐츠를 전송하는 물리적인 서버가 지리적으로 여러곳에 상주하며 유저와 가까이 위치한 서버에서 요청한 컨텐츠를 고속으로 제공해준다.  CDN이 제공하는 컨텐츠는 ,  파일, , 이미지, 동영상 등의 대부분의 인터넷 콘텐츠이다. CDN 서비스에 대해서 설명하는 예시에 항상 등장…","fields":{"slug":"/cdn/"},"frontmatter":{"categories":"인프라","title":"CDN 알아보기","date":"September 02, 2021"}},"next":{"fields":{"slug":"/jpa-query-bug/"}},"previous":{"fields":{"slug":"/oauth/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}